{"version":3,"file":"379b34f3-a56feec73eb2dd8f61a7.js","mappings":"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","sources":["webpack://commerce-webapi/./node_modules/@adobe/gatsby-theme-aio/src/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '../AnchorLink';\nimport { Item as MenuItem, Menu } from '../Menu';\nimport { Popover } from '../Popover';\nimport PropTypes from 'prop-types';\nimport { MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, SIDENAV_WIDTH, SEARCH_PARAMS, isExternalLink } from '../../utils';\nimport { getIndexesFromProduct } from '../../../algolia/helpers/get-products-indexes.js';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '../ActionButton';\nimport { Close, Magnify } from '../Icons';\nimport { Checkbox } from '../Checkbox';\nimport { ProgressCircle } from '../ProgressCircle';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = (html) =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst clearQueryStringParameters = () => {\n  window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst searchSuggestions = async (algolia, query, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices) => {\n  const queries = [];\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  // By default use all indexes\n  if (searchIndex[0] === SEARCH_INDEX_ALL) {\n    searchIndex = indexes;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchProductNames = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL);\n    const localProductIndexes = getIndexesFromProduct(searchProductNames[0]);\n    searchIndex = [...localProductIndexes, ...indexes.filter((index) => !searchProductNames.includes(index))].filter(index => indexes.includes(index));\n  }\n\n  searchIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['objectID', 'url', 'title', 'description']\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (algolia, query, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, keywords) => {\n\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => { return indexPrefix ? `${indexPrefix}-${indexName}` : indexName });\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  if (selectedIndex.includes('all')) {\n    selectedIndex = indexes;\n  } else {\n    selectedIndex = selectedIndex.filter(selected => indexes.includes(selected));\n  }\n\n  const queries = [];\n\n  selectedIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['objectID', 'url', 'product'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map((keyword) => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND ')\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, path, _highlightResult }) => {\n    let urlPath = ''\n    if (path) {\n      // console.log(path);\n      urlPath = path;\n    } else {\n      // console.log(url);\n      if (url.includes('https://developer.adobe.com')) {\n        urlPath = url.replace('https://developer.adobe.com', '');\n      } else {\n        urlPath = url;\n      }\n    }\n\n    // TODO corrupted record url check\n    if (!isExternalLink(urlPath)) {\n      // Verify url is unique\n      if (!results.find((result) => result.url === urlPath)) {\n        results.push({\n          objectID,\n          url: urlPath,\n          _highlightResult\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach((keyword) => {\n      const found = results.find((result) => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS]?.[keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS]?.[keyword] });\n      }\n    });\n  }\n};\n\nconst setTargetOrigin = () => {\n  const parentURL = document.referrer;\n\n  if (parentURL.indexOf('localhost') >= 0 || parentURL.indexOf('developer-stage.adobe') >= 0 || parentURL.indexOf('hlx.page') >= 0 || parentURL.indexOf('hlx.live') >= 0 || parentURL.indexOf('developer.adobe') >= 0) {\n    return parentURL;\n  } else {\n    return false;\n  }\n};\n\nconst Search = ({ algolia, indexAll, indexPrefix, showSearch, setShowSearch, searchButtonId, isIFramed }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [oldSearchQuery, setOldSearchQuery] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(['all']);\n  const [searchIndex, setSearchIndex] = useState([SEARCH_INDEX_ALL]);\n  const [existingIndices, setExistingIndices] = useState([]);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productResults, setProductResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n  const [searchQueryCounter, setSearchQueryCounter] = useState(0);\n\n  const search = async () => {\n    if (searchQuery.length) {\n      let search;\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      if (isIFramed) {\n        const message = JSON.stringify({ 'query': searchQuery, 'keywords': selectedKeywords, 'index': selectedIndex });\n        const targetOrigin = setTargetOrigin();\n        if (targetOrigin) {\n          parent.postMessage(message, targetOrigin);\n        }\n      }\n\n      setShowSearchResults(true);\n\n      if (searchQuery !== oldSearchQuery) {\n        setIsLoading(true);\n        search = await searchIndexes(algolia, searchQuery, indexPrefix, ['all'], indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      } else {\n        search = await searchIndexes(algolia, searchQuery, indexPrefix, selectedIndex, indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      }\n\n      const localProduct = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL)[0];\n\n      const mappedProductResults = [SEARCH_INDEX_ALL];\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          if (facets === undefined) return;\n          if (hits.length > 0) {\n            const product = hits[0].product;\n\n            if (product) {\n              if (!mappedProductResults.includes(product)) {\n                if (product !== localProduct) {\n                  mappedProductResults.push(product);\n                } else {\n                  mappedProductResults.splice(1, 0, localProduct);\n                }\n              }\n            }\n          }\n\n          mapSearchResults(hits, mappedSearchResults);\n          mapKeywordResults(facets, mappedKeywordResults);\n\n          return true;\n        });\n      }\n      if (searchQuery !== oldSearchQuery) {\n        setProductResults(mappedProductResults);\n        setOldSearchQuery(searchQuery);\n        if (localProduct && mappedProductResults.includes(localProduct)) {\n          setSelectedIndex(getIndexesFromProduct(localProduct));\n          setTriggerSearch(true);\n        } else {\n          setSearchResults(mappedSearchResults);\n          setKeywordResults(mappedKeywordResults);\n          setIsLoading(false);\n        }\n      } else {\n        setSearchResults(mappedSearchResults);\n        setKeywordResults(mappedKeywordResults);\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (isIFramed) {\n\n      window.addEventListener(\"message\", (e) => {\n        const message = JSON.parse(e.data);\n        if (message.localPathName) {\n          let localPathName = message.localPathName;\n          if (localPathName !== \"/\") {\n            // make sure path name has a slash at start/end to match path-prefix format \n            if (!localPathName.startsWith('/')) { localPathName = `/${localPathName}` }\n            if (!localPathName.endsWith('/')) { localPathName = `${localPathName}/` }\n            const localProduct = indexAll.find(product => product.productIndices.some(idx => {\n              return localPathName.startsWith(idx.indexPathPrefix);\n            }));\n\n            if (localProduct?.productName) {\n              setSearchIndex([localProduct.productName, ...searchIndex]);\n            }\n          }\n\n          const reply = JSON.stringify({ received: message.localPathName });\n          parent.postMessage(reply, \"*\");\n        }\n      });\n    };\n\n    /* Prepare list of existing indices by cross referencing Algolia */\n\n    const algoliaIndices = await algolia.listIndices();\n    const algoliaIndexNames = Object.values(algoliaIndices.items).map(({ name }) => name)\n    // extract sub array of indices from each product and flatten/merge into single array of indices\n    const localIndexList = indexAll.map((prod) => prod.productIndices).flat().map(({ indexName }) => {\n      return indexPrefix ? `${indexPrefix}-${indexName}` : indexName\n    });\n\n    const filteredIndexes = localIndexList.filter(localIndex => algoliaIndexNames.includes(localIndex));\n    setExistingIndices(filteredIndexes);\n\n  }, [])\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index.split(','));\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    } else {\n      clearQueryStringParameters();\n    }\n  }, [showSearch]);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (searchRef.current && !searchRef.current.contains(target) && target.id !== searchButtonId) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setShowSearch(false);\n        clearQueryStringParameters();\n        const searchClose = document.getElementById(\"aio-Search-close\");\n        searchClose ? searchClose.focus() : \"\";\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, [setShowSearch]);\n\n  useEffect(() => {\n    // simple debouncing strategy for search queries while user is typing\n    const timeOutId = setTimeout(() => debounceCallback(), 500);\n    const debounceCallback = async () => {\n      if (searchQuery.length && !searchResults.length) {\n        setShowClear(true);\n\n        const suggestions = await searchSuggestions(algolia, searchQuery, indexPrefix, searchIndex, indexAll, existingIndices, setExistingIndices);\n        setSearchQueryCounter(searchQueryCounter + 1);\n        console.log('Total search queries counted is:', searchQueryCounter);\n\n        if (suggestions?.results?.length) {\n          const results = [];\n          suggestions.results.forEach(({ hits }) => {\n            mapSearchResults(hits, results);\n          });\n          setSearchSuggestionResults(results);\n\n          if (!searchResults.length) {\n            setShowSearchResults(false);\n          }\n        } else {\n          setSearchSuggestionResults([]);\n        }\n\n        setIsSuggestionsOpen(true);\n      } else {\n        setShowClear(false);\n        setIsSuggestionsOpen(false);\n      }\n    }\n\n    return () => clearTimeout(timeOutId);\n\n  }, [searchQuery])\n\n  if (isIFramed) {\n    useEffect(() => {\n      if (suggestionsRef) {\n        if (searchSuggestionResults.length > 0) {\n          const allLinks = suggestionsRef.current.querySelectorAll(\"a\");\n          if (allLinks.length > 0) {\n            allLinks.forEach(link => {\n              link.target = \"_top\";\n            });\n          }\n        }\n      }\n\n      if (searchResultsRef) {\n        if (searchResults.length > 0) {\n          const allLinks = searchResultsRef.current.querySelectorAll(\"a\");\n          if (allLinks.length > 0) {\n            allLinks.forEach(link => {\n              link.target = \"_top\";\n            });\n          }\n        }\n      }\n    }, [searchSuggestionResults, searchResults])\n  }\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? \"0\" : \"var(--spectrum-global-dimension-size-800)\"};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async (event) => {\n              event.preventDefault();\n              setSelectedKeywords([]);\n              setShowClear(true);\n              setTriggerSearch(true);\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async (e) => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <ActionButton\n                css={css`\n                  position: absolute;\n                  \n                  margin-right: var(--spectrum-global-dimension-size-100);\n                  margin-bottom: var(--spectrum-global-dimension-size-40);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-right: 0;\n                  }\n                  &:focus{\n                    border: 2px solid #007aff !important;\n                    border-radius: 15% !important;\n                  }\n                `}\n                tabIndex=\"0\"\n                isQuiet\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowSearchResults(false);\n                  clearQueryStringParameters();\n                  inputRef.current.focus();\n                }}>\n                <Close />\n              </ActionButton>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n              }\n            `}>\n            {searchSuggestionResults.length > 0 ? (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current && suggestionsRef.current.contains(document.activeElement)) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion) => {\n                  const to = `${location.origin}${searchSuggestion.url}`;\n                  const title = searchSuggestion._highlightResult.title?.value ? searchSuggestion._highlightResult.title.value : \"\";\n                  const descriptions = Object.entries(searchSuggestion._highlightResult).filter(optn => {\n                    return optn[1].matchedWords.length > 0\n                  });\n                  let content = \"\";\n                  if (descriptions.length > 1) {\n                    descriptions.sort((a, b) => {\n                      return a[1].value.length > b[1].value.length ? -1 : 1;\n                    });\n                    content = descriptions[0]?.[1]?.value?.length > descriptions[1]?.[1]?.value?.length ? descriptions[0]?.[1]?.value : descriptions[1]?.[1]?.value;\n                  } else {\n                    content = descriptions[0]?.[1]?.value ? descriptions[0]?.[1]?.value : \"\";\n                  }\n\n                  content = content.substring(0, 250);\n\n                  return (\n                    <MenuItem key={searchSuggestion.objectID} href={to}>\n                      <div\n                        css={css`\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: inherit;\n                            font-style: inherit;\n                            text-decoration: underline;\n                          }\n                        `}>\n                        <strong\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(title)\n                          }}\n                        />\n\n                        <div\n                          css={css`\n                            font-style: italic;\n                            margin: var(--spectrum-global-dimension-size-50) 0;\n                          `}>\n                          {to}\n                        </div>\n\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(content)\n                          }}\n                        />\n                      </div>\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {isLoading && (<div\n          css={css`\n                width:100%;\n                height:100%;\n                display: grid;\n                place-items: start center;\n              `}>\n          <ProgressCircle size=\"L\" />\n        </div>)}\n\n        {showSearchResults && !isLoading && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                width: ${SIDENAV_WIDTH};\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Products\n              </h4>\n              <div\n                css={css`\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 30%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {productResults.map((productName, i) => {\n                  return (\n                    <Checkbox\n                      key={i}\n                      isSelected={productName === SEARCH_INDEX_ALL ?\n                        selectedIndex.includes('all') :\n                        selectedIndex.some(index => {\n                          return getIndexesFromProduct(productName).includes(index);\n                        })\n                      }\n                      value={productName}\n                      onChange={(checked) => {\n                        if (!checked) {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                          } else {\n                            setSelectedIndex(selectedIndex.filter(index => !getIndexesFromProduct(productName).includes(index)));\n                          }\n                        } else {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(['all']);\n                          } else {\n                            setSelectedIndex([...selectedIndex.filter(index => index !== 'all'), ...getIndexesFromProduct(productName)]);\n                          }\n                        }\n                        setSelectedKeywords([]);\n                        setTriggerSearch(true);\n                      }}>\n                      <span>{productName}</span>\n                    </Checkbox>\n                  );\n                })}\n              </div>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Keywords\n              </h4>\n              <div\n                css={css`\n                    margin-bottom: var(--spectrum-global-dimension-size-100);\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 50%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {keywordResults.length > 0 ?\n                  (keywordResults.map((keywordResult, i) => {\n                    const keyword = Object.keys(keywordResult)[0];\n\n                    return (\n                      <Checkbox\n                        key={i}\n                        isSelected={selectedKeywords.includes(keyword)}\n                        value={keyword}\n                        onChange={(checked) => {\n                          if (checked) {\n                            setSelectedKeywords((selectedKeywords) => [...selectedKeywords, keyword]);\n                          } else {\n                            setSelectedKeywords(\n                              selectedKeywords.filter((selectedKeyword) => selectedKeyword !== keyword)\n                            );\n                          }\n                          setTriggerSearch(true);\n                        }}>\n                        <span\n                          css={css`\n                        white-space: nowrap;\n                        text-overflow: ellipsis;\n                        `}>{keyword}</span>\n                        {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                        {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                      </Checkbox>\n                    );\n                  }))\n                  :\n                  (<div className=\"spectrum-Body spectrum-Body--sizeS\">No filter options available</div>)}\n              </div>\n            </div>\n            <div\n              css={css`\n                height: 100%;\n              `}>\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map((searchResult) => {\n                    const to = `${location.origin}${searchResult.url}`;\n                    const title = searchResult._highlightResult.title?.value ? searchResult._highlightResult.title.value : \"\";\n                    const descriptions = Object.entries(searchResult._highlightResult).filter(optn => optn[1].matchedWords.length > 0);\n                    let content = \"\";\n                    if (descriptions.length > 1) {\n                      descriptions.sort((a, b) => {\n                        return a[1].value.length > b[1].value.length ? -1 : 1;\n                      });\n                      content = descriptions[0]?.[1]?.value?.length > descriptions[1]?.[1]?.value?.length ? descriptions[0]?.[1]?.value : descriptions[1]?.[1]?.value;\n                    } else {\n                      content = descriptions[0]?.[1]?.value ? descriptions[0]?.[1]?.value : \"\";\n                    }\n\n                    content = content.substring(0, 250);\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to}>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(title)\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to}>\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {\n        !showSearchResults && (\n          <div\n            css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed ? \"var(--spectrum-global-dimension-size-800)\" : \"calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))\"};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n          />\n        )\n      }\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.array,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","clearQueryStringParameters","searchIndexes","async","algolia","query","indexPrefix","selectedIndex","indexAll","existingIndices","setExistingIndices","keywords","indexes","length","algoliaIndices","listIndices","algoliaIndexNames","Object","values","items","map","filteredIndexes","prod","productIndices","flat","indexName","filter","localIndex","includes","selected","queries","forEach","push","facets","attributesToRetrieve","hitsPerPage","Math","ceil","filters","keyword","join","multipleQueries","mapSearchResults","hits","results","objectID","url","path","_highlightResult","urlPath","isExternalLink","find","result","Search","showSearch","setShowSearch","searchButtonId","isIFramed","isLoading","setIsLoading","useState","searchQuery","setSearchQuery","oldSearchQuery","setOldSearchQuery","setSelectedIndex","searchIndex","setSearchIndex","selectedKeywords","setSelectedKeywords","showSearchResults","setShowSearchResults","isFocused","setIsFocused","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","searchSuggestionResults","setSearchSuggestionResults","searchResults","setSearchResults","productResults","setProductResults","keywordResults","setKeywordResults","isSuggestionsOpen","setIsSuggestionsOpen","triggerSearch","setTriggerSearch","searchQueryCounter","setSearchQueryCounter","SEARCH_PARAMS","index","message","JSON","stringify","targetOrigin","parentURL","document","referrer","indexOf","setTargetOrigin","parent","postMessage","localProduct","product","mappedProductResults","mappedSearchResults","mappedKeywordResults","undefined","splice","keys","found","mapKeywordResults","getIndexesFromProduct","useEffect","addEventListener","e","parse","data","localPathName","startsWith","endsWith","some","idx","indexPathPrefix","productName","reply","received","searchParams","URL","get","split","current","focus","scrollTop","onClick","target","contains","id","removeEventListener","onEscape","key","searchClose","getElementById","timeOutId","setTimeout","debounceCallback","suggestions","searchProductNames","localProductIndexes","searchSuggestions","console","log","clearTimeout","allLinks","querySelectorAll","link","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","event","preventDefault","classNames","Magnify","onFocus","onBlur","onKeyDown","querySelector","onChange","type","placeholder","autoComplete","tabIndex","isQuiet","Close","isOpen","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","searchSuggestion","to","origin","title","descriptions","entries","optn","matchedWords","content","sort","a","b","substring","href","dangerouslySetInnerHTML","__html","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","isSelected","checked","keywordResult","selectedKeyword","searchResult","variant","xmlns","viewBox","d"],"sourceRoot":""}