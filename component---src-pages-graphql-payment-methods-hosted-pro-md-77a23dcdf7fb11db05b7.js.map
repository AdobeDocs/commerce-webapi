{"version":3,"file":"component---src-pages-graphql-payment-methods-hosted-pro-md-77a23dcdf7fb11db05b7.js","mappings":"8SAQaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,GAHsBD,MAKtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,8DACH,+DACL,SAACV,EAAW,CAACW,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,kBAAK,oFACL,kBAAK,aAAW,cAAGG,WAAW,IAC1B,KAAQ,2FACL,wCAA4C,mSACnD,kBAAK,0IACL,kBAAK,kFAAgF,cAAGA,WAAW,IAC/F,KAAQ,0FACL,kEACkC,gCACzC,eACE,GAAM,iDACH,kDACL,kBAAK,4IACL,mBAAG,gBAAKA,WAAW,IACf,IAAO,iFACP,IAAO,mEAGX,SAAC,IAAiB,CAACH,QAAQ,uBAC3B,eACE,GAAM,oCACL,uBAAYG,WAAW,MAAO,0BAAuC,cACxE,kBAAK,iGAA+F,uBAAYA,WAAW,KAAM,QAAqB,kBAAgB,uBAAYA,WAAW,KAAM,cAA2B,8CAA4C,uBAAYA,WAAW,KAAM,cAA2B,qDAElU,SAAC,IAAmB,CAACH,QAAQ,yBAC7B,eACE,GAAM,iBACH,kBACL,kBAAK,oCAAkC,uBAAYG,WAAW,KAAM,0BAAuC,uFAC3G,mBAAG,mBAAQA,WAAW,KAAM,cAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,wXAoBP,mBAAG,mBAAQA,WAAW,KAAM,eAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,iLAcX,CAEAL,EAAWM,gBAAiB,C","sources":["webpack://commerce-webapi/./src/pages/graphql/payment-methods/hosted-pro.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport HostedProWorkflow from '/src/_includes/graphql/payment-methods/hosted-pro-workflow.md';\nimport HostedProAttributes from '/src/_includes/graphql/payment-methods/hosted-pro-attributes.md';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"paypal-website-payments-pro-hosted-solution-payment-method\"\n    }}>{`PayPal Website Payments Pro Hosted Solution payment method`}</h1>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`PayPal has designated Website Payments Pro Hosted Solution as a legacy product.`}</p>\n    <p>{`PayPal's `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.paypal.com/api/nvp-soap/payflow/website-payments-pro-hosted-solution/\"\n      }}>{`Website Payments Pro Hosted Solution`}</a>{` allows merchants to accept credit cards, debit cards, and PayPal payments directly on their websites. The merchant must be based in the United Kingdom to create a new integration with this payment method. PayPal continues to support merchants with existing integrations outside the UK.`}</p>\n    <p>{`This payment method is applicable to Direct Payment and Express Checkout implementations of the Website Payments Pro Hosted Solution.`}</p>\n    <p>{`PayPal's product name for this payment method varies from country to country. `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.paypalobjects.com/webstatic/en_GB/developer/docs/pdf/hostedsolution_uk.pdf\"\n      }}>{`PayPal Website Payments\nPro Hosted Solution Integration Guide`}</a>{` provides more information.`}</p>\n    <h2 {...{\n      \"id\": \"website-payments-pro-hosted-solution-workflow\"\n    }}>{`Website Payments Pro Hosted Solution workflow`}</h2>\n    <p>{`The following diagram shows the workflow for placing an order when Website Payments Pro Hosted Solution is the selected payment method.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/commerce-webapi/assets/e32f6776d97ad8b51295886bf3296fc1/paypal-hosted-pro.svg\",\n        \"alt\": \"PayPal Website Payments Pro Hosted Solution sequence diagram\"\n      }}></img></p>\n\n    <HostedProWorkflow mdxType=\"HostedProWorkflow\" />\n    <h2 {...{\n      \"id\": \"setpaymentmethodoncart-mutation\"\n    }}><inlineCode parentName=\"h2\">{`setPaymentMethodOnCart`}</inlineCode>{` mutation`}</h2>\n    <p>{`When you set the payment method for a Website Payments Pro Hosted Solution, you must set the `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` attribute to `}<inlineCode parentName=\"p\">{`hosted_pro`}</inlineCode>{`. In addition, the payload must contain a `}<inlineCode parentName=\"p\">{`hosted_pro`}</inlineCode>{` object, which defines the following attributes:`}</p>\n\n    <HostedProAttributes mdxType=\"HostedProAttributes\" />\n    <h3 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example usage`}</h3>\n    <p>{`The following example shows the `}<inlineCode parentName=\"p\">{`setPaymentMethodOnCart`}</inlineCode>{` mutation constructed for the Website Payments Pro Hosted Solution payment method.`}</p>\n    <p><strong parentName=\"p\">{`Request:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`mutation {\n  setPaymentMethodOnCart(input: {\n    cart_id: \"H87OmEkvusP7ZPkd2634pQFxY4dKI3a4\"\n    payment_method: {\n      code: \"hosted_pro\"\n      hosted_pro: {\n        cancel_url: \"paypal/hostedpro/cancel\"\n        return_url: \"paypal/hostedpro/return\"\n      }\n    }\n  })\n  {\n    cart {\n      selected_payment_method {\n        code\n      }\n    }\n  }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Response:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"hosted_pro\",\n        }\n      }\n    }\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}