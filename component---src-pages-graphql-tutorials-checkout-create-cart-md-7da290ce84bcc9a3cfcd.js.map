{"version":3,"file":"component---src-pages-graphql-tutorials-checkout-create-cart-md-7da290ce84bcc9a3cfcd.js","mappings":"yRAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,+BACH,iCACL,kBAAK,iFACL,kBAAK,QAAM,uBAAYC,WAAW,KAAM,gBAA6B,kNAAgN,cAAGA,WAAW,IAC/R,KAAQ,uCACL,sCAA0C,6BACjD,kBAAK,wBAAsB,cAAGA,WAAW,IACrC,KAAQ,qDACP,uBAAYA,WAAW,KAAM,oBAAoC,0IAAwI,cAAGA,WAAW,IACxN,KAAQ,yCACP,uBAAYA,WAAW,KAAM,eAA+B,mFACjE,eACE,GAAM,0BACH,2BACL,kBAAK,+NACL,mBAAG,mBAAQA,WAAW,KAAM,cAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,0CAMP,mBAAG,mBAAQA,WAAW,KAAM,eAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,4GAQP,kBAAK,0EAAwE,uBAAYA,WAAW,KAAM,oCAAiD,uBAAqB,uBAAYA,WAAW,KAAM,eAA4B,8HAEzO,eACE,GAAM,uBACH,wBACL,kBAAK,0IACL,mBAAG,mBAAQA,WAAW,KAAM,cAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,oFAQP,mBAAG,mBAAQA,WAAW,KAAM,eAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,2IAUP,kBAAK,0EAAwE,uBAAYA,WAAW,KAAM,oCAAiD,uBAAqB,uBAAYA,WAAW,KAAM,eAA4B,8HAEzO,eACE,GAAM,oBACH,qBACL,kBAAK,6DAA2D,uBAAYA,WAAW,KAAM,MAAmB,qDAGpH,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-webapi/./src/pages/graphql/tutorials/checkout/create-cart.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"step-2-create-an-empty-cart\"\n    }}>{`Step 2. Create an empty cart`}</h1>\n    <p>{`The procedure for creating a cart varies for logged-in customers and guests.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`customerCart`}</inlineCode>{` query returns the active cart for the logged-in customer. If the cart does not exist, the query creates one. You must specify the customer's authorization token in the headers. Otherwise, the query fails. `}<a parentName=\"p\" {...{\n        \"href\": \"../../usage/authorization-tokens.md\"\n      }}>{`\"Get customer authorization token\"`}</a>{` describes these tokens.`}</p>\n    <p>{`For guests, use the `}<a parentName=\"p\" {...{\n        \"href\": \"../../schema/cart/mutations/create-guest-cart.md\"\n      }}><inlineCode parentName=\"a\">{`createGuestCart`}</inlineCode></a>{` mutation to create an empty shopping cart and generate a cart ID for a guest user. If the guest later logs in as a customer, use the `}<a parentName=\"p\" {...{\n        \"href\": \"../../schema/cart/mutations/merge.md\"\n      }}><inlineCode parentName=\"a\">{`mergeCarts`}</inlineCode></a>{` mutation to transfer the contents of the guest cart into the customer's cart.`}</p>\n    <h2 {...{\n      \"id\": \"create-a-customer-cart\"\n    }}>{`Create a customer cart`}</h2>\n    <p>{`The customer created in the previous step does not have an active cart. The following query creates an empty cart and returns the cart ID. You must specify the customer's authorization token in the headers of the call.`}</p>\n    <p><strong parentName=\"p\">{`Request:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`{\n  customerCart{\n    id\n  }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Response:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"customerCart\": {\n      \"id\": \"pXVxnNg4PFcK1lD60O5evqF7f4SkiRR1\"\n    }\n  }\n}\n`}</code></pre>\n    <p>{`In the subsequent tutorial steps, the unique shopping cart identifier `}<inlineCode parentName=\"p\">{`pXVxnNg4PFcK1lD60O5evqF7f4SkiRR1`}</inlineCode>{` will be listed as `}<inlineCode parentName=\"p\">{`{ CART_ID }`}</inlineCode>{`.\nCopy the value of the id attribute. Use this value in subsequent steps wherever the { CART_ID } variable is specified.`}</p>\n    <h2 {...{\n      \"id\": \"create-a-guest-cart\"\n    }}>{`Create a guest cart`}</h2>\n    <p>{`The following example creates an empty cart for a guest. Do not include an authorization token on any call made on behalf of a guest.`}</p>\n    <p><strong parentName=\"p\">{`Request:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`mutation {\n  createGuestCart {\n      cart {\n          id\n      }\n  }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Response:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"createGuestCart\": {\n      \"cart\": {\n        \"id\": \"A7jCcOmUjjCh7MxDIzu1SeqdqETqEa5h\"\n      }\n    }\n  }\n}\n`}</code></pre>\n    <p>{`In the subsequent tutorial steps, the unique shopping cart identifier `}<inlineCode parentName=\"p\">{`A7jCcOmUjjCh7MxDIzu1SeqdqETqEa5h`}</inlineCode>{` will be listed as `}<inlineCode parentName=\"p\">{`{ CART_ID }`}</inlineCode>{`.\nCopy the value of the id attribute. Use this value in subsequent steps wherever the { CART_ID } variable is specified.`}</p>\n    <h2 {...{\n      \"id\": \"verify-this-step\"\n    }}>{`Verify this step`}</h2>\n    <p>{`There are no additional verification steps. The value of `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` is not displayed on the website or in the Admin.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}