{"version":3,"file":"component---src-pages-graphql-schema-cart-queries-index-md-670c182f4cbd3e1fbacb.js","mappings":"yRAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,gBACH,iBACL,kBAAK,QAAM,uBAAYC,WAAW,KAAM,QAAqB,iFAA+E,cAAGA,WAAW,IACtJ,KAAQ,uFACP,uBAAYA,WAAW,KAAM,SAAyB,gJAC3D,kBAAK,2EAAyE,uBAAYA,WAAW,KAAM,mBAAgC,2LAG/I,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-webapi/./src/pages/graphql/schema/cart/queries/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"cart-queries\"\n    }}>{`Cart queries`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`cart`}</inlineCode>{` query returns the content of the shopper's cart. Adobe Commerce returns the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-Cart\"\n      }}><inlineCode parentName=\"a\">{`Cart`}</inlineCode></a>{` object. This object is also returned by numerous mutations, including those that add products to the cart and prepare a cart for checkout.`}</p>\n    <p>{`When Inventory Management is installed and configured, you can use the `}<inlineCode parentName=\"p\">{`pickupLocations`}</inlineCode>{` query to help a shopper determine whether their order can be picked up at a physical location. This query is most useful when the shopper has selected one or more items for purchase.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}