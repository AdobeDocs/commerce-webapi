{"version":3,"file":"component---src-pages-graphql-schema-customer-index-md-467df166065affed38b4.js","mappings":"0RAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,YACH,aACL,kBAAK,sEACL,kBAAK,2EAAyE,cAAGC,WAAW,IACxF,KAAQ,uCACL,mBAAuB,oEAAkE,cAAGA,WAAW,IAC1G,KAAQ,oGACL,0BAA8B,MACrC,kBAAK,sEAAoE,cAAGA,WAAW,IACnF,KAAQ,2FACP,uBAAYA,WAAW,KAAM,aAA6B,kDAC/D,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,eAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,uBAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,UAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,YAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,UAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,eAIxD,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-webapi/./src/pages/graphql/schema/customer/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"customer\"\n    }}>{`Customer`}</h1>\n    <p>{`A customer is a shopper who has created an account for the store.`}</p>\n    <p>{`To return or modify information about a customer, we recommend you use `}<a parentName=\"p\" {...{\n        \"href\": \"../../usage/authorization-tokens.md\"\n      }}>{`customer tokens`}</a>{` in the header of your GraphQL calls. However, you also can use `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session\"\n      }}>{`session authentication`}</a>{`.`}</p>\n    <p>{`B2B for Adobe Commerce adds the following top-level fields to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-Customer\"\n      }}><inlineCode parentName=\"a\">{`Customer`}</inlineCode></a>{` object for company administrators and users.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`job_title`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`requisition_lists`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`role`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`status`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`team`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`telephone`}</inlineCode></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}