"use strict";(self.webpackChunkcommerce_webapi=self.webpackChunkcommerce_webapi||[]).push([[6081],{85417:function(e,n,r){r.r(n),r.d(n,{_frontmatter:function(){return m},default:function(){return i}});var a,t=r(87462),o=r(63366),s=(r(15007),r(64983)),d=r(91515),u=["components"],m={},l=(a="InlineAlert",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.mdx)("div",e)}),p={_frontmatter:m},c=d.Z;function i(e){var n=e.components,r=(0,o.Z)(e,u);return(0,s.mdx)(c,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"purchase-orders-b2b"},"Purchase orders (B2B)"),(0,s.mdx)("p",null,"When B2B of Adobe Commerce is installed and purchase orders are activated for a company account, all orders are automatically created as purchase orders. Company users with the required permissions can create, edit, and delete their own purchase orders as well as those created by subordinate users."),(0,s.mdx)("p",null,"Adobe Commerce provides multiple mutations that define and manage purchase orders. However, there are no top-level queries that return lists of purchase orders or purchase order details.\nThe ",(0,s.mdx)("a",{parentName:"p",href:"../../customer/queries/customer.md"},(0,s.mdx)("inlineCode",{parentName:"a"},"customer")," query")," now returns details about purchase orders."),(0,s.mdx)("p",null,"See ",(0,s.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-admin/b2b/purchase-orders/purchase-order-flow.html"},"Purchase Orders for Companies")," in the ",(0,s.mdx)("em",{parentName:"p"},"B2B for Adobe Commerce Guide")," for information about enabling the B2B purchase order capabilities and the different workflows for online and offline payment methods."),(0,s.mdx)("p",null,"The following examples demonstrate ",(0,s.mdx)("inlineCode",{parentName:"p"},"customer")," queries that return information about purchase orders."),(0,s.mdx)(l,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,s.mdx)("p",null,"All examples require a valid ",(0,s.mdx)("a",{parentName:"p",href:"../../../customer/mutations/generate-token.md"},"customer authentication token"),"."),(0,s.mdx)("h2",{id:"return-a-list-of-purchase-orders"},"Return a list of purchase orders"),(0,s.mdx)("p",null,"The following example returns the list of purchase orders."),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Request:")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-graphql"},"{\n    customer {\n        purchase_orders(\n            currentPage: 1,\n            pageSize: 20,\n            filter: {\n                company_purchase_orders: true,\n            }\n        ) {\n            total_count\n            page_info {\n                current_page\n                page_size\n                total_pages\n            }\n            items {\n                uid\n                number\n              order {\n                id\n              }\n              created_at\n              updated_at\n              created_by {\n                firstname\n                lastname\n              }\n              status\n              order {\n                total {\n                  grand_total {\n                    value\n                    currency\n                  }\n                }\n              }\n            }\n        }\n    }\n}\n")),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Response:")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "customer": {\n      "purchase_orders": {\n        "total_count": 2,\n        "page_info": {\n          "current_page": 1,\n          "page_size": 20,\n          "total_pages": 1\n        },\n        "items": [\n          {\n            "uid": "Nw==",\n            "number": "000000007",\n            "order": null,\n            "created_at": "2023-01-25 20:59:05",\n            "updated_at": "2023-01-25 21:10:31",\n            "created_by": {\n              "firstname": "Melanie",\n              "lastname": "Shaw"\n            },\n            "status": "APPROVED"\n          },\n          {\n            "uid": "Ng==",\n            "number": "000000006",\n            "order": {\n              "id": "NQ==",\n              "total": {\n                "grand_total": {\n                  "value": 375,\n                  "currency": "USD"\n                }\n              }\n            },\n            "created_at": "2023-01-25 20:35:56",\n            "updated_at": "2023-01-31 19:45:09",\n            "created_by": {\n              "firstname": "Kevin",\n              "lastname": "Harper"\n            },\n            "status": "ORDER_PLACED"\n          }\n        ]\n      }\n    }\n  }\n}\n')),(0,s.mdx)("h2",{id:"return-details-about-one-purchase-order"},"Return details about one purchase order"),(0,s.mdx)("p",null,"The following example returns the purchase order information."),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Request:")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-graphql"},'{\n    customer {\n        purchase_order(uid: "MQ==") {\n            uid\n            number\n            created_at\n            updated_at\n            status\n            available_actions\n            created_by {\n                firstname\n                lastname\n                email\n            }\n            order {\n                number\n            }\n            comments {\n                created_at\n                text\n                author {\n                    firstname\n                    lastname\n                    email\n                }\n            }\n            history_log {\n                activity\n                created_at\n            }\n            quote {\n                items {\n                    product {\n                        sku\n                    }\n                }\n                prices {\n                    grand_total {\n                        value\n                        currency\n                    }\n                }\n            }\n        }\n    }\n}\n')),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Response:")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "customer": {\n      "purchase_order": {\n        "uid": "MQ==",\n        "number": "000000001",\n        "created_at": "2023-01-10 18:32:13",\n        "updated_at": "2023-01-10 18:32:13",\n        "status": "APPROVED",\n        "available_actions": [\n          "PLACE_ORDER"\n        ],\n        "created_by": {\n          "firstname": "John",\n          "lastname": "Doe",\n          "email": "john.doe@example.com"\n        },\n        "order": null,\n        "comments": [],\n        "history_log": [],\n        "quote": {\n          "items": [\n            {\n              "product": {\n                "sku": "Simple product"\n              }\n            }\n          ],\n          "prices": {\n            "grand_total": {\n              "value": 14,\n              "currency": "USD"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n')),(0,s.mdx)("h2",{id:"check-whether-the-customer-is-enabled-for-purchase-orders"},"Check whether the customer is enabled for purchase orders"),(0,s.mdx)("p",null,"The following example returns information whether the purchase order functionality is enabled for the customer."),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Request:")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-graphql"},"{\n    customer {\n        purchase_orders_enabled\n    }\n}\n")),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Response:")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "customer": {\n      "purchase_orders_enabled": true\n    }\n  }\n}\n')))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-graphql-schema-b-2-b-purchase-order-index-md-4f6682af2ed16325cd09.js.map