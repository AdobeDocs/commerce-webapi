{"version":3,"file":"component---src-pages-graphql-develop-index-md-c7784f02267a48e66be3.js","mappings":"yRAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,0CACH,2CACL,kBAAK,qFAAmF,uBAAYC,WAAW,KAAM,mBAAgC,iBAAe,uBAAYA,WAAW,KAAM,OAAoB,iEAA+D,cAAGA,WAAW,IAC9R,KAAQ,0EACP,uBAAYA,WAAW,KAAM,YAA4B,2HAAyH,uBAAYA,WAAW,KAAM,mBAAgC,uDAAqD,uBAAYA,WAAW,KAAM,WAAwB,oDAAkD,uBAAYA,WAAW,KAAM,mBAAgC,0BAAwB,uBAAYA,WAAW,KAAM,YAAyB,kBAC3hB,kBAAK,uBAAqB,uBAAYA,WAAW,KAAM,mBAAgC,6KAA2K,uBAAYA,WAAW,KAAM,mBAAgC,kUAAgU,uBAAYA,WAAW,KAAM,kBAA+B,wBAAsB,uBAAYA,WAAW,KAAM,4BAAyC,cAAY,uBAAYA,WAAW,KAAM,cAA2B,SAAO,uBAAYA,WAAW,KAAM,eAA4B,4CAC35B,kBAAK,QAAM,uBAAYA,WAAW,KAAM,qCAAkD,WAC1F,oBACE,eAAIA,WAAW,MAAO,oDACtB,eAAIA,WAAW,MAAO,sKACtB,eAAIA,WAAW,MAAO,iFACtB,eAAIA,WAAW,MAAO,yEACtB,eAAIA,WAAW,MAAO,uCAExB,kBAAK,aAAW,uBAAYA,WAAW,KAAM,mBAAgC,0BAAwB,uBAAYA,WAAW,KAAM,iCAA8C,mLAAiL,uBAAYA,WAAW,KAAM,uBAAoC,wCAAsC,uBAAYA,WAAW,KAAM,mBAAgC,YACrgB,eACE,GAAM,kBACH,mBACL,kBAAK,gGAA8F,uBAAYA,WAAW,KAAM,kBAA+B,8MAC/J,kBAAK,oCAAkC,uBAAYA,WAAW,KAAM,YAAyB,gBAAc,uBAAYA,WAAW,KAAM,QAAqB,qBAAmB,uBAAYA,WAAW,KAAM,SAAsB,UAAQ,uBAAYA,WAAW,KAAM,YAAyB,qFAAmF,cAAGA,WAAW,IAC9X,KAAQ,6BACL,iBAAqB,qDAAmD,cAAGA,WAAW,IACzF,KAAQ,8BACL,6BAAiC,MACxC,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,+SAUP,kBAAK,qBAAmB,uBAAYA,WAAW,KAAM,YAAyB,uBAAqB,uBAAYA,WAAW,KAAM,YAAyB,iGACzJ,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,+HAIP,kBAAK,oMACL,eACE,GAAM,4BACH,6BACL,kBAAK,2IAAyI,uBAAYA,WAAW,KAAM,QAAqB,wOAChM,kBAAK,oCAAkC,uBAAYA,WAAW,KAAM,YAAyB,oDAC7F,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,+JAQP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,+BAA4C,wBAAsB,uBAAYA,WAAW,KAAM,UAAuB,8GAA4G,uBAAYA,WAAW,KAAM,YAAyB,sDAAoD,uBAAYA,WAAW,KAAM,wBAAqC,yCAAuC,uBAAYA,WAAW,KAAM,uBAAoC,kBAAgB,uBAAYA,WAAW,KAAM,WAAwB,SAAO,uBAAYA,WAAW,KAAM,kBAA+B,8FAA4F,uBAAYA,WAAW,KAAM,2EAAwF,WACv3B,kBAAK,8DAA4D,uBAAYA,WAAW,KAAM,+BAA4C,aAC1I,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,qFAIP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,wBAAqC,2DAC7E,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,yEAKP,kBAAK,6DAA2D,uBAAYA,WAAW,KAAM,eAA4B,eACzH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,kHASP,kBAAK,sCAAoC,uBAAYA,WAAW,KAAM,eAA4B,eAClG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,wOAgBP,eACE,GAAM,6BACH,8BACL,kBAAK,+MACL,kBAAK,SAAO,uBAAYA,WAAW,KAAM,mBAAgC,sBAAoB,uBAAYA,WAAW,KAAM,aAA0B,wEAAsE,uBAAYA,WAAW,KAAM,QAAqB,iBAC5Q,kBAAK,oCAAkC,uBAAYA,WAAW,KAAM,YAAyB,gCAA8B,uBAAYA,WAAW,KAAM,YAAyB,mEACjL,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MACN,cACL,eAAIA,WAAW,KACb,MAAS,MACN,cACL,eAAIA,WAAW,KACb,MAAS,MACN,kBAGT,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,kBACjC,eAAIA,WAAW,KACb,MAAS,MACN,kBACL,eAAIA,WAAW,KACb,MAAS,MACN,qCAEP,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,WACjC,eAAIA,WAAW,KACb,MAAS,MACN,uBACL,eAAIA,WAAW,KACb,MAAS,MACN,mEAEP,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,eACjC,eAAIA,WAAW,KACb,MAAS,MACN,yBACL,eAAIA,WAAW,KACb,MAAS,MACN,gCAA8B,uBAAYA,WAAW,MAAO,aAA0B,SAAO,uBAAYA,WAAW,MAAO,eAA4B,oCAE9J,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,iBACjC,eAAIA,WAAW,KACb,MAAS,MACN,eACL,eAAIA,WAAW,KACb,MAAS,MACN,kFAEP,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,iBACjC,eAAIA,WAAW,KACb,MAAS,MACN,QACL,eAAIA,WAAW,KACb,MAAS,MACN,yKAIX,eACE,GAAM,+BACH,gCACL,kBAAK,0PAAwP,uBAAYA,WAAW,KAAM,SAAsB,uIAAqI,uBAAYA,WAAW,KAAM,gBAA6B,8MAA4M,cAAGA,WAAW,IACrsB,KAAQ,gBACL,aAAiB,2BACxB,kBAAK,6IAA2I,uBAAYA,WAAW,KAAM,MAAmB,4CAA0C,uBAAYA,WAAW,KAAM,MAAmB,MAC1R,kBAAK,oCAAkC,uBAAYA,WAAW,KAAM,YAAyB,gBAAc,uBAAYA,WAAW,KAAM,aAA0B,4BAA0B,uBAAYA,WAAW,KAAM,wBAAqC,uCAAqC,uBAAYA,WAAW,KAAM,mBAAgC,gBAAc,uBAAYA,WAAW,KAAM,iBAA8B,sFAAoF,uBAAYA,WAAW,KAAM,2EAAwF,WAClnB,kBAAK,yEACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,uGAMP,kBAAK,mCAAiC,uBAAYA,WAAW,KAAM,aAA0B,kCAAgC,uBAAYA,WAAW,KAAM,wBAAqC,0DAC/L,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,gLAaP,kBAAK,uJACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,6TAoBP,eACE,GAAM,oBACH,qBACL,kBAAK,8DACL,oBACE,eAAIA,WAAW,MAAO,sBACtB,eAAIA,WAAW,MAAO,qCACtB,eAAIA,WAAW,MAAO,kEACtB,eAAIA,WAAW,MAAO,8BAExB,kBAAK,+CACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,4NAIP,kBAAK,+BAA6B,uBAAYA,WAAW,KAAM,iBAA8B,gGAC7F,kBAAK,kGACL,eACE,GAAM,uBACH,wBACL,kBAAK,sSACL,eACE,GAAM,eACH,gBACL,kBAAK,8EAA4E,uBAAYA,WAAW,KAAM,mBAAgC,kDAC9I,mBAAG,uBAAYA,WAAW,KAAM,iCAChC,kBAAK,iBACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,uaAIP,kBAAK,YAAU,uBAAYA,WAAW,KAAM,eAA4B,6IAA2I,uBAAYA,WAAW,KAAM,UAAuB,+FACvQ,kBAAK,iBACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,2PAMP,eACE,GAAM,iBACH,kBACL,kBAAK,QAAM,uBAAYA,WAAW,KAAM,UAAuB,8IAC/D,kBAAK,sDACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,gGAEP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,iBAA8B,yBAAuB,cAAGA,WAAW,IACvG,KAAQ,qBACL,SAAa,4CACpB,kBAAK,sBAAoB,uBAAYA,WAAW,KAAM,iBAA8B,yBACpF,kBAAK,qEAAmE,uBAAYA,WAAW,KAAM,iBAA8B,gBAAc,uBAAYA,WAAW,KAAM,4BAAyC,kCACpN,uBAAYA,WAAW,KAAM,aAA0B,6FAC1D,mBAAG,uBAAYA,WAAW,KAAM,8BAChC,kBAAK,eAAa,uBAAYA,WAAW,KAAM,4BAAyC,QAAM,uBAAYA,WAAW,KAAM,2BAAwC,0BAAwB,uBAAYA,WAAW,KAAM,iBAA8B,2EACtO,mBAAQA,WAAW,KAAM,OAAgB,mCAAiC,uBAAYA,WAAW,KAAM,UAAuB,2BAAyB,uBAAYA,WAAW,KAAM,4BAAyC,6BAA2B,uBAAYA,WAAW,KAAM,iBAA8B,iBACnU,kBAAK,QAAM,cAAGA,WAAW,IACrB,KAAQ,kFACL,uBAA2B,+DAGtC,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-webapi/./src/pages/graphql/develop/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"define-the-graphql-schema-for-a-module\"\n    }}>{`Define the GraphQL schema for a module`}</h1>\n    <p>{`Each module that adds to or extends from a GraphQL schema can do so by placing a `}<inlineCode parentName=\"p\">{`schema.graphqls`}</inlineCode>{` file in its `}<inlineCode parentName=\"p\">{`etc`}</inlineCode>{` directory. Adobe Commerce and Magento Open Source Core adds `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/GraphQl\"\n      }}><inlineCode parentName=\"a\">{`GraphQl`}</inlineCode></a>{` modules based on the purpose of the schema being extended/added and the core modules they depend on. For example, the `}<inlineCode parentName=\"p\">{`CustomerGraphQl`}</inlineCode>{` module adds a query and multiple mutations to the `}<inlineCode parentName=\"p\">{`graphql`}</inlineCode>{` endpoint to view and modify customer data. The `}<inlineCode parentName=\"p\">{`CustomerGraphQl`}</inlineCode>{` module relies on the `}<inlineCode parentName=\"p\">{`Customer`}</inlineCode>{` core module.`}</p>\n    <p>{`A GraphQL module's `}<inlineCode parentName=\"p\">{`schema.graphqls`}</inlineCode>{` file defines how the attributes defined in the module can be used in GraphQL queries and mutations. If your module's attributes are completely self-contained, then the `}<inlineCode parentName=\"p\">{`schema.graphqls`}</inlineCode>{` file defines the queries, mutations, the interfaces used, the data types of all the attributes, and any enumerations that restrict the possible attribute contents. If your module extends another module, then you must define those attributes and ensure that the other module can load your attributes. For example, the `}<inlineCode parentName=\"p\">{`CatalogGraphQl`}</inlineCode>{` module defines the `}<inlineCode parentName=\"p\">{`PriceAdjustmentCodesEnum`}</inlineCode>{`, but the `}<inlineCode parentName=\"p\">{`TaxGraphQl`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`WeeeGraphQl`}</inlineCode>{` modules define the enumeration values.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<module_name>/etc/schema.graphqls`}</inlineCode>{` file:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Defines the structure of queries and mutations.`}</li>\n      <li parentName=\"ul\">{`Determines which attributes can be used for input and output in GraphQL queries and mutations. Requests and responses contain separate lists of valid attributes.`}</li>\n      <li parentName=\"ul\">{`Points to the resolvers that verify and process the input data and response.`}</li>\n      <li parentName=\"ul\">{`Serves as the source for displaying the schema in a GraphQL browser.`}</li>\n      <li parentName=\"ul\">{`Defines which objects are cached.`}</li>\n    </ul>\n    <p>{`The base `}<inlineCode parentName=\"p\">{`schema.graphqls`}</inlineCode>{` file, located in the `}<inlineCode parentName=\"p\">{`app/code/Magento/GraphQl/etc/`}</inlineCode>{` directory, defines the basic structure of GraphQL queries and mutations. It also includes definitions for comparison operators and paging information for search results. The `}<inlineCode parentName=\"p\">{`webonyx/graphql-php`}</inlineCode>{` library enforces the syntax of all `}<inlineCode parentName=\"p\">{`schema.graphqls`}</inlineCode>{` files.`}</p>\n    <h2 {...{\n      \"id\": \"define-queries\"\n    }}>{`Define queries`}</h2>\n    <p>{`A query definition can be one line, or it can be complex. If your module's query implements `}<inlineCode parentName=\"p\">{`searchCriteria`}</inlineCode>{`, then you must define arguments that define filters and pagination information, all of which adds complexity. However, if you expect a single result from your query, then its definition can be simple.`}</p>\n    <p>{`The following example shows the `}<inlineCode parentName=\"p\">{`products`}</inlineCode>{` query. The `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` is defined as a `}<inlineCode parentName=\"p\">{`Query`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`products`}</inlineCode>{` definitions define the keywords that are used to construct a query, as shown in `}<a parentName=\"p\" {...{\n        \"href\": \"../usage/index.md#queries\"\n      }}>{`Using queries`}</a>{`. The parameter definitions will be discussed in `}<a parentName=\"p\" {...{\n        \"href\": \"#specify-output-attributes\"\n      }}>{`Specify output attributes`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`type Query {\n    products (\n        search: String\n        filter: ProductAttributeFilterInput\n        pageSize: Int = 20\n        currentPage: Int = 1\n        sort: ProductAttributeSortInput\n    ): Products @resolver(class: \"Magento\\\\\\\\CatalogGraphQl\\\\\\\\Model\\\\\\\\Resolver\\\\\\\\Products\")\n}\n`}</code></pre>\n    <p>{`In contrast, the `}<inlineCode parentName=\"p\">{`customer`}</inlineCode>{` query returns the `}<inlineCode parentName=\"p\">{`Customer`}</inlineCode>{` object associated with the current user. There is no need to define pagination information.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`type Query {\n    customer: Customer @resolver(class: \"Magento\\\\\\\\CustomerGraphQl\\\\\\\\Model\\\\\\\\Resolver\\\\\\\\Customer\")\n}\n`}</code></pre>\n    <p>{`If all your module's attributes are extension attributes for existing modules, then no query definition is required. In this case, the attributes point to the other module's query definition.`}</p>\n    <h3 {...{\n      \"id\": \"declare-input-attributes\"\n    }}>{`Declare input attributes`}</h3>\n    <p>{`You must explicitly define each attribute that can be used as input in a GraphQL query. In the simplest cases, you can create a single `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` definition that includes all the input, output, and sorting attributes for an object. This might not be possible if your module performs calculations, or otherwise has attributes that aren't available at the time of the query.`}</p>\n    <p>{`The following example shows the `}<inlineCode parentName=\"p\">{`products`}</inlineCode>{` query, which has multiple optional attributes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`products(\n  search: String\n  filter: ProductAttributeFilterInput\n  pageSize: Int\n  currentPage: Int\n  sort: ProductAttributeSortInput\n): Products\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ProductAttributeFilterInput`}</inlineCode>{` object used in the `}<inlineCode parentName=\"p\">{`filter`}</inlineCode>{` attribute is a custom input type that determines which attributes can be used to narrow the results in a `}<inlineCode parentName=\"p\">{`products`}</inlineCode>{` query. The attributes of this object are of type `}<inlineCode parentName=\"p\">{`FilterEqualTypeInput`}</inlineCode>{`. (These entities are defined in the `}<inlineCode parentName=\"p\">{`etc/schema.graphqls`}</inlineCode>{` files of the `}<inlineCode parentName=\"p\">{`GraphQl`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CatalogGraphQl`}</inlineCode>{` modules). In other use cases, you would be required to create your own input type in the `}<inlineCode parentName=\"p\">{`<magento_root>/app/code/<vendor_name>/<module_name>/etc/schema.graphqls`}</inlineCode>{` file.`}</p>\n    <p>{`The following attributes can be used as filters using the `}<inlineCode parentName=\"p\">{`ProductAttributeFilterInput`}</inlineCode>{` object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`input ProductAttributeFilterInput {\n    category_id: FilterEqualTypeInput\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`FilterEqualTypeInput`}</inlineCode>{` type defines a filter that matches the input exactly.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`input FilterEqualTypeInput {\n    in: [String]\n    eq: String\n}\n`}</code></pre>\n    <p>{`The following example filter searches for products whose `}<inlineCode parentName=\"p\">{`category_id`}</inlineCode>{` equals 1.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`{\n  products(filter: {category_id: {eq: \"1\"}}) {\n    total_count\n    items {\n      name\n    }\n  }\n}\n`}</code></pre>\n    <p>{`The search returns products whose `}<inlineCode parentName=\"p\">{`category_id`}</inlineCode>{` equals 1.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"products\": {\n      \"total_count\": 2,\n      \"items\": [\n        {\n          \"name\": \"Josie Yoga Jacket\"\n        },\n        {\n          \"name\": \"Selene Yoga Hoodie\"\n        }\n      ]\n    }\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"specify-output-attributes\"\n    }}>{`Specify output attributes`}</h3>\n    <p>{`You must know the data type of each attribute, whether it is scalar or an object, and whether it can be part of an array. In addition, each attribute within an object must be defined in the same manner.`}</p>\n    <p>{`In a `}<inlineCode parentName=\"p\">{`schema.graphqls`}</inlineCode>{` file, the output `}<inlineCode parentName=\"p\">{`Interface`}</inlineCode>{` defines top-level attributes. Each object returned is defined in a `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` definition.`}</p>\n    <p>{`The following example shows the `}<inlineCode parentName=\"p\">{`products`}</inlineCode>{` query. The query returns a `}<inlineCode parentName=\"p\">{`Products`}</inlineCode>{` object containing the attributes of the specified data types.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Data type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`aggregations`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[Aggregation]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Layered navigation aggregations`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`items`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[ProductInterface]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array of products that match the specified search criteria`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`page_info`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SearchResultPageInfo`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An object that includes the `}<inlineCode parentName=\"td\">{`page_info`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`currentPage`}</inlineCode>{` values specified in the query`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`sort_fields`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SortFields`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An object that includes the default sort field and all available sort fields`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`total_count`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Int`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"define-the-output-interface\"\n    }}>{`Define the output interface`}</h3>\n    <p>{`In many cases, the response contains data that was either not available as input, or was transformed in some manner from the input. For example, when you specify a price in an input filter, the application evaluates it as a Float value. However, `}<inlineCode parentName=\"p\">{`Price`}</inlineCode>{` output objects contain a Float value, a currency value, and possibly minimum/maximum values and tax adjustments. You can define a `}<inlineCode parentName=\"p\">{`typeResolver`}</inlineCode>{` to point to the Resolver object, which interprets the GraphQL query. If your module contains only attributes that extend another module, then this parameter is optional. Otherwise, it is required. See `}<a parentName=\"p\" {...{\n        \"href\": \"resolvers.md\"\n      }}>{`Resolvers`}</a>{` for more information.`}</p>\n    <p>{`Output types that represent entities that can be manipulated (created, updated, or removed) and/or can be cached on the client MUST have `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` field. The type of the field SHOULD be `}<inlineCode parentName=\"p\">{`ID`}</inlineCode>{`.`}</p>\n    <p>{`The following example shows the `}<inlineCode parentName=\"p\">{`products`}</inlineCode>{` query. The `}<inlineCode parentName=\"p\">{`page_info`}</inlineCode>{` attribute contains the `}<inlineCode parentName=\"p\">{`SearchResultPageInfo`}</inlineCode>{` data type which is defined in the `}<inlineCode parentName=\"p\">{`schema.graphqls`}</inlineCode>{` file under `}<inlineCode parentName=\"p\">{`ModuleGraphQl`}</inlineCode>{`. In other use cases, you would be required to create your own output type in the `}<inlineCode parentName=\"p\">{`<magento_root>/app/code/<vendor_name>/<module_name>/etc/schema.graphqls`}</inlineCode>{` file.`}</p>\n    <p>{`The SearchResultPageInfo provides navigation for the query response.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`type SearchResultPageInfo {\n    page_size: Int\n    current_page: Int\n    total_pages: Int\n}\n`}</code></pre>\n    <p>{`The following example uses the `}<inlineCode parentName=\"p\">{`page_info`}</inlineCode>{` output attribute which is of `}<inlineCode parentName=\"p\">{`SearchResultPageInfo`}</inlineCode>{` type to get all the information related to the page.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`{\n  products(search: \"Yoga pants\", pageSize: 2) {\n    total_count\n    items {\n      name\n    }\n    page_info {\n      page_size\n      current_page\n    }\n  }\n}\n`}</code></pre>\n    <p>{`The search returns 45 items, but only the first two items are returned on the current page and all the information regarding the page is returned.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"products\": {\n      \"total_count\": 45,\n      \"items\": [\n        {\n          \"name\": \"Josie Yoga Jacket\"\n        },\n        {\n          \"name\": \"Selene Yoga Hoodie\"\n        }\n      ],\n      \"page_info\": {\n        \"page_size\": 2,\n        \"current_page\": 1\n      }\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"define-mutations\"\n    }}>{`Define mutations`}</h2>\n    <p>{`A mutation definition contains the following information:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The mutation name`}</li>\n      <li parentName=\"ul\">{`The input attributes and objects`}</li>\n      <li parentName=\"ul\">{`The attributes and objects that can be returned in the output`}</li>\n      <li parentName=\"ul\">{`The path to the resolver`}</li>\n    </ul>\n    <p>{`The following mutation creates a customer.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`type Mutation {\n    createCustomer (input: CustomerInput!): CustomerOutput @resolver(class: \"\\\\\\\\Magento\\\\\\\\CustomerGraphQl\\\\\\\\Model\\\\\\\\Resolver\\\\\\\\CreateCustomer\") @doc(description:\"Create customer account\")\n}\n`}</code></pre>\n    <p>{`This mutation requires the `}<inlineCode parentName=\"p\">{`CustomerInput`}</inlineCode>{` object, which defines the customers name, email, password, and other attributes, as input.`}</p>\n    <p>{`Input parameters can be optional when the context is provided in a header or other mechanism.`}</p>\n    <h2 {...{\n      \"id\": \"define-enumerations\"\n    }}>{`Define enumerations`}</h2>\n    <p>{`You can optionally define enumerations to help prevent input errors. Adobe Commerce and Magento Open Source capitalize all enumerated responses. If a value contains a dash (-), the system converts it to an underscore (_). This is done to maintain compliance with the GraphQL specification.`}</p>\n    <h2 {...{\n      \"id\": \"annotations\"\n    }}>{`Annotations`}</h2>\n    <p>{`You can describe any attribute, type definition, or other entity within a `}<inlineCode parentName=\"p\">{`schema.graphqls`}</inlineCode>{` file by appending the following to the line:`}</p>\n    <p><inlineCode parentName=\"p\">{`@doc(description: \"<Text>\")`}</inlineCode></p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`sku: FilterTypeInput @doc(description: \"A number or code assigned to a product to identify the product, options, price, and manufacturer\")\nurl_key: String @doc(description: \"The url key assigned to the product\")\nproduct_count: Int @doc(description: \"The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not\")\n`}</code></pre>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`@deprecated`}</inlineCode>{` directive to deprecate attributes and enum values. The GraphQL specification does not permit deprecating input values or arguments. The `}<inlineCode parentName=\"p\">{`reason`}</inlineCode>{` keyword allows you to specify which attribute/field or enum value should be used instead.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`type Query {\n    cmsPage (\n        id: Int @doc(description: \"Id of the CMS page\") @deprecated(reason: \"Use \\`identifier\\`\") @doc(description: \"The CMS page ...\")\n        identifier: String @doc(description: \"Identifier of the CMS page\")\n...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"query-caching\"\n    }}>{`Query caching`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`@cache`}</inlineCode>{` directive defines whether the results of certain queries can be cached. Queries relating to products, categories, and CMS may be cached.`}</p>\n    <p>{`Define cacheable queries in the following manner:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`@cache(cacheIdentity: \"Magento\\\\\\\\CmsGraphQl\\\\\\\\Model\\\\\\\\Resolver\\\\\\\\Block\\\\\\\\Identity\")\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`cacheIdentity`}</inlineCode>{` value points to the `}<a parentName=\"p\" {...{\n        \"href\": \"identity-class.md\"\n      }}>{`class`}</a>{` responsible for retrieving cache tags.`}</p>\n    <p>{`A query without a `}<inlineCode parentName=\"p\">{`cacheIdentity`}</inlineCode>{` will not be cached.`}</p>\n    <p>{`To disable caching for queries declared in another module with a `}<inlineCode parentName=\"p\">{`cacheIdentity`}</inlineCode>{` class, the `}<inlineCode parentName=\"p\">{`@cache(cacheable: false)`}</inlineCode>{` directive can be used.\nThis `}<inlineCode parentName=\"p\">{`cacheable`}</inlineCode>{` argument is intended to disable caching for queries that are defined in another module.`}</p>\n    <p><inlineCode parentName=\"p\">{`@cache(cacheable: false)`}</inlineCode></p>\n    <p>{`Specifying `}<inlineCode parentName=\"p\">{`@cache(cacheable: false)`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`@cache(cacheable: true)`}</inlineCode>{` on a query without a `}<inlineCode parentName=\"p\">{`cacheIdentity`}</inlineCode>{` class has no effect: the query will not be cached.\nIf a query should `}<strong parentName=\"p\">{`not`}</strong>{` be cached, do not specify the `}<inlineCode parentName=\"p\">{`@cache`}</inlineCode>{` directive. Specifying `}<inlineCode parentName=\"p\">{`@cache(cacheable: false)`}</inlineCode>{`  is superfluous when no `}<inlineCode parentName=\"p\">{`cacheIdentity`}</inlineCode>{` is present.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/php/development/cache/partial/cache-type/\"\n      }}>{`Create a cache type`}</a>{` for information about enabling caching for custom modules.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}