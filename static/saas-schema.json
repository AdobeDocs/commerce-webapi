{
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Adobe Commerce SaaS"
    },
    "host": "localhost",
    "basePath": "https://localhost/rest/default",
    "schemes": [
        "https"
    ],
    "tags": [
        {
            "name": "storeStoreRepositoryV1",
            "description": "Store repository interface"
        },
        {
            "name": "storeGroupRepositoryV1",
            "description": "Group repository interface"
        },
        {
            "name": "storeWebsiteRepositoryV1",
            "description": "Website repository interface"
        },
        {
            "name": "storeStoreConfigManagerV1",
            "description": "Store config manager interface"
        },
        {
            "name": "eavAttributeSetRepositoryV1",
            "description": "Interface AttributeSetRepositoryInterface"
        },
        {
            "name": "eavAttributeSetManagementV1",
            "description": "Interface AttributeSetManagementInterface"
        },
        {
            "name": "customerGroupRepositoryV1",
            "description": "Customer group CRUD interface"
        },
        {
            "name": "customerGroupManagementV1",
            "description": "Interface for managing customer groups."
        },
        {
            "name": "customerCustomerGroupConfigV1",
            "description": "Interface for system configuration operations for customer groups."
        },
        {
            "name": "customerCustomerMetadataV1",
            "description": "Interface for retrieval information about customer attributes metadata."
        },
        {
            "name": "customerAddressMetadataV1",
            "description": "Interface for retrieval information about customer address attributes metadata."
        },
        {
            "name": "customerCustomerRepositoryV1",
            "description": "Customer CRUD interface."
        },
        {
            "name": "customerAccountManagementV1",
            "description": "Interface for managing customers accounts."
        },
        {
            "name": "customerAddressRepositoryV1",
            "description": "Customer address CRUD interface."
        },
        {
            "name": "adobeIoEventsClientConfigurationCheckV1",
            "description": "Configuration validator"
        },
        {
            "name": "adobeCommerceEventsClientEventSubscriberV1",
            "description": "Event subscription creator interface"
        },
        {
            "name": "adobeCommerceEventsClientEventUpdaterV1",
            "description": "Event subscription updater interface"
        },
        {
            "name": "adobeCommerceEventsClientUpdateConfigurationV1",
            "description": "Updates eventing configuration"
        },
        {
            "name": "adobeCommerceEventsClientEventProviderManagementV1",
            "description": "Manages event providers"
        },
        {
            "name": "adobeCommerceEventsClientEventSubscriptionListV1",
            "description": "Interface to retrieve a list of all subscribed events."
        },
        {
            "name": "adobeCommerceWebhooksWebhookSubscriptionListV1",
            "description": "Interface to retrieve a list of all subscribed webhooks."
        },
        {
            "name": "backendModuleServiceV1",
            "description": "Interface for module service."
        },
        {
            "name": "adobeStockImageApiGetImageListV1",
            "description": "Search for images on Adobe Stock API"
        },
        {
            "name": "catalogProductRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeTypesListV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeRepositoryV1",
            "description": "Interface RepositoryInterface must be implemented in new model"
        },
        {
            "name": "catalogProductAttributeIsFilterableManagementV1",
            "description": "Intended to allow setting 'is_filterable' property for specific attribute as integer value via REST/SOAP API"
        },
        {
            "name": "catalogCategoryAttributeRepositoryV1",
            "description": "Interface RepositoryInterface must be implemented in new model"
        },
        {
            "name": "catalogCategoryAttributeOptionManagementV1",
            "description": "Interface RepositoryInterface must be implemented in new model"
        },
        {
            "name": "catalogProductTypeListV1",
            "description": ""
        },
        {
            "name": "catalogAttributeSetRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogAttributeSetManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeGroupRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeOptionManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeOptionUpdateV1",
            "description": "Interface to update product attribute option"
        },
        {
            "name": "catalogProductMediaAttributeManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeMediaGalleryManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductTierPriceManagementV1",
            "description": ""
        },
        {
            "name": "catalogTierPriceStorageV1",
            "description": "Tier prices storage."
        },
        {
            "name": "catalogBasePriceStorageV1",
            "description": "Base prices storage."
        },
        {
            "name": "catalogCostStorageV1",
            "description": "Product cost storage."
        },
        {
            "name": "catalogSpecialPriceStorageV1",
            "description": "Special price storage presents efficient price API and is used to retrieve, update or delete special prices."
        },
        {
            "name": "catalogCategoryRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogCategoryManagementV1",
            "description": ""
        },
        {
            "name": "catalogCategoryListV1",
            "description": ""
        },
        {
            "name": "catalogProductCustomOptionTypeListV1",
            "description": ""
        },
        {
            "name": "catalogProductCustomOptionRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogProductLinkTypeListV1",
            "description": ""
        },
        {
            "name": "catalogProductLinkManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductLinkRepositoryV1",
            "description": "Interface Product links handling interface"
        },
        {
            "name": "catalogCategoryLinkManagementV1",
            "description": ""
        },
        {
            "name": "catalogCategoryLinkRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogProductWebsiteLinkRepositoryV1",
            "description": "Interface ProductWebsiteLinkRepositoryInterface"
        },
        {
            "name": "quoteCartRepositoryV1",
            "description": "Interface CartRepositoryInterface"
        },
        {
            "name": "quoteCartManagementV1",
            "description": "Interface CartManagementInterface"
        },
        {
            "name": "quoteShippingMethodManagementV1",
            "description": "Interface ShippingMethodManagementInterface"
        },
        {
            "name": "quoteShipmentEstimationV1",
            "description": "Interface ShipmentManagementInterface"
        },
        {
            "name": "quoteCartItemRepositoryV1",
            "description": "Interface CartItemRepositoryInterface"
        },
        {
            "name": "quotePaymentMethodManagementV1",
            "description": "Interface PaymentMethodManagementInterface"
        },
        {
            "name": "quoteBillingAddressManagementV1",
            "description": "Interface BillingAddressManagementInterface"
        },
        {
            "name": "quoteCouponManagementV1",
            "description": "Coupon management service interface."
        },
        {
            "name": "quoteCartTotalRepositoryV1",
            "description": "Interface CartTotalRepositoryInterface"
        },
        {
            "name": "catalogInventoryStockRegistryV1",
            "description": "Interface StockRegistryInterface"
        },
        {
            "name": "salesOrderRepositoryV1",
            "description": "Order repository interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer."
        },
        {
            "name": "salesOrderManagementV1",
            "description": "Order management interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer."
        },
        {
            "name": "salesOrderAddressRepositoryV1",
            "description": "Order address repository interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer."
        },
        {
            "name": "salesOrderItemRepositoryV1",
            "description": "Order item repository interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer."
        },
        {
            "name": "salesInvoiceRepositoryV1",
            "description": "Invoice repository interface. An invoice is a record of the receipt of payment for an order."
        },
        {
            "name": "salesInvoiceManagementV1",
            "description": "Invoice management interface. An invoice is a record of the receipt of payment for an order."
        },
        {
            "name": "salesInvoiceCommentRepositoryV1",
            "description": "Invoice comment repository interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history."
        },
        {
            "name": "salesRefundInvoiceV1",
            "description": "Interface RefundInvoiceInterface"
        },
        {
            "name": "salesCreditmemoManagementV1",
            "description": "Credit memo add comment interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases."
        },
        {
            "name": "salesCreditmemoRepositoryV1",
            "description": "Credit memo repository interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases."
        },
        {
            "name": "salesCreditmemoCommentRepositoryV1",
            "description": "Credit memo comment repository interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer."
        },
        {
            "name": "salesRefundOrderV1",
            "description": "Interface RefundOrderInterface"
        },
        {
            "name": "salesShipmentRepositoryV1",
            "description": "Shipment repository interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package."
        },
        {
            "name": "salesShipmentManagementV1",
            "description": "Shipment management interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package."
        },
        {
            "name": "salesShipmentCommentRepositoryV1",
            "description": "Shipment comment repository interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments."
        },
        {
            "name": "salesShipmentTrackRepositoryV1",
            "description": "Shipment track repository interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package."
        },
        {
            "name": "salesShipOrderV1",
            "description": "Class ShipOrderInterface"
        },
        {
            "name": "salesTransactionRepositoryV1",
            "description": "Transaction repository interface. A transaction is an interaction between a merchant and a customer such as a purchase, a credit, a refund, and so on."
        },
        {
            "name": "salesInvoiceOrderV1",
            "description": "Class InvoiceOrderInterface"
        },
        {
            "name": "salesRuleRuleRepositoryV1",
            "description": "Sales rule CRUD interface"
        },
        {
            "name": "salesRuleCouponRepositoryV1",
            "description": "Coupon CRUD interface"
        },
        {
            "name": "salesRuleCouponManagementV1",
            "description": "Coupon management interface"
        },
        {
            "name": "bundleProductLinkManagementV1",
            "description": "Interface for Management of ProductLink"
        },
        {
            "name": "bundleProductOptionRepositoryV1",
            "description": "Interface ProductOptionRepositoryInterface"
        },
        {
            "name": "bundleProductOptionTypeListV1",
            "description": "Interface ProductOptionTypeListInterface"
        },
        {
            "name": "bundleProductOptionManagementV1",
            "description": "Option manager for bundle products"
        },
        {
            "name": "checkoutShippingInformationManagementV1",
            "description": "Interface for managing customer shipping address information"
        },
        {
            "name": "checkoutTotalsInformationManagementV1",
            "description": "Interface for quote totals calculation"
        },
        {
            "name": "commerceBackendUixMassActionFailedRequestRepositoryV1",
            "description": "Mass Actions failed requests storage interface"
        },
        {
            "name": "companyCompanyRepositoryV1",
            "description": "A repository interface for company entity that provides basic CRUD operations."
        },
        {
            "name": "companyTeamRepositoryV1",
            "description": "Interface for basic CRUD operations for team entity."
        },
        {
            "name": "companyCompanyHierarchyV1",
            "description": "Interface for working with company hierarchy."
        },
        {
            "name": "companyRoleRepositoryV1",
            "description": "A repository interface for role entity that provides basic CRUD operations."
        },
        {
            "name": "companyAclV1",
            "description": "Access control list interface."
        },
        {
            "name": "companyCompanyCustomerAssignmentV1",
            "description": "Interface for managing customer assignments to companies."
        },
        {
            "name": "companyCompanyUserRepositoryV1",
            "description": "A repository interface for company customer attributes that provides basic CRUD operations."
        },
        {
            "name": "configurableProductLinkManagementV1",
            "description": "Manage children products of configurable product"
        },
        {
            "name": "configurableProductConfigurableProductManagementV1",
            "description": "Interface ConfigurableProductManagementInterface"
        },
        {
            "name": "configurableProductOptionRepositoryV1",
            "description": "Manage options of configurable product"
        },
        {
            "name": "downloadableLinkRepositoryV1",
            "description": "Interface LinkRepositoryInterface"
        },
        {
            "name": "downloadableSampleRepositoryV1",
            "description": "Interface SampleRepositoryInterface"
        },
        {
            "name": "taxTaxRateRepositoryV1",
            "description": "Tax rate CRUD interface."
        },
        {
            "name": "taxTaxRuleRepositoryV1",
            "description": "Tax rule CRUD interface."
        },
        {
            "name": "taxTaxClassRepositoryV1",
            "description": "Tax class CRUD interface."
        },
        {
            "name": "checkoutAgreementsCheckoutAgreementsRepositoryV1",
            "description": "Interface CheckoutAgreementsRepositoryInterface"
        },
        {
            "name": "checkoutAgreementsCheckoutAgreementsListV1",
            "description": "Interface for retrieving list of checkout agreements. Extended variation of CheckoutAgreementsRepositoryInterface::getList with possibility to get results according search filters without predefined limitations."
        },
        {
            "name": "negotiableQuoteNegotiableQuoteDraftManagementV1",
            "description": "Interface for managing negotiable quotes in draft status."
        },
        {
            "name": "negotiableQuoteNegotiableQuoteManagementV1",
            "description": "Interface for managing quotes."
        },
        {
            "name": "negotiableQuoteNegotiableQuotePriceManagementV1",
            "description": "Interface for updating quote prices in case price changes occur in system."
        },
        {
            "name": "negotiableQuoteAttachmentContentManagementV1",
            "description": "Interface for retrieving the list of negotiable quotes attachments."
        },
        {
            "name": "negotiableQuoteCommentLocatorV1",
            "description": "Interface for load quote comments with attachment."
        },
        {
            "name": "negotiableQuoteNegotiableQuoteShippingManagementV1",
            "description": "Interface for add and update negotiable quote shipping method."
        },
        {
            "name": "negotiableQuoteNegotiableCartRepositoryV1",
            "description": "Interface is intended to be used in webapi only. For other cases CartRepositoryInterface should be used."
        },
        {
            "name": "negotiableQuoteItemNoteRepositoryV1",
            "description": "Repository for Negotiable Quote Line item notes."
        },
        {
            "name": "companyCreditCreditLimitRepositoryV1",
            "description": "Interface for credit limit repository for CRUD operations."
        },
        {
            "name": "companyCreditCreditLimitManagementV1",
            "description": "Credit Limit management interface."
        },
        {
            "name": "companyCreditCreditBalanceManagementV1",
            "description": "Interface for management decrease and increase credit balance operations."
        },
        {
            "name": "companyCreditCreditHistoryManagementV1",
            "description": "Update credit history log and retrieve history which match a specified criteria."
        },
        {
            "name": "negotiableQuoteTemplateTemplateRepositoryV1",
            "description": "Interface RepositoryInterface"
        },
        {
            "name": "negotiableQuoteTemplateTemplateDraftManagementV1",
            "description": "Interface for managing negotiable quote templates in draft status."
        },
        {
            "name": "negotiableQuoteTemplateTemplateActionsCreateV1",
            "description": "Interface for creating a quote template."
        },
        {
            "name": "negotiableQuoteTemplateTemplateActionsOpenV1",
            "description": "Interface for opening a quote template."
        },
        {
            "name": "negotiableQuoteTemplateTemplateActionsSellerSendV1",
            "description": "Interface for seller send action."
        },
        {
            "name": "negotiableQuoteTemplateTemplateActionsDeclineV1",
            "description": "Interface for declining a quote template."
        },
        {
            "name": "negotiableQuoteTemplateTemplateActionsCancelV1",
            "description": "Interface for canceling a quote template."
        },
        {
            "name": "negotiableQuoteTemplateTemplateActionsUpdateV1",
            "description": "Interface for updating a quote template."
        },
        {
            "name": "negotiableQuoteTemplateTemplateActionsDeleteV1",
            "description": "Interface for Delete a quote template."
        },
        {
            "name": "negotiableQuoteTemplateTemplateReferenceDocumentLinkRepositoryV1",
            "description": "Interface ReferenceDocumentLinkRepositoryInterface"
        },
        {
            "name": "companyRelationRelationManagerV1",
            "description": "Relation manager for company relations."
        },
        {
            "name": "sharedCatalogSharedCatalogRepositoryV1",
            "description": ""
        },
        {
            "name": "sharedCatalogCompanyManagementV1",
            "description": "Shared catalog companies actions."
        },
        {
            "name": "sharedCatalogProductManagementV1",
            "description": "Shared catalog products actions."
        },
        {
            "name": "sharedCatalogCategoryManagementV1",
            "description": "Shared catalog products actions."
        },
        {
            "name": "sharedCatalogAssignTierPriceV1",
            "description": "Assign tier prices to product"
        },
        {
            "name": "sharedCatalogResetTierPriceV1",
            "description": "Reset tier prices"
        },
        {
            "name": "customAttributeSerializableB2bNegotiableQuoteAttributesManagementV1",
            "description": "Interface for managing negotiable quotes attributes"
        },
        {
            "name": "customAttributeSerializableB2bCompanyAttributesManagementV1",
            "description": "Interface for managing company attributes"
        },
        {
            "name": "adobeAssetsIntegrationExternalMediaV1",
            "description": ""
        },
        {
            "name": "analyticsLinkProviderV1",
            "description": "Provides link to file with collected report data."
        },
        {
            "name": "giftCardAccountGiftCardAccountManagementV1",
            "description": "Interface GiftCardAccountManagementInterface"
        },
        {
            "name": "giftMessageCartRepositoryV1",
            "description": "Interface CartRepositoryInterface"
        },
        {
            "name": "giftMessageItemRepositoryV1",
            "description": "Interface ItemRepositoryInterface"
        },
        {
            "name": "adobeCommerceWebhooksCoreSaasWebhookSubscriberV1",
            "description": "Interface for webhook subscriber."
        },
        {
            "name": "adobeCommerceWebhooksCoreSaasSupportedWebhookListV1",
            "description": "Interface for retrieving the supported aliased event list."
        },
        {
            "name": "outOfProcessPaymentMethodsOutOfProcessPaymentMethodRepositoryV1",
            "description": ""
        },
        {
            "name": "giftWrappingWrappingRepositoryV1",
            "description": "Interface WrappingRepositoryInterface"
        },
        {
            "name": "importJsonApiStartImportV1",
            "description": "Start import JSON operation interface."
        },
        {
            "name": "inventoryApiSourceRepositoryV1",
            "description": "In Magento 2 Repository considered as an implementation of Facade pattern which provides a simplified interface to a larger body of code responsible for Domain Entity management The main intention is to make API more readable and reduce dependencies of business logic code on the inner workings of a module, since most code uses the facade, thus allowing more flexibility in developing the system Along with this such approach helps to segregate two responsibilities: 1. Repository now could be considered as an API - Interface for usage (calling) in the business logic 2. Separate class-commands to which Repository proxies initial call (like, Get Save GetList Delete) could be    considered as SPI - Interfaces that you should extend and implement to customize current behaviour There is no delete method. It is related to that Source can't be deleted due to we don't want miss data related to Sources (like as order information). But Source can be disabled Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryApiGetSourcesAssignedToStockOrderedByPriorityV1",
            "description": "Retrieve sources related to current stock ordered by priority Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryApiStockRepositoryV1",
            "description": "In Magento 2 Repository considered as an implementation of Facade pattern which provides a simplified interface to a larger body of code responsible for Domain Entity management The main intention is to make API more readable and reduce dependencies of business logic code on the inner workings of a module, since most code uses the facade, thus allowing more flexibility in developing the system Along with this such approach helps to segregate two responsibilities: 1. Repository now could be considered as an API - Interface for usage (calling) in the business logic 2. Separate class-commands to which Repository proxies initial call (like, Get Save GetList Delete) could be    considered as SPI - Interfaces that you should extend and implement to customize current behaviour Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryApiGetStockSourceLinksV1",
            "description": "Find StockSourceLink list by SearchCriteria API Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryApiStockSourceLinksSaveV1",
            "description": "Service method for stock source links save multiple Performance efficient API Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryApiStockSourceLinksDeleteV1",
            "description": "Service method for stock source links delete multiple Performance efficient API Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryApiSourceItemRepositoryV1",
            "description": "In Magento 2 Repository considered as an implementation of Facade pattern which provides a simplified interface to a larger body of code responsible for Domain Entity management The main intention is to make API more readable and reduce dependencies of business logic code on the inner workings of a module, since most code uses the facade, thus allowing more flexibility in developing the system Along with this such approach helps to segregate two responsibilities: 1. Repository now could be considered as an API - Interface for usage (calling) in the business logic 2. Separate class-commands to which Repository proxies initial call (like, Get Save GetList Delete) could be    considered as SPI - Interfaces that you should extend and implement to customize current behaviour The method save is absent, due to different semantic (save multiple)"
        },
        {
            "name": "inventoryApiSourceItemsSaveV1",
            "description": "Service method for source items save multiple Performance efficient API Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryApiSourceItemsDeleteV1",
            "description": "Service method for source items delete multiple Performance efficient API Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryCatalogApiBulkSourceAssignV1",
            "description": "Perform bulk product source assignment"
        },
        {
            "name": "inventoryCatalogApiBulkSourceUnassignV1",
            "description": "Perform bulk product source un-assignment"
        },
        {
            "name": "inventoryCatalogApiBulkInventoryTransferV1",
            "description": "Perform bulk product inventory transfer"
        },
        {
            "name": "inventoryCatalogApiBulkPartialInventoryTransferV1",
            "description": "Transfer Inventory between sources. Moves specified items from origin source to destination source."
        },
        {
            "name": "inventoryDistanceBasedSourceSelectionApiGetDistanceProviderCodeV1",
            "description": "Get selected distance provider code"
        },
        {
            "name": "inventoryDistanceBasedSourceSelectionApiGetDistanceV1",
            "description": "Get distance between two LatLngRequest points"
        },
        {
            "name": "inventoryDistanceBasedSourceSelectionApiGetLatLngFromAddressV1",
            "description": "Get latitude and longitude object from address"
        },
        {
            "name": "inventoryDistanceBasedSourceSelectionApiGetLatsLngsFromAddressV1",
            "description": "Get all available latitude and longitude objects from address interface."
        },
        {
            "name": "inventoryExportStockApiExportStockSalableQtyV1",
            "description": "Interface for ExportStockSalableQty provides product's salable qty information by search criteria"
        },
        {
            "name": "inventoryExportStockApiExportStockIndexDataV1",
            "description": "Class ExportStockIndexData provides stock index export based on raw data contained in the stock index."
        },
        {
            "name": "inventorySalesApiGetProductSalableQtyV1",
            "description": "Service which returns Quantity of products available to be sold by Product SKU and Stock Id. This service calculates the salable qty taking into account existing reservations for given sku and stock id and subtracting min qty (a.k.a. \"Out-of-Stock Threshold\")"
        },
        {
            "name": "inventorySalesApiIsProductSalableV1",
            "description": "Service which detects whether Product is salable for a given Stock (stock data + reservations)"
        },
        {
            "name": "inventorySalesApiAreProductsSalableV1",
            "description": "Service which detects whether products are salable for given stock (stock data + reservations)."
        },
        {
            "name": "inventorySalesApiIsProductSalableForRequestedQtyV1",
            "description": "Service which detects whether a certain Qty of Product is salable for a given Stock (stock data + reservations)"
        },
        {
            "name": "inventorySalesApiAreProductsSalableForRequestedQtyV1",
            "description": "Service which detects whether a given products quantities are salable for a given stock (stock data + reservations)."
        },
        {
            "name": "inventorySalesApiStockResolverV1",
            "description": "The stock resolver is responsible for getting the linked stock for a certain sales channel"
        },
        {
            "name": "inventorySourceSelectionApiGetSourceSelectionAlgorithmListV1",
            "description": "Returns the list of Data Interfaces which represent registered SSA in the system"
        },
        {
            "name": "inventorySourceSelectionApiSourceSelectionServiceV1",
            "description": "Returns source selection algorithm result for given Inventory Request"
        },
        {
            "name": "inventoryInStorePickupSalesApiNotifyOrdersAreReadyForPickupV1",
            "description": "Send an email to the customer that order is ready to be picked up."
        },
        {
            "name": "inventoryLowQuantityNotificationApiGetSourceItemConfigurationV1",
            "description": "Get the source item configuration Firstly try to load Source Item configuration if configuration isn't exist then load global configuration value Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryLowQuantityNotificationApiSourceItemConfigurationsSaveV1",
            "description": "Save the source item configuration Used fully qualified namespaces in annotations for proper work of WebApi request parser"
        },
        {
            "name": "inventoryLowQuantityNotificationApiDeleteSourceItemsConfigurationV1",
            "description": "Delete the source item configuration"
        },
        {
            "name": "adobeStockAssetApiAssetRepositoryV1",
            "description": "Repository used for managing asset related functionality. Uses commands as proxy for those operations."
        },
        {
            "name": "adobeStockAssetApiGetAssetListV1",
            "description": "Service for getting asset list filtered by search criteria"
        },
        {
            "name": "asynchronousOperationsBulkStatusV1",
            "description": "Interface BulkStatusInterface. Bulk summary data with list of operations items short data."
        },
        {
            "name": "asynchronousOperationsOperationRepositoryV1",
            "description": "Bulk operation item repository interface. An bulk is a group of queue messages. An bulk operation item is a queue message."
        },
        {
            "name": "multicouponCouponManagementV2",
            "description": "Coupon management service interface."
        },
        {
            "name": "negotiableQuoteDuplicateDuplicateNegotiableQuoteV1",
            "description": "Duplicate Negotiable Quote based on the ID of existing negotiable quote."
        },
        {
            "name": "outOfProcessShippingMethodsOutOfProcessCarrierRepositoryV1",
            "description": "Shipping carrier repository for out of process shipping carriers"
        },
        {
            "name": "outOfProcessTaxManagementOutOfProcessTaxIntegrationRepositoryV1",
            "description": ""
        },
        {
            "name": "rmaTrackManagementV1",
            "description": "Interface TrackManagementInterface"
        },
        {
            "name": "rmaRmaRepositoryV1",
            "description": "Interface RmaRepositoryInterface"
        },
        {
            "name": "rmaCommentManagementV1",
            "description": "Interface CommentRepositoryInterface"
        },
        {
            "name": "rmaRmaManagementV1",
            "description": "Interface RmaManagementInterface"
        },
        {
            "name": "rmaRmaAttributesManagementV1",
            "description": "Interface RmaAttributesManagementInterface"
        },
        {
            "name": "adobeCommerceEventsCoreSaasSupportedEventListV1",
            "description": "Interface for retrieving the supported aliased event list."
        }
    ],
    "paths": {
        "/V1/store/storeViews": {
            "get": {
                "tags": [
                    "storeStoreRepositoryV1"
                ],
                "description": "Retrieve list of all stores",
                "operationId": "GetV1StoreStoreViews",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store-data-store-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/store/storeGroups": {
            "get": {
                "tags": [
                    "storeGroupRepositoryV1"
                ],
                "description": "Retrieve list of all groups",
                "operationId": "GetV1StoreStoreGroups",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store-data-group-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/store/websites": {
            "get": {
                "tags": [
                    "storeWebsiteRepositoryV1"
                ],
                "description": "Retrieve list of all websites",
                "operationId": "GetV1StoreWebsites",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store-data-website-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/store/storeConfigs": {
            "get": {
                "tags": [
                    "storeStoreConfigManagerV1"
                ],
                "description": "",
                "operationId": "GetV1StoreStoreConfigs",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "storeCodes",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store-data-store-config-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eav/attribute-sets/list": {
            "get": {
                "tags": [
                    "eavAttributeSetRepositoryV1"
                ],
                "description": "Retrieve list of Attribute Sets This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#AttributeSetRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1EavAttributesetsList",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eav/attribute-sets/{attributeSetId}": {
            "get": {
                "tags": [
                    "eavAttributeSetRepositoryV1"
                ],
                "description": "Retrieve attribute set information based on given ID",
                "operationId": "GetV1EavAttributesetsAttributeSetId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "eavAttributeSetRepositoryV1"
                ],
                "description": "Remove attribute set by given ID",
                "operationId": "DeleteV1EavAttributesetsAttributeSetId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eavAttributeSetRepositoryV1"
                ],
                "description": "Save attribute set data",
                "operationId": "PutV1EavAttributesetsAttributeSetId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1EavAttributesetsAttributeSetIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "attributeSet"
                            ],
                            "properties": {
                                "attributeSet": {
                                    "$ref": "#/definitions/eav-data-attribute-set-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eav/attribute-sets": {
            "post": {
                "tags": [
                    "eavAttributeSetManagementV1"
                ],
                "description": "Create attribute set from data",
                "operationId": "PostV1EavAttributesets",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1EavAttributesetsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entityTypeCode",
                                "attributeSet",
                                "skeletonId"
                            ],
                            "properties": {
                                "entityTypeCode": {
                                    "type": "string"
                                },
                                "attributeSet": {
                                    "$ref": "#/definitions/eav-data-attribute-set-interface"
                                },
                                "skeletonId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customerGroups/{id}": {
            "get": {
                "tags": [
                    "customerGroupRepositoryV1"
                ],
                "description": "Get customer group by group ID.",
                "operationId": "GetV1CustomerGroupsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-group-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "customerGroupRepositoryV1"
                ],
                "description": "Save customer group.",
                "operationId": "PutV1CustomerGroupsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CustomerGroupsIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "group"
                            ],
                            "properties": {
                                "group": {
                                    "$ref": "#/definitions/customer-data-group-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-group-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customerGroupRepositoryV1"
                ],
                "description": "Delete customer group by ID.",
                "operationId": "DeleteV1CustomerGroupsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customerGroups/search": {
            "get": {
                "tags": [
                    "customerGroupRepositoryV1"
                ],
                "description": "Retrieve customer groups. The list of groups can be filtered to exclude the NOT_LOGGED_IN group using the first parameter and/or it can be filtered by tax class. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#GroupRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1CustomerGroupsSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-group-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customerGroups": {
            "post": {
                "tags": [
                    "customerGroupRepositoryV1"
                ],
                "description": "Save customer group.",
                "operationId": "PostV1CustomerGroups",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CustomerGroupsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "group"
                            ],
                            "properties": {
                                "group": {
                                    "$ref": "#/definitions/customer-data-group-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-group-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customerGroups/default/{storeId}": {
            "get": {
                "tags": [
                    "customerGroupManagementV1"
                ],
                "description": "Get default customer group.",
                "operationId": "GetV1CustomerGroupsDefaultStoreId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-group-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customerGroups/default": {
            "get": {
                "tags": [
                    "customerGroupManagementV1"
                ],
                "description": "Get default customer group.",
                "operationId": "GetV1CustomerGroupsDefault",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-group-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customerGroups/{id}/permissions": {
            "get": {
                "tags": [
                    "customerGroupManagementV1"
                ],
                "description": "Check if customer group can be deleted.",
                "operationId": "GetV1CustomerGroupsIdPermissions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customerGroups/default/{id}": {
            "put": {
                "tags": [
                    "customerCustomerGroupConfigV1"
                ],
                "description": "Set system default customer group.",
                "operationId": "PutV1CustomerGroupsDefaultId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/attributeMetadata/customer/attribute/{attributeCode}": {
            "get": {
                "tags": [
                    "customerCustomerMetadataV1"
                ],
                "description": "Retrieve attribute metadata.",
                "operationId": "GetV1AttributeMetadataCustomerAttributeAttributeCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/attributeMetadata/customer/form/{formCode}": {
            "get": {
                "tags": [
                    "customerCustomerMetadataV1"
                ],
                "description": "Retrieve all attributes filtered by form code",
                "operationId": "GetV1AttributeMetadataCustomerFormFormCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "formCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/attributeMetadata/customer": {
            "get": {
                "tags": [
                    "customerCustomerMetadataV1"
                ],
                "description": "Get all attribute metadata.",
                "operationId": "GetV1AttributeMetadataCustomer",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/attributeMetadata/customer/custom": {
            "get": {
                "tags": [
                    "customerCustomerMetadataV1"
                ],
                "description": "Get custom attributes metadata for the given data interface.",
                "operationId": "GetV1AttributeMetadataCustomerCustom",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "dataInterfaceName",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/attributeMetadata/customerAddress/attribute/{attributeCode}": {
            "get": {
                "tags": [
                    "customerAddressMetadataV1"
                ],
                "description": "Retrieve attribute metadata.",
                "operationId": "GetV1AttributeMetadataCustomerAddressAttributeAttributeCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/attributeMetadata/customerAddress/form/{formCode}": {
            "get": {
                "tags": [
                    "customerAddressMetadataV1"
                ],
                "description": "Retrieve all attributes filtered by form code",
                "operationId": "GetV1AttributeMetadataCustomerAddressFormFormCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "formCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/attributeMetadata/customerAddress": {
            "get": {
                "tags": [
                    "customerAddressMetadataV1"
                ],
                "description": "Get all attribute metadata.",
                "operationId": "GetV1AttributeMetadataCustomerAddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/attributeMetadata/customerAddress/custom": {
            "get": {
                "tags": [
                    "customerAddressMetadataV1"
                ],
                "description": "Get custom attributes metadata for the given data interface.",
                "operationId": "GetV1AttributeMetadataCustomerAddressCustom",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "dataInterfaceName",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{customerId}": {
            "get": {
                "tags": [
                    "customerCustomerRepositoryV1"
                ],
                "description": "Get customer by Customer ID.",
                "operationId": "GetV1CustomersCustomerId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-customer-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "customerCustomerRepositoryV1"
                ],
                "description": "Create or update a customer.",
                "operationId": "PutV1CustomersCustomerId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CustomersCustomerIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "customer"
                            ],
                            "properties": {
                                "customer": {
                                    "$ref": "#/definitions/customer-data-customer-interface"
                                },
                                "passwordHash": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-customer-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customerCustomerRepositoryV1"
                ],
                "description": "Delete customer by Customer ID.",
                "operationId": "DeleteV1CustomersCustomerId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/search": {
            "get": {
                "tags": [
                    "customerCustomerRepositoryV1"
                ],
                "description": "Retrieve customers which match a specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CustomerRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1CustomersSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-customer-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{email}/activate": {
            "put": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Activate a customer account using a key that was sent in a confirmation email.",
                "operationId": "PutV1CustomersEmailActivate",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CustomersEmailActivateBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "confirmationKey"
                            ],
                            "properties": {
                                "confirmationKey": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-customer-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{customerId}/confirm": {
            "get": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Gets the account confirmation status.",
                "operationId": "GetV1CustomersCustomerIdConfirm",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/confirm": {
            "post": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Resend confirmation email.",
                "operationId": "PostV1CustomersConfirm",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CustomersConfirmBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "email",
                                "websiteId"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "websiteId": {
                                    "type": "integer"
                                },
                                "redirectUrl": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/validate": {
            "put": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Validate customer data.",
                "operationId": "PutV1CustomersValidate",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1CustomersValidateBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "customer"
                            ],
                            "properties": {
                                "customer": {
                                    "$ref": "#/definitions/customer-data-customer-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-validation-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{customerId}/permissions/readonly": {
            "get": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Check if customer can be deleted.",
                "operationId": "GetV1CustomersCustomerIdPermissionsReadonly",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{customerId}/billingAddress": {
            "get": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Retrieve default billing address for the given customerId.",
                "operationId": "GetV1CustomersCustomerIdBillingAddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-address-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{customerId}/shippingAddress": {
            "get": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Retrieve default shipping address for the given customerId.",
                "operationId": "GetV1CustomersCustomerIdShippingAddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-address-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/addresses/{addressId}": {
            "get": {
                "tags": [
                    "customerAddressRepositoryV1"
                ],
                "description": "Retrieve customer address.",
                "operationId": "GetV1CustomersAddressesAddressId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "addressId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-address-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/addresses/{addressId}": {
            "delete": {
                "tags": [
                    "customerAddressRepositoryV1"
                ],
                "description": "Delete customer address by ID.",
                "operationId": "DeleteV1AddressesAddressId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "addressId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/adobe_io_events/check_configuration": {
            "get": {
                "tags": [
                    "adobeIoEventsClientConfigurationCheckV1"
                ],
                "description": "Checks configuration and returns success/failure results for each component",
                "operationId": "GetV1Adobe_io_eventsCheck_configuration",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/adobe-io-events-client-configuration-check-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eventing/eventSubscribe": {
            "post": {
                "tags": [
                    "adobeCommerceEventsClientEventSubscriberV1"
                ],
                "description": "Subscribes to the event.",
                "operationId": "PostV1EventingEventSubscribe",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1EventingEventSubscribeBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "event"
                            ],
                            "properties": {
                                "event": {
                                    "$ref": "#/definitions/adobe-commerce-events-client-data-event-data-interface"
                                },
                                "force": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eventing/eventUnsubscribe/{name}": {
            "post": {
                "tags": [
                    "adobeCommerceEventsClientEventSubscriberV1"
                ],
                "description": "Unsubscribes from the event with the provided name.",
                "operationId": "PostV1EventingEventUnsubscribeName",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eventing/eventSubscribe/{name}": {
            "put": {
                "tags": [
                    "adobeCommerceEventsClientEventUpdaterV1"
                ],
                "description": "Update the event subscription.",
                "operationId": "PutV1EventingEventSubscribeName",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1EventingEventSubscribeNameBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "event"
                            ],
                            "properties": {
                                "event": {
                                    "$ref": "#/definitions/adobe-commerce-events-client-data-event-data-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eventing/updateConfiguration": {
            "put": {
                "tags": [
                    "adobeCommerceEventsClientUpdateConfigurationV1"
                ],
                "description": "Updates eventing configuration",
                "operationId": "PutV1EventingUpdateConfiguration",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1EventingUpdateConfigurationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "config"
                            ],
                            "properties": {
                                "config": {
                                    "$ref": "#/definitions/adobe-commerce-events-client-data-configuration-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eventing/getEventProviders": {
            "get": {
                "tags": [
                    "adobeCommerceEventsClientEventProviderManagementV1"
                ],
                "description": "Returns the list of event providers",
                "operationId": "GetV1EventingGetEventProviders",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adobe-commerce-events-client-data-event-provider-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eventing/eventProvider": {
            "get": {
                "tags": [
                    "adobeCommerceEventsClientEventProviderManagementV1"
                ],
                "description": "Returns the list of event providers",
                "operationId": "GetV1EventingEventProvider",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adobe-commerce-events-client-data-event-provider-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "adobeCommerceEventsClientEventProviderManagementV1"
                ],
                "description": "Create or update the event provider",
                "operationId": "PostV1EventingEventProvider",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1EventingEventProviderBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "eventProvider"
                            ],
                            "properties": {
                                "eventProvider": {
                                    "$ref": "#/definitions/adobe-commerce-events-client-data-event-provider-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/adobe-commerce-events-client-data-event-provider-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "adobeCommerceEventsClientEventProviderManagementV1"
                ],
                "description": "Create or update the event provider",
                "operationId": "PutV1EventingEventProvider",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1EventingEventProviderBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "eventProvider"
                            ],
                            "properties": {
                                "eventProvider": {
                                    "$ref": "#/definitions/adobe-commerce-events-client-data-event-provider-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/adobe-commerce-events-client-data-event-provider-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eventing/eventProvider/{providerId}": {
            "get": {
                "tags": [
                    "adobeCommerceEventsClientEventProviderManagementV1"
                ],
                "description": "Get a single event provider by provider ID",
                "operationId": "GetV1EventingEventProviderProviderId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "providerId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/adobe-commerce-events-client-data-event-provider-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "adobeCommerceEventsClientEventProviderManagementV1"
                ],
                "description": "Delete an event provider by provider ID",
                "operationId": "DeleteV1EventingEventProviderProviderId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "providerId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eventing/getEventSubscriptions": {
            "get": {
                "tags": [
                    "adobeCommerceEventsClientEventSubscriptionListV1"
                ],
                "description": "Returns the list of all subscribed events",
                "operationId": "GetV1EventingGetEventSubscriptions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adobe-commerce-events-client-data-event-data-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/webhooks/list": {
            "get": {
                "tags": [
                    "adobeCommerceWebhooksWebhookSubscriptionListV1"
                ],
                "description": "Returns the list of all subscribed webhooks",
                "operationId": "GetV1WebhooksList",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adobe-commerce-webhooks-data-webhook-data-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/modules": {
            "get": {
                "tags": [
                    "backendModuleServiceV1"
                ],
                "description": "Returns an array of enabled modules",
                "operationId": "GetV1Modules",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/adobestock/search": {
            "get": {
                "tags": [
                    "adobeStockImageApiGetImageListV1"
                ],
                "description": "Search for images based on search criteria",
                "operationId": "GetV1AdobestockSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[requestName]",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/framework-search-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products": {
            "post": {
                "tags": [
                    "catalogProductRepositoryV1"
                ],
                "description": "Create product",
                "operationId": "PostV1Products",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "product"
                            ],
                            "properties": {
                                "product": {
                                    "$ref": "#/definitions/catalog-data-product-interface"
                                },
                                "saveOptions": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "catalogProductRepositoryV1"
                ],
                "description": "Get product list",
                "operationId": "GetV1Products",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}": {
            "put": {
                "tags": [
                    "catalogProductRepositoryV1"
                ],
                "description": "Create product",
                "operationId": "PutV1ProductsSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsSkuBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "product"
                            ],
                            "properties": {
                                "product": {
                                    "$ref": "#/definitions/catalog-data-product-interface"
                                },
                                "saveOptions": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "catalogProductRepositoryV1"
                ],
                "description": "",
                "operationId": "DeleteV1ProductsSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "Will returned True if deleted"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "catalogProductRepositoryV1"
                ],
                "description": "Get info about product by product SKU",
                "operationId": "GetV1ProductsSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "editMode",
                        "in": "query",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "name": "storeId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "name": "forceReload",
                        "in": "query",
                        "type": "boolean",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attributes/types": {
            "get": {
                "tags": [
                    "catalogProductAttributeTypesListV1"
                ],
                "description": "Retrieve list of product attribute types",
                "operationId": "GetV1ProductsAttributesTypes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-attribute-type-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attributes/{attributeCode}": {
            "get": {
                "tags": [
                    "catalogProductAttributeRepositoryV1"
                ],
                "description": "Retrieve specific attribute",
                "operationId": "GetV1ProductsAttributesAttributeCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-attribute-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogProductAttributeRepositoryV1"
                ],
                "description": "Save attribute data",
                "operationId": "PutV1ProductsAttributesAttributeCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsAttributesAttributeCodeBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "attribute"
                            ],
                            "properties": {
                                "attribute": {
                                    "$ref": "#/definitions/catalog-data-product-attribute-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-attribute-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "catalogProductAttributeRepositoryV1"
                ],
                "description": "Delete Attribute by id",
                "operationId": "DeleteV1ProductsAttributesAttributeCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attributes": {
            "get": {
                "tags": [
                    "catalogProductAttributeRepositoryV1"
                ],
                "description": "Retrieve all attributes for entity type",
                "operationId": "GetV1ProductsAttributes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-attribute-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "catalogProductAttributeRepositoryV1"
                ],
                "description": "Save attribute data",
                "operationId": "PostV1ProductsAttributes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsAttributesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "attribute"
                            ],
                            "properties": {
                                "attribute": {
                                    "$ref": "#/definitions/catalog-data-product-attribute-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-attribute-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attributes/{attributeCode}/is-filterable": {
            "get": {
                "tags": [
                    "catalogProductAttributeIsFilterableManagementV1"
                ],
                "description": "Retrieve 'is_filterable' property for specific attribute as integer",
                "operationId": "GetV1ProductsAttributesAttributeCodeIsfilterable",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attributes/{attributeCode}/is-filterable/{isFilterable}": {
            "put": {
                "tags": [
                    "catalogProductAttributeIsFilterableManagementV1"
                ],
                "description": "Set 'is_filterable' property for specific attribute as integer",
                "operationId": "PutV1ProductsAttributesAttributeCodeIsfilterableIsFilterable",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "isFilterable",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/attributes/{attributeCode}": {
            "get": {
                "tags": [
                    "catalogCategoryAttributeRepositoryV1"
                ],
                "description": "Retrieve specific attribute",
                "operationId": "GetV1CategoriesAttributesAttributeCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-category-attribute-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/attributes": {
            "get": {
                "tags": [
                    "catalogCategoryAttributeRepositoryV1"
                ],
                "description": "Retrieve all attributes for entity type",
                "operationId": "GetV1CategoriesAttributes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-category-attribute-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/attributes/{attributeCode}/options": {
            "get": {
                "tags": [
                    "catalogCategoryAttributeOptionManagementV1"
                ],
                "description": "Retrieve list of attribute options",
                "operationId": "GetV1CategoriesAttributesAttributeCodeOptions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/eav-data-attribute-option-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/types": {
            "get": {
                "tags": [
                    "catalogProductTypeListV1"
                ],
                "description": "Retrieve available product types",
                "operationId": "GetV1ProductsTypes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-type-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/sets/list": {
            "get": {
                "tags": [
                    "catalogAttributeSetRepositoryV1"
                ],
                "description": "Retrieve list of Attribute Sets",
                "operationId": "GetV1ProductsAttributesetsSetsList",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/{attributeSetId}": {
            "get": {
                "tags": [
                    "catalogAttributeSetRepositoryV1"
                ],
                "description": "Retrieve attribute set information based on given ID",
                "operationId": "GetV1ProductsAttributesetsAttributeSetId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "catalogAttributeSetRepositoryV1"
                ],
                "description": "Remove attribute set by given ID",
                "operationId": "DeleteV1ProductsAttributesetsAttributeSetId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogAttributeSetRepositoryV1"
                ],
                "description": "Save attribute set data",
                "operationId": "PutV1ProductsAttributesetsAttributeSetId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsAttributesetsAttributeSetIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "attributeSet"
                            ],
                            "properties": {
                                "attributeSet": {
                                    "$ref": "#/definitions/eav-data-attribute-set-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets": {
            "post": {
                "tags": [
                    "catalogAttributeSetManagementV1"
                ],
                "description": "Create attribute set from data",
                "operationId": "PostV1ProductsAttributesets",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsAttributesetsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "attributeSet",
                                "skeletonId"
                            ],
                            "properties": {
                                "attributeSet": {
                                    "$ref": "#/definitions/eav-data-attribute-set-interface"
                                },
                                "skeletonId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/{attributeSetId}/attributes": {
            "get": {
                "tags": [
                    "catalogProductAttributeManagementV1"
                ],
                "description": "Retrieve related attributes based on given attribute set ID",
                "operationId": "GetV1ProductsAttributesetsAttributeSetIdAttributes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-attribute-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/attributes": {
            "post": {
                "tags": [
                    "catalogProductAttributeManagementV1"
                ],
                "description": "Assign attribute to attribute set",
                "operationId": "PostV1ProductsAttributesetsAttributes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsAttributesetsAttributesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "attributeSetId",
                                "attributeGroupId",
                                "attributeCode",
                                "sortOrder"
                            ],
                            "properties": {
                                "attributeSetId": {
                                    "type": "integer"
                                },
                                "attributeGroupId": {
                                    "type": "integer"
                                },
                                "attributeCode": {
                                    "type": "string"
                                },
                                "sortOrder": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/{attributeSetId}/attributes/{attributeCode}": {
            "delete": {
                "tags": [
                    "catalogProductAttributeManagementV1"
                ],
                "description": "Remove attribute from attribute set",
                "operationId": "DeleteV1ProductsAttributesetsAttributeSetIdAttributesAttributeCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/groups/list": {
            "get": {
                "tags": [
                    "catalogProductAttributeGroupRepositoryV1"
                ],
                "description": "Retrieve list of attribute groups",
                "operationId": "GetV1ProductsAttributesetsGroupsList",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-group-search-results-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/groups": {
            "post": {
                "tags": [
                    "catalogProductAttributeGroupRepositoryV1"
                ],
                "description": "Save attribute group",
                "operationId": "PostV1ProductsAttributesetsGroups",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsAttributesetsGroupsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "group"
                            ],
                            "properties": {
                                "group": {
                                    "$ref": "#/definitions/eav-data-attribute-group-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-group-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/{attributeSetId}/groups": {
            "put": {
                "tags": [
                    "catalogProductAttributeGroupRepositoryV1"
                ],
                "description": "Save attribute group",
                "operationId": "PutV1ProductsAttributesetsAttributeSetIdGroups",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsAttributesetsAttributeSetIdGroupsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "group"
                            ],
                            "properties": {
                                "group": {
                                    "$ref": "#/definitions/eav-data-attribute-group-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-group-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/groups/{groupId}": {
            "delete": {
                "tags": [
                    "catalogProductAttributeGroupRepositoryV1"
                ],
                "description": "Remove attribute group by id",
                "operationId": "DeleteV1ProductsAttributesetsGroupsGroupId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attributes/{attributeCode}/options": {
            "get": {
                "tags": [
                    "catalogProductAttributeOptionManagementV1"
                ],
                "description": "Retrieve list of attribute options",
                "operationId": "GetV1ProductsAttributesAttributeCodeOptions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/eav-data-attribute-option-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "catalogProductAttributeOptionManagementV1"
                ],
                "description": "Add option to attribute",
                "operationId": "PostV1ProductsAttributesAttributeCodeOptions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ProductsAttributesAttributeCodeOptionsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "option"
                            ],
                            "properties": {
                                "option": {
                                    "$ref": "#/definitions/eav-data-attribute-option-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attributes/{attributeCode}/options/{optionId}": {
            "delete": {
                "tags": [
                    "catalogProductAttributeOptionManagementV1"
                ],
                "description": "Delete option from attribute",
                "operationId": "DeleteV1ProductsAttributesAttributeCodeOptionsOptionId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogProductAttributeOptionUpdateV1"
                ],
                "description": "Update attribute option",
                "operationId": "PutV1ProductsAttributesAttributeCodeOptionsOptionId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsAttributesAttributeCodeOptionsOptionIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "option"
                            ],
                            "properties": {
                                "option": {
                                    "$ref": "#/definitions/eav-data-attribute-option-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/media/types/{attributeSetName}": {
            "get": {
                "tags": [
                    "catalogProductMediaAttributeManagementV1"
                ],
                "description": "Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set.",
                "operationId": "GetV1ProductsMediaTypesAttributeSetName",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeSetName",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "list of media attributes",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-attribute-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/media/{entryId}": {
            "get": {
                "tags": [
                    "catalogProductAttributeMediaGalleryManagementV1"
                ],
                "description": "Return information about gallery entry",
                "operationId": "GetV1ProductsSkuMediaEntryId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "entryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogProductAttributeMediaGalleryManagementV1"
                ],
                "description": "Update gallery entry",
                "operationId": "PutV1ProductsSkuMediaEntryId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "entryId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsSkuMediaEntryIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entry"
                            ],
                            "properties": {
                                "entry": {
                                    "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "catalogProductAttributeMediaGalleryManagementV1"
                ],
                "description": "Remove gallery entry",
                "operationId": "DeleteV1ProductsSkuMediaEntryId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "entryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/media": {
            "post": {
                "tags": [
                    "catalogProductAttributeMediaGalleryManagementV1"
                ],
                "description": "Create new gallery entry",
                "operationId": "PostV1ProductsSkuMedia",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ProductsSkuMediaBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entry"
                            ],
                            "properties": {
                                "entry": {
                                    "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "gallery entry ID"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "catalogProductAttributeMediaGalleryManagementV1"
                ],
                "description": "Retrieve the list of gallery entries associated with given product",
                "operationId": "GetV1ProductsSkuMedia",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/group-prices/{customerGroupId}/tiers": {
            "get": {
                "tags": [
                    "catalogProductTierPriceManagementV1"
                ],
                "description": "Get tier price of product",
                "operationId": "GetV1ProductsSkuGrouppricesCustomerGroupIdTiers",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "customerGroupId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "'all' can be used to specify 'ALL GROUPS'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-tier-price-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}": {
            "post": {
                "tags": [
                    "catalogProductTierPriceManagementV1"
                ],
                "description": "Create tier price for product",
                "operationId": "PostV1ProductsSkuGrouppricesCustomerGroupIdTiersQtyPricePrice",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "customerGroupId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "'all' can be used to specify 'ALL GROUPS'"
                    },
                    {
                        "name": "price",
                        "in": "path",
                        "type": "number",
                        "required": true
                    },
                    {
                        "name": "qty",
                        "in": "path",
                        "type": "number",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}": {
            "delete": {
                "tags": [
                    "catalogProductTierPriceManagementV1"
                ],
                "description": "Remove tier price from product",
                "operationId": "DeleteV1ProductsSkuGrouppricesCustomerGroupIdTiersQty",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "customerGroupId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "'all' can be used to specify 'ALL GROUPS'"
                    },
                    {
                        "name": "qty",
                        "in": "path",
                        "type": "number",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/tier-prices-information": {
            "post": {
                "tags": [
                    "catalogTierPriceStorageV1"
                ],
                "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
                "operationId": "PostV1ProductsTierpricesinformation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsTierpricesinformationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "skus"
                            ],
                            "properties": {
                                "skus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-tier-price-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/tier-prices": {
            "post": {
                "tags": [
                    "catalogTierPriceStorageV1"
                ],
                "description": "Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
                "operationId": "PostV1ProductsTierprices",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsTierpricesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "prices"
                            ],
                            "properties": {
                                "prices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-tier-price-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-price-update-result-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogTierPriceStorageV1"
                ],
                "description": "Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
                "operationId": "PutV1ProductsTierprices",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1ProductsTierpricesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "prices"
                            ],
                            "properties": {
                                "prices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-tier-price-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-price-update-result-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/tier-prices-delete": {
            "post": {
                "tags": [
                    "catalogTierPriceStorageV1"
                ],
                "description": "Delete product tier prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
                "operationId": "PostV1ProductsTierpricesdelete",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsTierpricesdeleteBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "prices"
                            ],
                            "properties": {
                                "prices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-tier-price-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-price-update-result-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/base-prices-information": {
            "post": {
                "tags": [
                    "catalogBasePriceStorageV1"
                ],
                "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
                "operationId": "PostV1ProductsBasepricesinformation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsBasepricesinformationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "skus"
                            ],
                            "properties": {
                                "skus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-base-price-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/base-prices": {
            "post": {
                "tags": [
                    "catalogBasePriceStorageV1"
                ],
                "description": "Add or update product prices. Input item should correspond \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid price, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
                "operationId": "PostV1ProductsBaseprices",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsBasepricesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "prices"
                            ],
                            "properties": {
                                "prices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-base-price-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-price-update-result-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/cost-information": {
            "post": {
                "tags": [
                    "catalogCostStorageV1"
                ],
                "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
                "operationId": "PostV1ProductsCostinformation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsCostinformationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "skus"
                            ],
                            "properties": {
                                "skus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-cost-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/cost": {
            "post": {
                "tags": [
                    "catalogCostStorageV1"
                ],
                "description": "Add or update product cost. Input item should correspond to \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
                "operationId": "PostV1ProductsCost",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsCostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "prices"
                            ],
                            "properties": {
                                "prices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-cost-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-price-update-result-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/cost-delete": {
            "post": {
                "tags": [
                    "catalogCostStorageV1"
                ],
                "description": "Delete product cost. In case of at least one of skus is not found exception will be thrown. If error occurred during the delete exception will be thrown.",
                "operationId": "PostV1ProductsCostdelete",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsCostdeleteBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "skus"
                            ],
                            "properties": {
                                "skus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "Will return True if deleted."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/special-price-information": {
            "post": {
                "tags": [
                    "catalogSpecialPriceStorageV1"
                ],
                "description": "Return product's special price. In case of at least one of skus is not found exception will be thrown.",
                "operationId": "PostV1ProductsSpecialpriceinformation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsSpecialpriceinformationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "skus"
                            ],
                            "properties": {
                                "skus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-special-price-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/special-price": {
            "post": {
                "tags": [
                    "catalogSpecialPriceStorageV1"
                ],
                "description": "Add or update product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
                "operationId": "PostV1ProductsSpecialprice",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsSpecialpriceBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "prices"
                            ],
                            "properties": {
                                "prices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-special-price-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-price-update-result-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/special-price-delete": {
            "post": {
                "tags": [
                    "catalogSpecialPriceStorageV1"
                ],
                "description": "Delete product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the delete exception will be thrown.",
                "operationId": "PostV1ProductsSpecialpricedelete",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsSpecialpricedeleteBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "prices"
                            ],
                            "properties": {
                                "prices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-special-price-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-price-update-result-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/{categoryId}": {
            "delete": {
                "tags": [
                    "catalogCategoryRepositoryV1"
                ],
                "description": "Delete category by identifier",
                "operationId": "DeleteV1CategoriesCategoryId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "Will returned True if deleted"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "catalogCategoryRepositoryV1"
                ],
                "description": "Get info about category by category id",
                "operationId": "GetV1CategoriesCategoryId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "storeId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-category-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories": {
            "post": {
                "tags": [
                    "catalogCategoryRepositoryV1"
                ],
                "description": "Create category service",
                "operationId": "PostV1Categories",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CategoriesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "category"
                            ],
                            "properties": {
                                "category": {
                                    "$ref": "#/definitions/catalog-data-category-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-category-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "catalogCategoryManagementV1"
                ],
                "description": "Retrieve list of categories",
                "operationId": "GetV1Categories",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "rootCategoryId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-category-tree-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/{id}": {
            "put": {
                "tags": [
                    "catalogCategoryRepositoryV1"
                ],
                "description": "Create category service",
                "operationId": "PutV1CategoriesId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CategoriesIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "category"
                            ],
                            "properties": {
                                "category": {
                                    "$ref": "#/definitions/catalog-data-category-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-category-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/{categoryId}/move": {
            "put": {
                "tags": [
                    "catalogCategoryManagementV1"
                ],
                "description": "Move category",
                "operationId": "PutV1CategoriesCategoryIdMove",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PutV1CategoriesCategoryIdMoveBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "parentId"
                            ],
                            "properties": {
                                "parentId": {
                                    "type": "integer"
                                },
                                "afterId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/list": {
            "get": {
                "tags": [
                    "catalogCategoryListV1"
                ],
                "description": "Get category list",
                "operationId": "GetV1CategoriesList",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-category-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/options/types": {
            "get": {
                "tags": [
                    "catalogProductCustomOptionTypeListV1"
                ],
                "description": "Get custom option types",
                "operationId": "GetV1ProductsOptionsTypes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-custom-option-type-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/options": {
            "get": {
                "tags": [
                    "catalogProductCustomOptionRepositoryV1"
                ],
                "description": "Get the list of custom options for a specific product",
                "operationId": "GetV1ProductsSkuOptions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/options/{optionId}": {
            "get": {
                "tags": [
                    "catalogProductCustomOptionRepositoryV1"
                ],
                "description": "Get custom option for a specific product",
                "operationId": "GetV1ProductsSkuOptionsOptionId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "catalogProductCustomOptionRepositoryV1"
                ],
                "description": "",
                "operationId": "DeleteV1ProductsSkuOptionsOptionId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/options": {
            "post": {
                "tags": [
                    "catalogProductCustomOptionRepositoryV1"
                ],
                "description": "Save Custom Option",
                "operationId": "PostV1ProductsOptions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsOptionsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "option"
                            ],
                            "properties": {
                                "option": {
                                    "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/options/{optionId}": {
            "put": {
                "tags": [
                    "catalogProductCustomOptionRepositoryV1"
                ],
                "description": "Save Custom Option",
                "operationId": "PutV1ProductsOptionsOptionId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsOptionsOptionIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "option"
                            ],
                            "properties": {
                                "option": {
                                    "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/links/types": {
            "get": {
                "tags": [
                    "catalogProductLinkTypeListV1"
                ],
                "description": "Retrieve information about available product link types",
                "operationId": "GetV1ProductsLinksTypes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-link-type-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/links/{type}/attributes": {
            "get": {
                "tags": [
                    "catalogProductLinkTypeListV1"
                ],
                "description": "Provide a list of the product link type attributes",
                "operationId": "GetV1ProductsLinksTypeAttributes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-link-attribute-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/links/{type}": {
            "get": {
                "tags": [
                    "catalogProductLinkManagementV1"
                ],
                "description": "Provide the list of links for a specific product",
                "operationId": "GetV1ProductsSkuLinksType",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-link-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/links": {
            "post": {
                "tags": [
                    "catalogProductLinkManagementV1"
                ],
                "description": "Assign a product link to another product",
                "operationId": "PostV1ProductsSkuLinks",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ProductsSkuLinksBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "items"
                            ],
                            "properties": {
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-product-link-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogProductLinkRepositoryV1"
                ],
                "description": "Save product link",
                "operationId": "PutV1ProductsSkuLinks",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsSkuLinksBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/catalog-data-product-link-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/links/{type}/{linkedProductSku}": {
            "delete": {
                "tags": [
                    "catalogProductLinkRepositoryV1"
                ],
                "description": "",
                "operationId": "DeleteV1ProductsSkuLinksTypeLinkedProductSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "linkedProductSku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/{categoryId}/products": {
            "get": {
                "tags": [
                    "catalogCategoryLinkManagementV1"
                ],
                "description": "Get products assigned to category",
                "operationId": "GetV1CategoriesCategoryIdProducts",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-category-product-link-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "catalogCategoryLinkRepositoryV1"
                ],
                "description": "Assign a product to the required category",
                "operationId": "PostV1CategoriesCategoryIdProducts",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1CategoriesCategoryIdProductsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "productLink"
                            ],
                            "properties": {
                                "productLink": {
                                    "$ref": "#/definitions/catalog-data-category-product-link-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "will returned True if assigned"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogCategoryLinkRepositoryV1"
                ],
                "description": "Assign a product to the required category",
                "operationId": "PutV1CategoriesCategoryIdProducts",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CategoriesCategoryIdProductsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "productLink"
                            ],
                            "properties": {
                                "productLink": {
                                    "$ref": "#/definitions/catalog-data-category-product-link-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "will returned True if assigned"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/{categoryId}/products/{sku}": {
            "delete": {
                "tags": [
                    "catalogCategoryLinkRepositoryV1"
                ],
                "description": "Remove the product assignment from the category by category id and sku",
                "operationId": "DeleteV1CategoriesCategoryIdProductsSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "will returned True if products successfully deleted"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/websites": {
            "post": {
                "tags": [
                    "catalogProductWebsiteLinkRepositoryV1"
                ],
                "description": "Assign a product to the website",
                "operationId": "PostV1ProductsSkuWebsites",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ProductsSkuWebsitesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "productWebsiteLink"
                            ],
                            "properties": {
                                "productWebsiteLink": {
                                    "$ref": "#/definitions/catalog-data-product-website-link-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "will returned True if website successfully assigned to product"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "catalogProductWebsiteLinkRepositoryV1"
                ],
                "description": "Assign a product to the website",
                "operationId": "PutV1ProductsSkuWebsites",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsSkuWebsitesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "productWebsiteLink"
                            ],
                            "properties": {
                                "productWebsiteLink": {
                                    "$ref": "#/definitions/catalog-data-product-website-link-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "will returned True if website successfully assigned to product"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/websites/{websiteId}": {
            "delete": {
                "tags": [
                    "catalogProductWebsiteLinkRepositoryV1"
                ],
                "description": "Remove the website assignment from the product by product sku",
                "operationId": "DeleteV1ProductsSkuWebsitesWebsiteId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "websiteId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "will returned True if website successfully unassigned from product"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}": {
            "get": {
                "tags": [
                    "quoteCartRepositoryV1"
                ],
                "description": "Enables an administrative user to return information for a specified cart.",
                "operationId": "GetV1CartsCartId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-cart-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "quoteCartManagementV1"
                ],
                "description": "Assigns a specified customer to a specified shopping cart.",
                "operationId": "PutV1CartsCartId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "PutV1CartsCartIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "customerId",
                                "storeId"
                            ],
                            "properties": {
                                "customerId": {
                                    "type": "integer",
                                    "description": "The customer ID."
                                },
                                "storeId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/search": {
            "get": {
                "tags": [
                    "quoteCartRepositoryV1"
                ],
                "description": "Enables administrative users to list carts that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#CartRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1CartsSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-cart-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/": {
            "post": {
                "tags": [
                    "quoteCartManagementV1"
                ],
                "description": "Creates an empty cart and quote for a guest.",
                "operationId": "PostV1Carts",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Cart ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{customerId}/carts": {
            "post": {
                "tags": [
                    "quoteCartManagementV1"
                ],
                "description": "Creates an empty cart and quote for a specified customer if customer does not have a cart yet.",
                "operationId": "PostV1CustomersCustomerIdCarts",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The customer ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/order": {
            "put": {
                "tags": [
                    "quoteCartManagementV1"
                ],
                "description": "Places an order for a specified cart.",
                "operationId": "PutV1CartsCartIdOrder",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "PutV1CartsCartIdOrderBody",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "paymentMethod": {
                                    "$ref": "#/definitions/quote-data-payment-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Order ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/shipping-methods": {
            "get": {
                "tags": [
                    "quoteShippingMethodManagementV1"
                ],
                "description": "Lists applicable shipping methods for a specified quote.",
                "operationId": "GetV1CartsCartIdShippingmethods",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shopping cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "An array of shipping methods.",
                            "items": {
                                "$ref": "#/definitions/quote-data-shipping-method-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/estimate-shipping-methods-by-address-id": {
            "post": {
                "tags": [
                    "quoteShippingMethodManagementV1"
                ],
                "description": "Estimate shipping",
                "operationId": "PostV1CartsCartIdEstimateshippingmethodsbyaddressid",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shopping cart ID."
                    },
                    {
                        "name": "PostV1CartsCartIdEstimateshippingmethodsbyaddressidBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "addressId"
                            ],
                            "properties": {
                                "addressId": {
                                    "type": "integer",
                                    "description": "The estimate address id"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "An array of shipping methods.",
                            "items": {
                                "$ref": "#/definitions/quote-data-shipping-method-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/estimate-shipping-methods": {
            "post": {
                "tags": [
                    "quoteShipmentEstimationV1"
                ],
                "description": "Estimate shipping by address and return list of available shipping methods",
                "operationId": "PostV1CartsCartIdEstimateshippingmethods",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1CartsCartIdEstimateshippingmethodsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "An array of shipping methods",
                            "items": {
                                "$ref": "#/definitions/quote-data-shipping-method-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/items": {
            "get": {
                "tags": [
                    "quoteCartItemRepositoryV1"
                ],
                "description": "Lists items that are assigned to a specified cart.",
                "operationId": "GetV1CartsCartIdItems",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "Array of items.",
                            "items": {
                                "$ref": "#/definitions/quote-data-cart-item-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{quoteId}/items": {
            "post": {
                "tags": [
                    "quoteCartItemRepositoryV1"
                ],
                "description": "Add/update the specified cart item.",
                "operationId": "PostV1CartsQuoteIdItems",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "quoteId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1CartsQuoteIdItemsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "cartItem"
                            ],
                            "properties": {
                                "cartItem": {
                                    "$ref": "#/definitions/quote-data-cart-item-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-cart-item-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/items/{itemId}": {
            "put": {
                "tags": [
                    "quoteCartItemRepositoryV1"
                ],
                "description": "Add/update the specified cart item.",
                "operationId": "PutV1CartsCartIdItemsItemId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CartsCartIdItemsItemIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "cartItem"
                            ],
                            "properties": {
                                "cartItem": {
                                    "$ref": "#/definitions/quote-data-cart-item-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-cart-item-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "quoteCartItemRepositoryV1"
                ],
                "description": "Removes the specified item from the specified cart.",
                "operationId": "DeleteV1CartsCartIdItemsItemId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The item ID of the item to be removed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/selected-payment-method": {
            "get": {
                "tags": [
                    "quotePaymentMethodManagementV1"
                ],
                "description": "Returns the payment method for a specified shopping cart.",
                "operationId": "GetV1CartsCartIdSelectedpaymentmethod",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-payment-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "quotePaymentMethodManagementV1"
                ],
                "description": "Adds a specified payment method to a specified shopping cart.",
                "operationId": "PutV1CartsCartIdSelectedpaymentmethod",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "PutV1CartsCartIdSelectedpaymentmethodBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "method"
                            ],
                            "properties": {
                                "method": {
                                    "$ref": "#/definitions/quote-data-payment-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "redirect url or error message."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/payment-methods": {
            "get": {
                "tags": [
                    "quotePaymentMethodManagementV1"
                ],
                "description": "Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1CartsCartIdPaymentmethods",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "Array of payment methods.",
                            "items": {
                                "$ref": "#/definitions/quote-data-payment-method-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/billing-address": {
            "get": {
                "tags": [
                    "quoteBillingAddressManagementV1"
                ],
                "description": "Returns the billing address for a specified quote.",
                "operationId": "GetV1CartsCartIdBillingaddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-address-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "quoteBillingAddressManagementV1"
                ],
                "description": "Assigns a specified billing address to a specified cart.",
                "operationId": "PostV1CartsCartIdBillingaddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "PostV1CartsCartIdBillingaddressBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                },
                                "useForShipping": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Address ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/coupons": {
            "get": {
                "tags": [
                    "quoteCouponManagementV1"
                ],
                "description": "Returns information for a coupon in a specified cart.",
                "operationId": "GetV1CartsCartIdCoupons",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "The coupon code data."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "quoteCouponManagementV1"
                ],
                "description": "Deletes a coupon from a specified cart.",
                "operationId": "DeleteV1CartsCartIdCoupons",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/coupons/{couponCode}": {
            "put": {
                "tags": [
                    "quoteCouponManagementV1"
                ],
                "description": "Adds a coupon by code to a specified cart.",
                "operationId": "PutV1CartsCartIdCouponsCouponCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "couponCode",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The coupon code data."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/totals": {
            "get": {
                "tags": [
                    "quoteCartTotalRepositoryV1"
                ],
                "description": "Returns quote totals data for a specified cart.",
                "operationId": "GetV1CartsCartIdTotals",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-totals-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/stockItems/{productSku}": {
            "get": {
                "tags": [
                    "catalogInventoryStockRegistryV1"
                ],
                "description": "",
                "operationId": "GetV1StockItemsProductSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "productSku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "scopeId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-inventory-data-stock-item-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{productSku}/stockItems/{itemId}": {
            "put": {
                "tags": [
                    "catalogInventoryStockRegistryV1"
                ],
                "description": "",
                "operationId": "PutV1ProductsProductSkuStockItemsItemId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "productSku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsProductSkuStockItemsItemIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "stockItem"
                            ],
                            "properties": {
                                "stockItem": {
                                    "$ref": "#/definitions/catalog-inventory-data-stock-item-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/stockItems/lowStock/": {
            "get": {
                "tags": [
                    "catalogInventoryStockRegistryV1"
                ],
                "description": "Retrieves a list of SKU's with low inventory qty",
                "operationId": "GetV1StockItemsLowStock",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "scopeId",
                        "in": "query",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "type": "number",
                        "required": true
                    },
                    {
                        "name": "currentPage",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-inventory-data-stock-item-collection-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/stockStatuses/{productSku}": {
            "get": {
                "tags": [
                    "catalogInventoryStockRegistryV1"
                ],
                "description": "",
                "operationId": "GetV1StockStatusesProductSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "productSku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "scopeId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-inventory-data-stock-status-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/{id}": {
            "get": {
                "tags": [
                    "salesOrderRepositoryV1"
                ],
                "description": "Loads a specified order.",
                "operationId": "GetV1OrdersId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-order-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders": {
            "get": {
                "tags": [
                    "salesOrderRepositoryV1"
                ],
                "description": "Lists orders that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#OrderRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1Orders",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-order-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "salesOrderRepositoryV1"
                ],
                "description": "Performs persist operations for a specified order.",
                "operationId": "PostV1Orders",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1OrdersBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-order-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-order-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/create": {
            "put": {
                "tags": [
                    "salesOrderRepositoryV1"
                ],
                "description": "Performs persist operations for a specified order.",
                "operationId": "PutV1OrdersCreate",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1OrdersCreateBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-order-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-order-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/{id}/statuses": {
            "get": {
                "tags": [
                    "salesOrderManagementV1"
                ],
                "description": "Gets the status for a specified order.",
                "operationId": "GetV1OrdersIdStatuses",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "Order status."
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/{id}/cancel": {
            "post": {
                "tags": [
                    "salesOrderManagementV1"
                ],
                "description": "Cancels a specified order.",
                "operationId": "PostV1OrdersIdCancel",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/{id}/emails": {
            "post": {
                "tags": [
                    "salesOrderManagementV1"
                ],
                "description": "Emails a user a specified order.",
                "operationId": "PostV1OrdersIdEmails",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/{id}/hold": {
            "post": {
                "tags": [
                    "salesOrderManagementV1"
                ],
                "description": "Holds a specified order.",
                "operationId": "PostV1OrdersIdHold",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/{id}/unhold": {
            "post": {
                "tags": [
                    "salesOrderManagementV1"
                ],
                "description": "Releases a specified order from hold status.",
                "operationId": "PostV1OrdersIdUnhold",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/{id}/comments": {
            "post": {
                "tags": [
                    "salesOrderManagementV1"
                ],
                "description": "Adds a comment to a specified order.",
                "operationId": "PostV1OrdersIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The order ID."
                    },
                    {
                        "name": "PostV1OrdersIdCommentsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "statusHistory"
                            ],
                            "properties": {
                                "statusHistory": {
                                    "$ref": "#/definitions/sales-data-order-status-history-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "salesOrderManagementV1"
                ],
                "description": "Lists comments for a specified order.",
                "operationId": "GetV1OrdersIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The order ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-order-status-history-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/{parent_id}": {
            "put": {
                "tags": [
                    "salesOrderAddressRepositoryV1"
                ],
                "description": "Performs persist operations for a specified order address.",
                "operationId": "PutV1OrdersParent_id",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1OrdersParent_idBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-order-address-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-order-address-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/items/{id}": {
            "get": {
                "tags": [
                    "salesOrderItemRepositoryV1"
                ],
                "description": "Loads a specified order item.",
                "operationId": "GetV1OrdersItemsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The order item ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-order-item-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/orders/items": {
            "get": {
                "tags": [
                    "salesOrderItemRepositoryV1"
                ],
                "description": "Lists order items that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#OrderItemRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1OrdersItems",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-order-item-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/invoices/{id}": {
            "get": {
                "tags": [
                    "salesInvoiceRepositoryV1"
                ],
                "description": "Loads a specified invoice.",
                "operationId": "GetV1InvoicesId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The invoice ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-invoice-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/invoices": {
            "get": {
                "tags": [
                    "salesInvoiceRepositoryV1"
                ],
                "description": "Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1Invoices",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-invoice-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/invoices/": {
            "post": {
                "tags": [
                    "salesInvoiceRepositoryV1"
                ],
                "description": "Performs persist operations for a specified invoice.",
                "operationId": "PostV1Invoices",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InvoicesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-invoice-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-invoice-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/invoices/{id}/comments": {
            "get": {
                "tags": [
                    "salesInvoiceManagementV1"
                ],
                "description": "Lists comments for a specified invoice.",
                "operationId": "GetV1InvoicesIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The invoice ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-invoice-comment-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/invoices/{id}/emails": {
            "post": {
                "tags": [
                    "salesInvoiceManagementV1"
                ],
                "description": "Emails a user a specified invoice.",
                "operationId": "PostV1InvoicesIdEmails",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The invoice ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/invoices/{id}/void": {
            "post": {
                "tags": [
                    "salesInvoiceManagementV1"
                ],
                "description": "Voids a specified invoice.",
                "operationId": "PostV1InvoicesIdVoid",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The invoice ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/invoices/{id}/capture": {
            "post": {
                "tags": [
                    "salesInvoiceManagementV1"
                ],
                "description": "Sets invoice capture.",
                "operationId": "PostV1InvoicesIdCapture",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/invoices/comments": {
            "post": {
                "tags": [
                    "salesInvoiceCommentRepositoryV1"
                ],
                "description": "Performs persist operations for a specified invoice comment.",
                "operationId": "PostV1InvoicesComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InvoicesCommentsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-invoice-comment-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-invoice-comment-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/invoice/{invoiceId}/refund": {
            "post": {
                "tags": [
                    "salesRefundInvoiceV1"
                ],
                "description": "Create refund for invoice",
                "operationId": "PostV1InvoiceInvoiceIdRefund",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1InvoiceInvoiceIdRefundBody",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/sales-data-creditmemo-item-creation-interface"
                                    }
                                },
                                "isOnline": {
                                    "type": "boolean"
                                },
                                "notify": {
                                    "type": "boolean"
                                },
                                "appendComment": {
                                    "type": "boolean"
                                },
                                "comment": {
                                    "$ref": "#/definitions/sales-data-creditmemo-comment-creation-interface"
                                },
                                "arguments": {
                                    "$ref": "#/definitions/sales-data-creditmemo-creation-arguments-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/creditmemo/{id}/comments": {
            "get": {
                "tags": [
                    "salesCreditmemoManagementV1"
                ],
                "description": "Lists comments for a specified credit memo.",
                "operationId": "GetV1CreditmemoIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The credit memo ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-creditmemo-comment-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "salesCreditmemoCommentRepositoryV1"
                ],
                "description": "Performs persist operations for a specified entity.",
                "operationId": "PostV1CreditmemoIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1CreditmemoIdCommentsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-creditmemo-comment-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-creditmemo-comment-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/creditmemo/{id}": {
            "put": {
                "tags": [
                    "salesCreditmemoManagementV1"
                ],
                "description": "Cancels a specified credit memo.",
                "operationId": "PutV1CreditmemoId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The credit memo ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "salesCreditmemoRepositoryV1"
                ],
                "description": "Loads a specified credit memo.",
                "operationId": "GetV1CreditmemoId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The credit memo ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-creditmemo-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/creditmemo/{id}/emails": {
            "post": {
                "tags": [
                    "salesCreditmemoManagementV1"
                ],
                "description": "Emails a user a specified credit memo.",
                "operationId": "PostV1CreditmemoIdEmails",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The credit memo ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/creditmemo/refund": {
            "post": {
                "tags": [
                    "salesCreditmemoManagementV1"
                ],
                "description": "Prepare creditmemo to refund and save it.",
                "operationId": "PostV1CreditmemoRefund",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CreditmemoRefundBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "creditmemo"
                            ],
                            "properties": {
                                "creditmemo": {
                                    "$ref": "#/definitions/sales-data-creditmemo-interface"
                                },
                                "offlineRequested": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-creditmemo-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/creditmemos": {
            "get": {
                "tags": [
                    "salesCreditmemoRepositoryV1"
                ],
                "description": "Lists credit memos that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CreditmemoRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1Creditmemos",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-creditmemo-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/creditmemo": {
            "post": {
                "tags": [
                    "salesCreditmemoRepositoryV1"
                ],
                "description": "Performs persist operations for a specified credit memo.",
                "operationId": "PostV1Creditmemo",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CreditmemoBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-creditmemo-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-creditmemo-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/order/{orderId}/refund": {
            "post": {
                "tags": [
                    "salesRefundOrderV1"
                ],
                "description": "Create offline refund for order",
                "operationId": "PostV1OrderOrderIdRefund",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1OrderOrderIdRefundBody",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/sales-data-creditmemo-item-creation-interface"
                                    }
                                },
                                "notify": {
                                    "type": "boolean"
                                },
                                "appendComment": {
                                    "type": "boolean"
                                },
                                "comment": {
                                    "$ref": "#/definitions/sales-data-creditmemo-comment-creation-interface"
                                },
                                "arguments": {
                                    "$ref": "#/definitions/sales-data-creditmemo-creation-arguments-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/shipment/{id}": {
            "get": {
                "tags": [
                    "salesShipmentRepositoryV1"
                ],
                "description": "Loads a specified shipment.",
                "operationId": "GetV1ShipmentId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shipment ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-shipment-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/shipments": {
            "get": {
                "tags": [
                    "salesShipmentRepositoryV1"
                ],
                "description": "Lists shipments that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#ShipmentRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1Shipments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-shipment-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/shipment/": {
            "post": {
                "tags": [
                    "salesShipmentRepositoryV1"
                ],
                "description": "Performs persist operations for a specified shipment.",
                "operationId": "PostV1Shipment",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ShipmentBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-shipment-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-shipment-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/shipment/{id}/comments": {
            "get": {
                "tags": [
                    "salesShipmentManagementV1"
                ],
                "description": "Lists comments for a specified shipment.",
                "operationId": "GetV1ShipmentIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shipment ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-shipment-comment-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "salesShipmentCommentRepositoryV1"
                ],
                "description": "Performs persist operations for a specified shipment comment.",
                "operationId": "PostV1ShipmentIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ShipmentIdCommentsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-shipment-comment-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-shipment-comment-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/shipment/{id}/emails": {
            "post": {
                "tags": [
                    "salesShipmentManagementV1"
                ],
                "description": "Emails user a specified shipment.",
                "operationId": "PostV1ShipmentIdEmails",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shipment ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/shipment/{id}/label": {
            "get": {
                "tags": [
                    "salesShipmentManagementV1"
                ],
                "description": "Gets a specified shipment label.",
                "operationId": "GetV1ShipmentIdLabel",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shipment label ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "Shipment label."
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/shipment/track": {
            "post": {
                "tags": [
                    "salesShipmentTrackRepositoryV1"
                ],
                "description": "Performs persist operations for a specified shipment track.",
                "operationId": "PostV1ShipmentTrack",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ShipmentTrackBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "entity"
                            ],
                            "properties": {
                                "entity": {
                                    "$ref": "#/definitions/sales-data-shipment-track-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-shipment-track-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/shipment/track/{id}": {
            "delete": {
                "tags": [
                    "salesShipmentTrackRepositoryV1"
                ],
                "description": "Deletes a specified shipment track by ID.",
                "operationId": "DeleteV1ShipmentTrackId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shipment track ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/order/{orderId}/ship": {
            "post": {
                "tags": [
                    "salesShipOrderV1"
                ],
                "description": "Creates new Shipment for given Order.",
                "operationId": "PostV1OrderOrderIdShip",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1OrderOrderIdShipBody",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/sales-data-shipment-item-creation-interface"
                                    }
                                },
                                "notify": {
                                    "type": "boolean"
                                },
                                "appendComment": {
                                    "type": "boolean"
                                },
                                "comment": {
                                    "$ref": "#/definitions/sales-data-shipment-comment-creation-interface"
                                },
                                "tracks": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/sales-data-shipment-track-creation-interface"
                                    }
                                },
                                "packages": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/sales-data-shipment-package-creation-interface"
                                    }
                                },
                                "arguments": {
                                    "$ref": "#/definitions/sales-data-shipment-creation-arguments-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Id of created Shipment."
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/transactions/{id}": {
            "get": {
                "tags": [
                    "salesTransactionRepositoryV1"
                ],
                "description": "Loads a specified transaction.",
                "operationId": "GetV1TransactionsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The transaction ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-transaction-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/transactions": {
            "get": {
                "tags": [
                    "salesTransactionRepositoryV1"
                ],
                "description": "Lists transactions that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TransactionRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1Transactions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-data-transaction-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/order/{orderId}/invoice": {
            "post": {
                "tags": [
                    "salesInvoiceOrderV1"
                ],
                "description": "",
                "operationId": "PostV1OrderOrderIdInvoice",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1OrderOrderIdInvoiceBody",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "capture": {
                                    "type": "boolean"
                                },
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/sales-data-invoice-item-creation-interface"
                                    }
                                },
                                "notify": {
                                    "type": "boolean"
                                },
                                "appendComment": {
                                    "type": "boolean"
                                },
                                "comment": {
                                    "$ref": "#/definitions/sales-data-invoice-comment-creation-interface"
                                },
                                "arguments": {
                                    "$ref": "#/definitions/sales-data-invoice-creation-arguments-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/salesRules/{ruleId}": {
            "get": {
                "tags": [
                    "salesRuleRuleRepositoryV1"
                ],
                "description": "Get rule by ID.",
                "operationId": "GetV1SalesRulesRuleId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "ruleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-rule-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "salesRuleRuleRepositoryV1"
                ],
                "description": "Save sales rule.",
                "operationId": "PutV1SalesRulesRuleId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "ruleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1SalesRulesRuleIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "rule"
                            ],
                            "properties": {
                                "rule": {
                                    "$ref": "#/definitions/sales-rule-data-rule-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-rule-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "salesRuleRuleRepositoryV1"
                ],
                "description": "Delete rule by ID.",
                "operationId": "DeleteV1SalesRulesRuleId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "ruleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/salesRules/search": {
            "get": {
                "tags": [
                    "salesRuleRuleRepositoryV1"
                ],
                "description": "Retrieve sales rules that match te specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#RuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1SalesRulesSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-rule-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/salesRules": {
            "post": {
                "tags": [
                    "salesRuleRuleRepositoryV1"
                ],
                "description": "Save sales rule.",
                "operationId": "PostV1SalesRules",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1SalesRulesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "rule"
                            ],
                            "properties": {
                                "rule": {
                                    "$ref": "#/definitions/sales-rule-data-rule-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-rule-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/coupons/{couponId}": {
            "get": {
                "tags": [
                    "salesRuleCouponRepositoryV1"
                ],
                "description": "Get coupon by coupon id.",
                "operationId": "GetV1CouponsCouponId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "couponId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-coupon-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "salesRuleCouponRepositoryV1"
                ],
                "description": "Save a coupon.",
                "operationId": "PutV1CouponsCouponId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "couponId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CouponsCouponIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "coupon"
                            ],
                            "properties": {
                                "coupon": {
                                    "$ref": "#/definitions/sales-rule-data-coupon-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-coupon-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "salesRuleCouponRepositoryV1"
                ],
                "description": "Delete coupon by coupon id.",
                "operationId": "DeleteV1CouponsCouponId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "couponId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/coupons/search": {
            "get": {
                "tags": [
                    "salesRuleCouponRepositoryV1"
                ],
                "description": "Retrieve a coupon using the specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CouponRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1CouponsSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-coupon-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/coupons": {
            "post": {
                "tags": [
                    "salesRuleCouponRepositoryV1"
                ],
                "description": "Save a coupon.",
                "operationId": "PostV1Coupons",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CouponsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "coupon"
                            ],
                            "properties": {
                                "coupon": {
                                    "$ref": "#/definitions/sales-rule-data-coupon-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-coupon-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/coupons/generate": {
            "post": {
                "tags": [
                    "salesRuleCouponManagementV1"
                ],
                "description": "Generate coupon for a rule",
                "operationId": "PostV1CouponsGenerate",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CouponsGenerateBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "couponSpec"
                            ],
                            "properties": {
                                "couponSpec": {
                                    "$ref": "#/definitions/sales-rule-data-coupon-generation-spec-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/coupons/deleteByIds": {
            "post": {
                "tags": [
                    "salesRuleCouponManagementV1"
                ],
                "description": "Delete coupon by coupon ids.",
                "operationId": "PostV1CouponsDeleteByIds",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CouponsDeleteByIdsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "ids"
                            ],
                            "properties": {
                                "ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "ignoreInvalidCoupons": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-coupon-mass-delete-result-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/coupons/deleteByCodes": {
            "post": {
                "tags": [
                    "salesRuleCouponManagementV1"
                ],
                "description": "Delete coupon by coupon codes.",
                "operationId": "PostV1CouponsDeleteByCodes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CouponsDeleteByCodesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "codes"
                            ],
                            "properties": {
                                "codes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "ignoreInvalidCoupons": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/sales-rule-data-coupon-mass-delete-result-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bundle-products/{sku}/links/{optionId}": {
            "post": {
                "tags": [
                    "bundleProductLinkManagementV1"
                ],
                "description": "Add child product to specified Bundle option by product sku",
                "operationId": "PostV1BundleproductsSkuLinksOptionId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1BundleproductsSkuLinksOptionIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "linkedProduct"
                            ],
                            "properties": {
                                "linkedProduct": {
                                    "$ref": "#/definitions/bundle-data-link-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bundle-products/{sku}/links/{id}": {
            "put": {
                "tags": [
                    "bundleProductLinkManagementV1"
                ],
                "description": "",
                "operationId": "PutV1BundleproductsSkuLinksId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1BundleproductsSkuLinksIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "linkedProduct"
                            ],
                            "properties": {
                                "linkedProduct": {
                                    "$ref": "#/definitions/bundle-data-link-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bundle-products/{productSku}/children": {
            "get": {
                "tags": [
                    "bundleProductLinkManagementV1"
                ],
                "description": "Get all children for Bundle product",
                "operationId": "GetV1BundleproductsProductSkuChildren",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "productSku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/bundle-data-link-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bundle-products/{sku}/options/{optionId}/children/{childSku}": {
            "delete": {
                "tags": [
                    "bundleProductLinkManagementV1"
                ],
                "description": "Remove product from Bundle product option",
                "operationId": "DeleteV1BundleproductsSkuOptionsOptionIdChildrenChildSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "childSku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bundle-products/{sku}/options/all": {
            "get": {
                "tags": [
                    "bundleProductOptionRepositoryV1"
                ],
                "description": "Get all options for bundle product",
                "operationId": "GetV1BundleproductsSkuOptionsAll",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/bundle-data-option-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bundle-products/{sku}/options/{optionId}": {
            "get": {
                "tags": [
                    "bundleProductOptionRepositoryV1"
                ],
                "description": "Get option for bundle product",
                "operationId": "GetV1BundleproductsSkuOptionsOptionId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/bundle-data-option-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bundleProductOptionRepositoryV1"
                ],
                "description": "Remove bundle option",
                "operationId": "DeleteV1BundleproductsSkuOptionsOptionId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bundle-products/options/types": {
            "get": {
                "tags": [
                    "bundleProductOptionTypeListV1"
                ],
                "description": "Get all types for options for bundle products",
                "operationId": "GetV1BundleproductsOptionsTypes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/bundle-data-option-type-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bundle-products/options/add": {
            "post": {
                "tags": [
                    "bundleProductOptionManagementV1"
                ],
                "description": "Add new option for bundle product",
                "operationId": "PostV1BundleproductsOptionsAdd",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1BundleproductsOptionsAddBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "option"
                            ],
                            "properties": {
                                "option": {
                                    "$ref": "#/definitions/bundle-data-option-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bundle-products/options/{optionId}": {
            "put": {
                "tags": [
                    "bundleProductOptionManagementV1"
                ],
                "description": "Add new option for bundle product",
                "operationId": "PutV1BundleproductsOptionsOptionId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1BundleproductsOptionsOptionIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "option"
                            ],
                            "properties": {
                                "option": {
                                    "$ref": "#/definitions/bundle-data-option-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/shipping-information": {
            "post": {
                "tags": [
                    "checkoutShippingInformationManagementV1"
                ],
                "description": "",
                "operationId": "PostV1CartsCartIdShippinginformation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1CartsCartIdShippinginformationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "addressInformation"
                            ],
                            "properties": {
                                "addressInformation": {
                                    "$ref": "#/definitions/checkout-data-shipping-information-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/checkout-data-payment-details-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/totals-information": {
            "post": {
                "tags": [
                    "checkoutTotalsInformationManagementV1"
                ],
                "description": "Calculate quote totals based on address and shipping method.",
                "operationId": "PostV1CartsCartIdTotalsinformation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1CartsCartIdTotalsinformationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "addressInformation"
                            ],
                            "properties": {
                                "addressInformation": {
                                    "$ref": "#/definitions/checkout-data-totals-information-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-totals-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/adminuisdk/massaction/{request_id}": {
            "get": {
                "tags": [
                    "commerceBackendUixMassActionFailedRequestRepositoryV1"
                ],
                "description": "Load mass actions failed request by request id",
                "operationId": "GetV1AdminuisdkMassactionRequest_id",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "query",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "request_id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/commerce-backend-uix-data-mass-action-failed-request-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/": {
            "get": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Returns the list of companies. The list is an array of objects, and detailed information about item attributes might not be included.",
                "operationId": "GetV1Company",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Create or update a company account.",
                "operationId": "PostV1Company",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CompanyBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "company"
                            ],
                            "properties": {
                                "company": {
                                    "$ref": "#/definitions/company-data-company-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/{companyId}": {
            "get": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Returns company details.",
                "operationId": "GetV1CompanyCompanyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Delete a company. Customers belonging to a company are not deleted with this request.",
                "operationId": "DeleteV1CompanyCompanyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "companyCompanyRepositoryV1"
                ],
                "description": "Create or update a company account.",
                "operationId": "PutV1CompanyCompanyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CompanyCompanyIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "company"
                            ],
                            "properties": {
                                "company": {
                                    "$ref": "#/definitions/company-data-company-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/team/": {
            "get": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Returns the list of teams for the specified search criteria (team name or description).",
                "operationId": "GetV1Team",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-team-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/team/{teamId}": {
            "get": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Returns data for a team in the company, by entity id.",
                "operationId": "GetV1TeamTeamId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "teamId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-team-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Delete a team from the company structure.",
                "operationId": "DeleteV1TeamTeamId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "teamId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Update a team in the company structure.",
                "operationId": "PutV1TeamTeamId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "teamId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1TeamTeamIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "team"
                            ],
                            "properties": {
                                "team": {
                                    "$ref": "#/definitions/company-data-team-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/team/{companyId}": {
            "post": {
                "tags": [
                    "companyTeamRepositoryV1"
                ],
                "description": "Create a team in the company structure.",
                "operationId": "PostV1TeamCompanyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1TeamCompanyIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "team"
                            ],
                            "properties": {
                                "team": {
                                    "$ref": "#/definitions/company-data-team-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/hierarchy/{id}": {
            "get": {
                "tags": [
                    "companyCompanyHierarchyV1"
                ],
                "description": "Returns the list of teams and company users in the company structure.",
                "operationId": "GetV1HierarchyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/company-data-hierarchy-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/hierarchy/move/{id}": {
            "put": {
                "tags": [
                    "companyCompanyHierarchyV1"
                ],
                "description": "Moves teams and users within the company structure.",
                "operationId": "PutV1HierarchyMoveId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PutV1HierarchyMoveIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "newParentId"
                            ],
                            "properties": {
                                "newParentId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/role/": {
            "get": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Returns the list of roles and permissions for a specified company.",
                "operationId": "GetV1CompanyRole",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-role-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Create or update a role for a selected company.",
                "operationId": "PostV1CompanyRole",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CompanyRoleBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "role"
                            ],
                            "properties": {
                                "role": {
                                    "$ref": "#/definitions/company-data-role-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-role-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/role/{roleId}": {
            "get": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Returns the list of permissions for a specified role.",
                "operationId": "GetV1CompanyRoleRoleId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-role-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Delete a role.",
                "operationId": "DeleteV1CompanyRoleRoleId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/role/{id}": {
            "put": {
                "tags": [
                    "companyRoleRepositoryV1"
                ],
                "description": "Create or update a role for a selected company.",
                "operationId": "PutV1CompanyRoleId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CompanyRoleIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "role"
                            ],
                            "properties": {
                                "role": {
                                    "$ref": "#/definitions/company-data-role-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-role-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/assignRoles": {
            "put": {
                "tags": [
                    "companyAclV1"
                ],
                "description": "Change a role for a company user.",
                "operationId": "PutV1CompanyAssignRoles",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1CompanyAssignRolesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "userId",
                                "roles"
                            ],
                            "properties": {
                                "userId": {
                                    "type": "integer"
                                },
                                "roles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/company-data-role-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/role/{roleId}/users": {
            "get": {
                "tags": [
                    "companyAclV1"
                ],
                "description": "View the list of company users assigned to a specified role.",
                "operationId": "GetV1CompanyRoleRoleIdUsers",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-customer-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{customerId}/companies/{companyId}": {
            "put": {
                "tags": [
                    "companyCompanyCustomerAssignmentV1"
                ],
                "description": "Assigns customer as a company user.",
                "operationId": "PutV1CustomersCustomerIdCompaniesCompanyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "companyCompanyCustomerAssignmentV1"
                ],
                "description": "Unassigns customer from the company.",
                "operationId": "DeleteV1CustomersCustomerIdCompaniesCompanyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "companyCompanyUserRepositoryV1"
                ],
                "description": "Returns customer attributes for company by ID.",
                "operationId": "GetV1CustomersCustomerIdCompaniesCompanyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-customer-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{customerId}/companies": {
            "get": {
                "tags": [
                    "companyCompanyCustomerAssignmentV1"
                ],
                "description": "Returns a list of companies the customer is assigned to",
                "operationId": "GetV1CustomersCustomerIdCompanies",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/company-data-company-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/companies": {
            "post": {
                "tags": [
                    "companyCompanyUserRepositoryV1"
                ],
                "description": "Save customer attributes for company.",
                "operationId": "PostV1CustomersCompanies",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CustomersCompaniesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "companyAttributes"
                            ],
                            "properties": {
                                "companyAttributes": {
                                    "$ref": "#/definitions/company-data-company-customer-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "companyCompanyUserRepositoryV1"
                ],
                "description": "Returns the list of company customer attributes.",
                "operationId": "GetV1CustomersCompanies",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "criteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "criteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "criteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "criteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "criteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "criteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "criteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-data-company-customer-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/{sku}/children": {
            "get": {
                "tags": [
                    "configurableProductLinkManagementV1"
                ],
                "description": "Get all children for Configurable product",
                "operationId": "GetV1ConfigurableproductsSkuChildren",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/{sku}/children/{childSku}": {
            "delete": {
                "tags": [
                    "configurableProductLinkManagementV1"
                ],
                "description": "Remove configurable product option",
                "operationId": "DeleteV1ConfigurableproductsSkuChildrenChildSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "childSku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/{sku}/child": {
            "post": {
                "tags": [
                    "configurableProductLinkManagementV1"
                ],
                "description": "",
                "operationId": "PostV1ConfigurableproductsSkuChild",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ConfigurableproductsSkuChildBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "childSku"
                            ],
                            "properties": {
                                "childSku": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/variation": {
            "put": {
                "tags": [
                    "configurableProductConfigurableProductManagementV1"
                ],
                "description": "Generate variation based on same product",
                "operationId": "PutV1ConfigurableproductsVariation",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1ConfigurableproductsVariationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "product",
                                "options"
                            ],
                            "properties": {
                                "product": {
                                    "$ref": "#/definitions/catalog-data-product-interface"
                                },
                                "options": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/configurable-product-data-option-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/{sku}/options/{id}": {
            "get": {
                "tags": [
                    "configurableProductOptionRepositoryV1"
                ],
                "description": "Get option for configurable product",
                "operationId": "GetV1ConfigurableproductsSkuOptionsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/configurable-product-data-option-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "configurableProductOptionRepositoryV1"
                ],
                "description": "Save option",
                "operationId": "PutV1ConfigurableproductsSkuOptionsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ConfigurableproductsSkuOptionsIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "option"
                            ],
                            "properties": {
                                "option": {
                                    "$ref": "#/definitions/configurable-product-data-option-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "configurableProductOptionRepositoryV1"
                ],
                "description": "Remove option from configurable product",
                "operationId": "DeleteV1ConfigurableproductsSkuOptionsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/{sku}/options/all": {
            "get": {
                "tags": [
                    "configurableProductOptionRepositoryV1"
                ],
                "description": "Get all options for configurable product",
                "operationId": "GetV1ConfigurableproductsSkuOptionsAll",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/configurable-product-data-option-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/{sku}/options": {
            "post": {
                "tags": [
                    "configurableProductOptionRepositoryV1"
                ],
                "description": "Save option",
                "operationId": "PostV1ConfigurableproductsSkuOptions",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ConfigurableproductsSkuOptionsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "option"
                            ],
                            "properties": {
                                "option": {
                                    "$ref": "#/definitions/configurable-product-data-option-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/downloadable-links": {
            "get": {
                "tags": [
                    "downloadableLinkRepositoryV1"
                ],
                "description": "List of links with associated samples",
                "operationId": "GetV1ProductsSkuDownloadablelinks",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/downloadable-data-link-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "downloadableLinkRepositoryV1"
                ],
                "description": "Update downloadable link of the given product (link type and its resources cannot be changed)",
                "operationId": "PostV1ProductsSkuDownloadablelinks",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ProductsSkuDownloadablelinksBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "link"
                            ],
                            "properties": {
                                "link": {
                                    "$ref": "#/definitions/downloadable-data-link-interface"
                                },
                                "isGlobalScopeContent": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/downloadable-links/{id}": {
            "put": {
                "tags": [
                    "downloadableLinkRepositoryV1"
                ],
                "description": "Update downloadable link of the given product (link type and its resources cannot be changed)",
                "operationId": "PutV1ProductsSkuDownloadablelinksId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsSkuDownloadablelinksIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "link"
                            ],
                            "properties": {
                                "link": {
                                    "$ref": "#/definitions/downloadable-data-link-interface"
                                },
                                "isGlobalScopeContent": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/downloadable-links/{id}": {
            "delete": {
                "tags": [
                    "downloadableLinkRepositoryV1"
                ],
                "description": "Delete downloadable link",
                "operationId": "DeleteV1ProductsDownloadablelinksId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/downloadable-links/samples": {
            "get": {
                "tags": [
                    "downloadableSampleRepositoryV1"
                ],
                "description": "List of samples for downloadable product",
                "operationId": "GetV1ProductsSkuDownloadablelinksSamples",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/downloadable-data-sample-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "downloadableSampleRepositoryV1"
                ],
                "description": "Update downloadable sample of the given product",
                "operationId": "PostV1ProductsSkuDownloadablelinksSamples",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ProductsSkuDownloadablelinksSamplesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sample"
                            ],
                            "properties": {
                                "sample": {
                                    "$ref": "#/definitions/downloadable-data-sample-interface"
                                },
                                "isGlobalScopeContent": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/downloadable-links/samples/{id}": {
            "put": {
                "tags": [
                    "downloadableSampleRepositoryV1"
                ],
                "description": "Update downloadable sample of the given product",
                "operationId": "PutV1ProductsSkuDownloadablelinksSamplesId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ProductsSkuDownloadablelinksSamplesIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sample"
                            ],
                            "properties": {
                                "sample": {
                                    "$ref": "#/definitions/downloadable-data-sample-interface"
                                },
                                "isGlobalScopeContent": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/downloadable-links/samples/{id}": {
            "delete": {
                "tags": [
                    "downloadableSampleRepositoryV1"
                ],
                "description": "Delete downloadable sample",
                "operationId": "DeleteV1ProductsDownloadablelinksSamplesId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxRates": {
            "post": {
                "tags": [
                    "taxTaxRateRepositoryV1"
                ],
                "description": "Create or update tax rate",
                "operationId": "PostV1TaxRates",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1TaxRatesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "taxRate"
                            ],
                            "properties": {
                                "taxRate": {
                                    "$ref": "#/definitions/tax-data-tax-rate-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-rate-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "taxTaxRateRepositoryV1"
                ],
                "description": "Create or update tax rate",
                "operationId": "PutV1TaxRates",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1TaxRatesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "taxRate"
                            ],
                            "properties": {
                                "taxRate": {
                                    "$ref": "#/definitions/tax-data-tax-rate-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-rate-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxRates/{rateId}": {
            "get": {
                "tags": [
                    "taxTaxRateRepositoryV1"
                ],
                "description": "Get tax rate",
                "operationId": "GetV1TaxRatesRateId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "rateId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-rate-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "taxTaxRateRepositoryV1"
                ],
                "description": "Delete tax rate",
                "operationId": "DeleteV1TaxRatesRateId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "rateId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxRates/search": {
            "get": {
                "tags": [
                    "taxTaxRateRepositoryV1"
                ],
                "description": "Search TaxRates This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TaxRateRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1TaxRatesSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-rate-search-results-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxRules": {
            "post": {
                "tags": [
                    "taxTaxRuleRepositoryV1"
                ],
                "description": "Save TaxRule",
                "operationId": "PostV1TaxRules",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1TaxRulesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "rule"
                            ],
                            "properties": {
                                "rule": {
                                    "$ref": "#/definitions/tax-data-tax-rule-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-rule-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "taxTaxRuleRepositoryV1"
                ],
                "description": "Save TaxRule",
                "operationId": "PutV1TaxRules",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1TaxRulesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "rule"
                            ],
                            "properties": {
                                "rule": {
                                    "$ref": "#/definitions/tax-data-tax-rule-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-rule-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxRules/{ruleId}": {
            "delete": {
                "tags": [
                    "taxTaxRuleRepositoryV1"
                ],
                "description": "Delete TaxRule",
                "operationId": "DeleteV1TaxRulesRuleId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "ruleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "taxTaxRuleRepositoryV1"
                ],
                "description": "Get TaxRule",
                "operationId": "GetV1TaxRulesRuleId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "ruleId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-rule-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxRules/search": {
            "get": {
                "tags": [
                    "taxTaxRuleRepositoryV1"
                ],
                "description": "Search TaxRules This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TaxRuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1TaxRulesSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-rule-search-results-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxClasses": {
            "post": {
                "tags": [
                    "taxTaxClassRepositoryV1"
                ],
                "description": "Create a Tax Class",
                "operationId": "PostV1TaxClasses",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1TaxClassesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "taxClass"
                            ],
                            "properties": {
                                "taxClass": {
                                    "$ref": "#/definitions/tax-data-tax-class-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "id for the newly created Tax class"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxClasses/{taxClassId}": {
            "get": {
                "tags": [
                    "taxTaxClassRepositoryV1"
                ],
                "description": "Get a tax class with the given tax class id.",
                "operationId": "GetV1TaxClassesTaxClassId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "taxClassId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-class-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "taxTaxClassRepositoryV1"
                ],
                "description": "Delete a tax class with the given tax class id.",
                "operationId": "DeleteV1TaxClassesTaxClassId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "taxClassId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "True if the tax class was deleted, false otherwise"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxClasses/{classId}": {
            "put": {
                "tags": [
                    "taxTaxClassRepositoryV1"
                ],
                "description": "Create a Tax Class",
                "operationId": "PutV1TaxClassesClassId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "classId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1TaxClassesClassIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "taxClass"
                            ],
                            "properties": {
                                "taxClass": {
                                    "$ref": "#/definitions/tax-data-tax-class-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "id for the newly created Tax class"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/taxClasses/search": {
            "get": {
                "tags": [
                    "taxTaxClassRepositoryV1"
                ],
                "description": "Retrieve tax classes which match a specific criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TaxClassRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "GetV1TaxClassesSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/tax-data-tax-class-search-results-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/licence": {
            "get": {
                "tags": [
                    "checkoutAgreementsCheckoutAgreementsRepositoryV1"
                ],
                "description": "Lists active checkout agreements.",
                "operationId": "GetV1CartsLicence",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/checkout-agreements-data-agreement-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/licence/list": {
            "get": {
                "tags": [
                    "checkoutAgreementsCheckoutAgreementsListV1"
                ],
                "description": "List of checkout agreements.",
                "operationId": "GetV1CartsLicenceList",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/checkout-agreements-data-agreement-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/draft": {
            "post": {
                "tags": [
                    "negotiableQuoteNegotiableQuoteDraftManagementV1"
                ],
                "description": "Create a new empty B2B quote with NegotiableQuoteInterface::STATUS_DRAFT_BY_ADMIN status.",
                "operationId": "PostV1NegotiableQuoteDraft",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteDraftBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "customerId"
                            ],
                            "properties": {
                                "customerId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Quote Id"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/request": {
            "post": {
                "tags": [
                    "negotiableQuoteNegotiableQuoteManagementV1"
                ],
                "description": "Create a B2B quote based on a regular Magento quote. If the B2B quote requires a shipping address (for negotiation or tax calculations), add it to the regular quote before you create a B2B quote.",
                "operationId": "PostV1NegotiableQuoteRequest",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteRequestBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteId",
                                "quoteName"
                            ],
                            "properties": {
                                "quoteId": {
                                    "type": "integer"
                                },
                                "quoteName": {
                                    "type": "string"
                                },
                                "comment": {
                                    "type": "string"
                                },
                                "files": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/negotiable-quote-data-attachment-content-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/submitToCustomer": {
            "post": {
                "tags": [
                    "negotiableQuoteNegotiableQuoteManagementV1"
                ],
                "description": "Submit the B2B quote to the customer. The quote status for the customer will be changed to 'Updated', and the customer can work with the quote.",
                "operationId": "PostV1NegotiableQuoteSubmitToCustomer",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteSubmitToCustomerBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteId"
                            ],
                            "properties": {
                                "quoteId": {
                                    "type": "integer"
                                },
                                "comment": {
                                    "type": "string"
                                },
                                "files": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/negotiable-quote-data-attachment-content-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/decline": {
            "post": {
                "tags": [
                    "negotiableQuoteNegotiableQuoteManagementV1"
                ],
                "description": "Decline the B2B quote. All custom pricing will be removed from this quote. The buyer will be able to place an order using their standard catalog prices and discounts.",
                "operationId": "PostV1NegotiableQuoteDecline",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteDeclineBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteId",
                                "reason"
                            ],
                            "properties": {
                                "quoteId": {
                                    "type": "integer"
                                },
                                "reason": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/pricesUpdated": {
            "post": {
                "tags": [
                    "negotiableQuoteNegotiableQuotePriceManagementV1"
                ],
                "description": "Refreshes item prices, taxes, discounts, cart rules in the negotiable quote as per the latest changes in the catalog / shared catalog and in the price rules. Depending on the negotiable quote state and totals, all or just some of quote numbers will be recalculated. 'Update Prices' parameter forces refresh on any quote that is not locked for admin user, including the quotes with a negotiated price. The request can be applied to one or more quotes at the same time.",
                "operationId": "PostV1NegotiableQuotePricesUpdated",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuotePricesUpdatedBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteIds"
                            ],
                            "properties": {
                                "quoteIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/attachmentContent": {
            "get": {
                "tags": [
                    "negotiableQuoteAttachmentContentManagementV1"
                ],
                "description": "Returns content for one or more files attached on the quote comment.",
                "operationId": "GetV1NegotiableQuoteAttachmentContent",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attachmentIds",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/negotiable-quote-data-attachment-content-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/{quoteId}/comments": {
            "get": {
                "tags": [
                    "negotiableQuoteCommentLocatorV1"
                ],
                "description": "Returns comments for a specified negotiable quote.",
                "operationId": "GetV1NegotiableQuoteQuoteIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "quoteId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "Negotiable Quote ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "An array of quote comments.",
                            "items": {
                                "$ref": "#/definitions/negotiable-quote-data-comment-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/{quoteId}/shippingMethod": {
            "put": {
                "tags": [
                    "negotiableQuoteNegotiableQuoteShippingManagementV1"
                ],
                "description": "Updates the shipping method on a negotiable quote.",
                "operationId": "PutV1NegotiableQuoteQuoteIdShippingMethod",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "quoteId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "Negotiable Quote id"
                    },
                    {
                        "name": "PutV1NegotiableQuoteQuoteIdShippingMethodBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "shippingMethod"
                            ],
                            "properties": {
                                "shippingMethod": {
                                    "type": "string",
                                    "description": "The shipping method code."
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/{quoteId}": {
            "put": {
                "tags": [
                    "negotiableQuoteNegotiableCartRepositoryV1"
                ],
                "description": "Save quote",
                "operationId": "PutV1NegotiableQuoteQuoteId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "quoteId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1NegotiableQuoteQuoteIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quote"
                            ],
                            "properties": {
                                "quote": {
                                    "$ref": "#/definitions/quote-data-cart-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-cart-item-note/{noteId}": {
            "get": {
                "tags": [
                    "negotiableQuoteItemNoteRepositoryV1"
                ],
                "description": "Get item note by ID",
                "operationId": "GetV1NegotiablecartitemnoteNoteId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "noteId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/negotiable-quote-data-item-note-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "negotiableQuoteItemNoteRepositoryV1"
                ],
                "description": "Delete item note by ID.",
                "operationId": "DeleteV1NegotiablecartitemnoteNoteId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "noteId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-cart-item-note": {
            "post": {
                "tags": [
                    "negotiableQuoteItemNoteRepositoryV1"
                ],
                "description": "Set the note for an item in negotiable quote.",
                "operationId": "PostV1Negotiablecartitemnote",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiablecartitemnoteBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "itemNote"
                            ],
                            "properties": {
                                "itemNote": {
                                    "$ref": "#/definitions/negotiable-quote-data-item-note-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiable-cart-item-note/search": {
            "get": {
                "tags": [
                    "negotiableQuoteItemNoteRepositoryV1"
                ],
                "description": "Get list of item notes",
                "operationId": "GetV1NegotiablecartitemnoteSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/negotiable-quote-data-item-note-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/": {
            "get": {
                "tags": [
                    "companyCreditCreditLimitRepositoryV1"
                ],
                "description": "Returns the list of credits for specified companies.",
                "operationId": "GetV1CompanyCredits",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-credit-limit-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/{creditId}": {
            "get": {
                "tags": [
                    "companyCreditCreditLimitRepositoryV1"
                ],
                "description": "Returns data on the credit limit for a specified credit limit ID.",
                "operationId": "GetV1CompanyCreditsCreditId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "creditId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "reload",
                        "in": "query",
                        "type": "boolean",
                        "description": "[optional]",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-credit-limit-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/{id}": {
            "put": {
                "tags": [
                    "companyCreditCreditLimitRepositoryV1"
                ],
                "description": "Update the following company credit attributes: credit currency, credit limit and setting to exceed credit.",
                "operationId": "PutV1CompanyCreditsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1CompanyCreditsIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "creditLimit"
                            ],
                            "properties": {
                                "creditLimit": {
                                    "$ref": "#/definitions/company-credit-data-credit-limit-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-credit-limit-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/company/{companyId}": {
            "get": {
                "tags": [
                    "companyCreditCreditLimitManagementV1"
                ],
                "description": "Returns data on the credit limit for a specified company.",
                "operationId": "GetV1CompanyCreditsCompanyCompanyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-credit-limit-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/{creditId}/increaseBalance": {
            "post": {
                "tags": [
                    "companyCreditCreditBalanceManagementV1"
                ],
                "description": "Increases the company credit with an Allocate, Update, Refund, Revert, or Reimburse transaction. This transaction decreases company's outstanding balance and increases company's available credit.",
                "operationId": "PostV1CompanyCreditsCreditIdIncreaseBalance",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "creditId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1CompanyCreditsCreditIdIncreaseBalanceBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "value",
                                "currency",
                                "operationType"
                            ],
                            "properties": {
                                "value": {
                                    "type": "number"
                                },
                                "currency": {
                                    "type": "string"
                                },
                                "operationType": {
                                    "type": "integer"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "[optional]"
                                },
                                "options": {
                                    "$ref": "#/definitions/company-credit-data-credit-balance-options-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/{creditId}/decreaseBalance": {
            "post": {
                "tags": [
                    "companyCreditCreditBalanceManagementV1"
                ],
                "description": "Decreases the company credit with an Update, Reimburse, or Purchase transaction. This transaction increases company's outstanding balance and decreases company's available credit.",
                "operationId": "PostV1CompanyCreditsCreditIdDecreaseBalance",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "creditId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1CompanyCreditsCreditIdDecreaseBalanceBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "value",
                                "currency",
                                "operationType"
                            ],
                            "properties": {
                                "value": {
                                    "type": "number"
                                },
                                "currency": {
                                    "type": "string"
                                },
                                "operationType": {
                                    "type": "integer"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "[optional]"
                                },
                                "options": {
                                    "$ref": "#/definitions/company-credit-data-credit-balance-options-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/history": {
            "get": {
                "tags": [
                    "companyCreditCreditHistoryManagementV1"
                ],
                "description": "Returns the credit history for one or more companies.",
                "operationId": "GetV1CompanyCreditsHistory",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-credit-data-history-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/companyCredits/history/{historyId}": {
            "put": {
                "tags": [
                    "companyCreditCreditHistoryManagementV1"
                ],
                "description": "Update the PO Number and/or comment for a Reimburse transaction.",
                "operationId": "PutV1CompanyCreditsHistoryHistoryId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "historyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PutV1CompanyCreditsHistoryHistoryIdBody",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "purchaseOrder": {
                                    "type": "string",
                                    "description": "[optional]"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "[optional]"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate/{templateId}": {
            "get": {
                "tags": [
                    "negotiableQuoteTemplateTemplateRepositoryV1"
                ],
                "description": "Return the negotiable quote template for a specified quote ID.",
                "operationId": "GetV1NegotiableQuoteTemplateTemplateId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "template id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/negotiable-quote-template-data-template-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "negotiableQuoteTemplateTemplateActionsDeleteV1"
                ],
                "description": "Delete a quote template.",
                "operationId": "DeleteV1NegotiableQuoteTemplateTemplateId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate": {
            "get": {
                "tags": [
                    "negotiableQuoteTemplateTemplateRepositoryV1"
                ],
                "description": "Get list of quote templates",
                "operationId": "GetV1NegotiableQuoteTemplate",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/framework-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "negotiableQuoteTemplateTemplateActionsUpdateV1"
                ],
                "description": "Edit a quote template.",
                "operationId": "PutV1NegotiableQuoteTemplate",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1NegotiableQuoteTemplateBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "template"
                            ],
                            "properties": {
                                "template": {
                                    "$ref": "#/definitions/negotiable-quote-template-data-template-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate/draft": {
            "post": {
                "tags": [
                    "negotiableQuoteTemplateTemplateDraftManagementV1"
                ],
                "description": "Create a new empty B2B quote template with NegotiableQuoteInterface::STATUS_DRAFT_BY_ADMIN status.",
                "operationId": "PostV1NegotiableQuoteTemplateDraft",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteTemplateDraftBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "customerId"
                            ],
                            "properties": {
                                "customerId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/negotiable-quote-template-data-template-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate/request": {
            "post": {
                "tags": [
                    "negotiableQuoteTemplateTemplateActionsCreateV1"
                ],
                "description": "Create a template for a quote.",
                "operationId": "PostV1NegotiableQuoteTemplateRequest",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteTemplateRequestBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteId"
                            ],
                            "properties": {
                                "quoteId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/negotiable-quote-template-data-template-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate/open": {
            "post": {
                "tags": [
                    "negotiableQuoteTemplateTemplateActionsOpenV1"
                ],
                "description": "Open template",
                "operationId": "PostV1NegotiableQuoteTemplateOpen",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteTemplateOpenBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "templateId"
                            ],
                            "properties": {
                                "templateId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate/submitToCustomer": {
            "post": {
                "tags": [
                    "negotiableQuoteTemplateTemplateActionsSellerSendV1"
                ],
                "description": "Seller send action",
                "operationId": "PostV1NegotiableQuoteTemplateSubmitToCustomer",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteTemplateSubmitToCustomerBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "templateId"
                            ],
                            "properties": {
                                "templateId": {
                                    "type": "integer"
                                },
                                "commentText": {
                                    "type": "string"
                                },
                                "files": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/negotiable-quote-data-attachment-content-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate/decline": {
            "post": {
                "tags": [
                    "negotiableQuoteTemplateTemplateActionsDeclineV1"
                ],
                "description": "Decline a quote template.",
                "operationId": "PostV1NegotiableQuoteTemplateDecline",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteTemplateDeclineBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "templateId",
                                "reason"
                            ],
                            "properties": {
                                "templateId": {
                                    "type": "integer"
                                },
                                "reason": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate/cancel": {
            "post": {
                "tags": [
                    "negotiableQuoteTemplateTemplateActionsCancelV1"
                ],
                "description": "Cancel a quote template.",
                "operationId": "PostV1NegotiableQuoteTemplateCancel",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteTemplateCancelBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "templateId"
                            ],
                            "properties": {
                                "templateId": {
                                    "type": "integer"
                                },
                                "comment": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate/referenceDocumentLink/{linkId}": {
            "get": {
                "tags": [
                    "negotiableQuoteTemplateTemplateReferenceDocumentLinkRepositoryV1"
                ],
                "description": "Get reference document link by id",
                "operationId": "GetV1NegotiableQuoteTemplateReferenceDocumentLinkLinkId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "linkId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/negotiable-quote-template-data-reference-document-link-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "negotiableQuoteTemplateTemplateReferenceDocumentLinkRepositoryV1"
                ],
                "description": "Delete a quote template reference document link",
                "operationId": "DeleteV1NegotiableQuoteTemplateReferenceDocumentLinkLinkId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "linkId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuoteTemplate/referenceDocumentLink": {
            "get": {
                "tags": [
                    "negotiableQuoteTemplateTemplateReferenceDocumentLinkRepositoryV1"
                ],
                "description": "Get list of reference document links",
                "operationId": "GetV1NegotiableQuoteTemplateReferenceDocumentLink",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/framework-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "negotiableQuoteTemplateTemplateReferenceDocumentLinkRepositoryV1"
                ],
                "description": "Save reference document link",
                "operationId": "PutV1NegotiableQuoteTemplateReferenceDocumentLink",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1NegotiableQuoteTemplateReferenceDocumentLinkBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "referenceDocumentLink"
                            ],
                            "properties": {
                                "referenceDocumentLink": {
                                    "$ref": "#/definitions/negotiable-quote-template-data-reference-document-link-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/relations": {
            "get": {
                "tags": [
                    "companyRelationRelationManagerV1"
                ],
                "description": "Get existing company relation(s)",
                "operationId": "GetV1CompanyRelations",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/company-relation-data-relation-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/{parentId}/relations/{companyId}": {
            "delete": {
                "tags": [
                    "companyRelationRelationManagerV1"
                ],
                "description": "Delete relation of the company to the parent by respective ids.",
                "operationId": "DeleteV1CompanyParentIdRelationsCompanyId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "companyId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/{parentId}/relations": {
            "post": {
                "tags": [
                    "companyRelationRelationManagerV1"
                ],
                "description": "Create relation(s) between companies.",
                "operationId": "PostV1CompanyParentIdRelations",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1CompanyParentIdRelationsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "relations"
                            ],
                            "properties": {
                                "relations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/company-relation-data-relation-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}": {
            "get": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Return the following properties for the selected shared catalog: ID, Store Group ID, Name, Type, Description, Customer Group, Tax Class.",
                "operationId": "GetV1SharedCatalogSharedCatalogId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/shared-catalog-data-shared-catalog-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Delete a shared catalog by ID.",
                "operationId": "DeleteV1SharedCatalogSharedCatalogId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog": {
            "post": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Create or update Shared Catalog service.",
                "operationId": "PostV1SharedCatalog",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1SharedCatalogBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sharedCatalog"
                            ],
                            "properties": {
                                "sharedCatalog": {
                                    "$ref": "#/definitions/shared-catalog-data-shared-catalog-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}": {
            "put": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Create or update Shared Catalog service.",
                "operationId": "PutV1SharedCatalogId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1SharedCatalogIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sharedCatalog"
                            ],
                            "properties": {
                                "sharedCatalog": {
                                    "$ref": "#/definitions/shared-catalog-data-shared-catalog-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/": {
            "get": {
                "tags": [
                    "sharedCatalogSharedCatalogRepositoryV1"
                ],
                "description": "Return the list of shared catalogs and basic properties for each catalog.",
                "operationId": "GetV1SharedCatalog",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/shared-catalog-data-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}/companies": {
            "get": {
                "tags": [
                    "sharedCatalogCompanyManagementV1"
                ],
                "description": "Return the list of company IDs for the companies assigned to the selected catalog.",
                "operationId": "GetV1SharedCatalogSharedCatalogIdCompanies",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}/assignCompanies": {
            "post": {
                "tags": [
                    "sharedCatalogCompanyManagementV1"
                ],
                "description": "Assign companies to a shared catalog.",
                "operationId": "PostV1SharedCatalogSharedCatalogIdAssignCompanies",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1SharedCatalogSharedCatalogIdAssignCompaniesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "companies"
                            ],
                            "properties": {
                                "companies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/company-data-company-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}/unassignCompanies": {
            "post": {
                "tags": [
                    "sharedCatalogCompanyManagementV1"
                ],
                "description": "Unassign companies from a shared catalog.",
                "operationId": "PostV1SharedCatalogSharedCatalogIdUnassignCompanies",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1SharedCatalogSharedCatalogIdUnassignCompaniesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "companies"
                            ],
                            "properties": {
                                "companies": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/company-data-company-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/products": {
            "get": {
                "tags": [
                    "sharedCatalogProductManagementV1"
                ],
                "description": "Return the list of product SKUs in the selected shared catalog.",
                "operationId": "GetV1SharedCatalogIdProducts",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/assignProducts": {
            "post": {
                "tags": [
                    "sharedCatalogProductManagementV1"
                ],
                "description": "Add products into the shared catalog.",
                "operationId": "PostV1SharedCatalogIdAssignProducts",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1SharedCatalogIdAssignProductsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "products"
                            ],
                            "properties": {
                                "products": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-product-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/unassignProducts": {
            "post": {
                "tags": [
                    "sharedCatalogProductManagementV1"
                ],
                "description": "Remove the specified products from the shared catalog.",
                "operationId": "PostV1SharedCatalogIdUnassignProducts",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1SharedCatalogIdUnassignProductsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "products"
                            ],
                            "properties": {
                                "products": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-product-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/categories": {
            "get": {
                "tags": [
                    "sharedCatalogCategoryManagementV1"
                ],
                "description": "Return the list of categories in the selected shared catalog.",
                "operationId": "GetV1SharedCatalogIdCategories",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/assignCategories": {
            "post": {
                "tags": [
                    "sharedCatalogCategoryManagementV1"
                ],
                "description": "Add categories into the shared catalog.",
                "operationId": "PostV1SharedCatalogIdAssignCategories",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1SharedCatalogIdAssignCategoriesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "categories"
                            ],
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-category-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{id}/unassignCategories": {
            "post": {
                "tags": [
                    "sharedCatalogCategoryManagementV1"
                ],
                "description": "Remove the specified categories from the shared catalog.",
                "operationId": "PostV1SharedCatalogIdUnassignCategories",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1SharedCatalogIdUnassignCategoriesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "categories"
                            ],
                            "properties": {
                                "categories": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-category-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}/assignTierPrices": {
            "post": {
                "tags": [
                    "sharedCatalogAssignTierPriceV1"
                ],
                "description": "Assign custom prices",
                "operationId": "PostV1SharedCatalogSharedCatalogIdAssignTierPrices",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1SharedCatalogSharedCatalogIdAssignTierPricesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "prices"
                            ],
                            "properties": {
                                "prices": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/catalog-data-tier-price-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/sharedCatalog/{sharedCatalogId}/resetTierPrices": {
            "post": {
                "tags": [
                    "sharedCatalogResetTierPriceV1"
                ],
                "description": "Reset custom prices",
                "operationId": "PostV1SharedCatalogSharedCatalogIdResetTierPrices",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sharedCatalogId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1SharedCatalogSharedCatalogIdResetTierPricesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "skus"
                            ],
                            "properties": {
                                "skus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/setCustomAttributes": {
            "post": {
                "tags": [
                    "customAttributeSerializableB2bNegotiableQuoteAttributesManagementV1"
                ],
                "description": "Update quote status to close.",
                "operationId": "PostV1NegotiableQuoteSetCustomAttributes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1NegotiableQuoteSetCustomAttributesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "quoteId"
                            ],
                            "properties": {
                                "quoteId": {
                                    "type": "integer"
                                },
                                "customAttributes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/framework-attribute-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/company/setCustomAttributes": {
            "post": {
                "tags": [
                    "customAttributeSerializableB2bCompanyAttributesManagementV1"
                ],
                "description": "Updates the company entity with the custom attributes",
                "operationId": "PostV1CompanySetCustomAttributes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1CompanySetCustomAttributesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "companyId"
                            ],
                            "properties": {
                                "companyId": {
                                    "type": "integer"
                                },
                                "customAttributes": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/framework-attribute-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/external-media/image": {
            "post": {
                "tags": [
                    "adobeAssetsIntegrationExternalMediaV1"
                ],
                "description": "POST to import asset image mappings",
                "operationId": "PostV1ProductsExternalmediaImage",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsExternalmediaImageBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "assetId",
                                "sku"
                            ],
                            "properties": {
                                "assetId": {
                                    "type": "string"
                                },
                                "sku": {
                                    "type": "string"
                                },
                                "roles": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "position": {
                                    "type": "integer"
                                },
                                "url": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/external-media/video": {
            "post": {
                "tags": [
                    "adobeAssetsIntegrationExternalMediaV1"
                ],
                "description": "POST to import asset video mappings",
                "operationId": "PostV1ProductsExternalmediaVideo",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsExternalmediaVideoBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "assetId",
                                "sku"
                            ],
                            "properties": {
                                "assetId": {
                                    "type": "string"
                                },
                                "sku": {
                                    "type": "string"
                                },
                                "roles": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "position": {
                                    "type": "integer"
                                },
                                "url": {
                                    "type": "string"
                                },
                                "videoThumbnailUrl": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/external-media/remove-by-asset-id-and-sku": {
            "post": {
                "tags": [
                    "adobeAssetsIntegrationExternalMediaV1"
                ],
                "description": "POST to remove asset mappings",
                "operationId": "PostV1ProductsExternalmediaRemovebyassetidandsku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsExternalmediaRemovebyassetidandskuBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "assetId",
                                "sku"
                            ],
                            "properties": {
                                "assetId": {
                                    "type": "string"
                                },
                                "sku": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/external-media/remove-by-asset-id": {
            "post": {
                "tags": [
                    "adobeAssetsIntegrationExternalMediaV1"
                ],
                "description": "POST to remove all mappings of an asset",
                "operationId": "PostV1ProductsExternalmediaRemovebyassetid",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsExternalmediaRemovebyassetidBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "assetId"
                            ],
                            "properties": {
                                "assetId": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/external-media/remove-by-sku": {
            "post": {
                "tags": [
                    "adobeAssetsIntegrationExternalMediaV1"
                ],
                "description": "POST to remove all assets for a product",
                "operationId": "PostV1ProductsExternalmediaRemovebysku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ProductsExternalmediaRemovebyskuBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sku"
                            ],
                            "properties": {
                                "sku": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/external-media/get-sku/assetId/{assetId}": {
            "get": {
                "tags": [
                    "adobeAssetsIntegrationExternalMediaV1"
                ],
                "description": "GET list of SKUs mapped to an asset URL",
                "operationId": "GetV1ProductsExternalmediaGetskuAssetIdAssetId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/external-media/ping": {
            "get": {
                "tags": [
                    "adobeAssetsIntegrationExternalMediaV1"
                ],
                "description": "GET to check connection with commerce",
                "operationId": "GetV1ProductsExternalmediaPing",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/analytics/link": {
            "get": {
                "tags": [
                    "analyticsLinkProviderV1"
                ],
                "description": "",
                "operationId": "GetV1AnalyticsLink",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/analytics-data-link-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{quoteId}/giftCards": {
            "get": {
                "tags": [
                    "giftCardAccountGiftCardAccountManagementV1"
                ],
                "description": "Return GiftCard Account cards.",
                "operationId": "GetV1CartsQuoteIdGiftCards",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "quoteId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/gift-card-account-data-gift-card-account-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/giftCards": {
            "put": {
                "tags": [
                    "giftCardAccountGiftCardAccountManagementV1"
                ],
                "description": "Add gift card to the cart.",
                "operationId": "PutV1CartsCartIdGiftCards",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PutV1CartsCartIdGiftCardsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "giftCardAccountData"
                            ],
                            "properties": {
                                "giftCardAccountData": {
                                    "$ref": "#/definitions/gift-card-account-data-gift-card-account-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/giftCards/{giftCardCode}": {
            "delete": {
                "tags": [
                    "giftCardAccountGiftCardAccountManagementV1"
                ],
                "description": "Remove GiftCard Account entity",
                "operationId": "DeleteV1CartsCartIdGiftCardsGiftCardCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "giftCardCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/gift-message": {
            "get": {
                "tags": [
                    "giftMessageCartRepositoryV1"
                ],
                "description": "Return the gift message for a specified order.",
                "operationId": "GetV1CartsCartIdGiftmessage",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shopping cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/gift-message-data-message-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "giftMessageCartRepositoryV1"
                ],
                "description": "Set the gift message for an entire order.",
                "operationId": "PostV1CartsCartIdGiftmessage",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "PostV1CartsCartIdGiftmessageBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "giftMessage"
                            ],
                            "properties": {
                                "giftMessage": {
                                    "$ref": "#/definitions/gift-message-data-message-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/carts/{cartId}/gift-message/{itemId}": {
            "get": {
                "tags": [
                    "giftMessageItemRepositoryV1"
                ],
                "description": "Return the gift message for a specified item in a specified shopping cart.",
                "operationId": "GetV1CartsCartIdGiftmessageItemId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The shopping cart ID."
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The item ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/gift-message-data-message-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "giftMessageItemRepositoryV1"
                ],
                "description": "Set the gift message for a specified item in a specified shopping cart.",
                "operationId": "PostV1CartsCartIdGiftmessageItemId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The item ID."
                    },
                    {
                        "name": "PostV1CartsCartIdGiftmessageItemIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "giftMessage"
                            ],
                            "properties": {
                                "giftMessage": {
                                    "$ref": "#/definitions/gift-message-data-message-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/webhooks/subscribe": {
            "post": {
                "tags": [
                    "adobeCommerceWebhooksCoreSaasWebhookSubscriberV1"
                ],
                "description": "Subscribes to the webhook.",
                "operationId": "PostV1WebhooksSubscribe",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1WebhooksSubscribeBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "webhook"
                            ],
                            "properties": {
                                "webhook": {
                                    "$ref": "#/definitions/adobe-commerce-webhooks-data-webhook-data-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/webhooks/unsubscribe": {
            "post": {
                "tags": [
                    "adobeCommerceWebhooksCoreSaasWebhookSubscriberV1"
                ],
                "description": "Unsubscribes from the webhook.",
                "operationId": "PostV1WebhooksUnsubscribe",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1WebhooksUnsubscribeBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "webhook"
                            ],
                            "properties": {
                                "webhook": {
                                    "$ref": "#/definitions/adobe-commerce-webhooks-data-webhook-data-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/webhooks/supportedList": {
            "get": {
                "tags": [
                    "adobeCommerceWebhooksCoreSaasSupportedWebhookListV1"
                ],
                "description": "Return list of aliased allowed webhooks names.",
                "operationId": "GetV1WebhooksSupportedList",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adobe-commerce-webhooks-core-saas-data-supported-webhook-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/oope_payment_method/{code}": {
            "get": {
                "tags": [
                    "outOfProcessPaymentMethodsOutOfProcessPaymentMethodRepositoryV1"
                ],
                "description": "Retrieves an out of process payment method",
                "operationId": "GetV1Oope_payment_methodCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "to lookup"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/out-of-process-payment-methods-data-out-of-process-payment-method-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/oope_payment_method": {
            "get": {
                "tags": [
                    "outOfProcessPaymentMethodsOutOfProcessPaymentMethodRepositoryV1"
                ],
                "description": "Retrieves the list of out of process payment methods",
                "operationId": "GetV1Oope_payment_method",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/out-of-process-payment-methods-data-out-of-process-payment-method-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "outOfProcessPaymentMethodsOutOfProcessPaymentMethodRepositoryV1"
                ],
                "description": "Creates or updates an out of process payment method",
                "operationId": "PostV1Oope_payment_method",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1Oope_payment_methodBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "payment_method"
                            ],
                            "properties": {
                                "payment_method": {
                                    "$ref": "#/definitions/out-of-process-payment-methods-data-out-of-process-payment-method-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/out-of-process-payment-methods-data-out-of-process-payment-method-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/gift-wrappings/{id}": {
            "get": {
                "tags": [
                    "giftWrappingWrappingRepositoryV1"
                ],
                "description": "Return data object for specified wrapping ID and store.",
                "operationId": "GetV1GiftwrappingsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "storeId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/gift-wrapping-data-wrapping-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "giftWrappingWrappingRepositoryV1"
                ],
                "description": "Delete gift wrapping",
                "operationId": "DeleteV1GiftwrappingsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/gift-wrappings": {
            "post": {
                "tags": [
                    "giftWrappingWrappingRepositoryV1"
                ],
                "description": "Create/Update new gift wrapping with data object values",
                "operationId": "PostV1Giftwrappings",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1GiftwrappingsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/gift-wrapping-data-wrapping-interface"
                                },
                                "storeId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/gift-wrapping-data-wrapping-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "giftWrappingWrappingRepositoryV1"
                ],
                "description": "Return list of gift wrapping data objects based on search criteria",
                "operationId": "GetV1Giftwrappings",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/gift-wrapping-data-wrapping-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/gift-wrappings/{wrappingId}": {
            "put": {
                "tags": [
                    "giftWrappingWrappingRepositoryV1"
                ],
                "description": "Create/Update new gift wrapping with data object values",
                "operationId": "PutV1GiftwrappingsWrappingId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "wrappingId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1GiftwrappingsWrappingIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/gift-wrapping-data-wrapping-interface"
                                },
                                "storeId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/gift-wrapping-data-wrapping-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/import/json": {
            "post": {
                "tags": [
                    "importJsonApiStartImportV1"
                ],
                "description": "Starts import operation.",
                "operationId": "PostV1ImportJson",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ImportJsonBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "source"
                            ],
                            "properties": {
                                "source": {
                                    "$ref": "#/definitions/import-json-api-data-source-data-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/sources": {
            "get": {
                "tags": [
                    "inventoryApiSourceRepositoryV1"
                ],
                "description": "Find Sources by SearchCriteria SearchCriteria is not required because load all stocks is useful case",
                "operationId": "GetV1InventorySources",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-api-data-source-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventoryApiSourceRepositoryV1"
                ],
                "description": "Save Source data",
                "operationId": "PostV1InventorySources",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventorySourcesBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "source"
                            ],
                            "properties": {
                                "source": {
                                    "$ref": "#/definitions/inventory-api-data-source-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/sources/{sourceCode}": {
            "get": {
                "tags": [
                    "inventoryApiSourceRepositoryV1"
                ],
                "description": "Get Source data by given code. If you want to create plugin on get method, also you need to create separate Plugin on getList method, because entity loading way is different for these methods",
                "operationId": "GetV1InventorySourcesSourceCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sourceCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-api-data-source-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inventoryApiSourceRepositoryV1"
                ],
                "description": "Save Source data",
                "operationId": "PutV1InventorySourcesSourceCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sourceCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1InventorySourcesSourceCodeBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "source"
                            ],
                            "properties": {
                                "source": {
                                    "$ref": "#/definitions/inventory-api-data-source-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}": {
            "get": {
                "tags": [
                    "inventoryApiGetSourcesAssignedToStockOrderedByPriorityV1"
                ],
                "description": "Get Sources assigned to Stock ordered by priority If Stock with given id doesn't exist then return an empty array",
                "operationId": "GetV1InventoryGetsourcesassignedtostockorderedbypriorityStockId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "stockId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inventory-api-data-source-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/stocks": {
            "get": {
                "tags": [
                    "inventoryApiStockRepositoryV1"
                ],
                "description": "Find Stocks by given SearchCriteria SearchCriteria is not required because load all stocks is useful case",
                "operationId": "GetV1InventoryStocks",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-api-data-stock-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventoryApiStockRepositoryV1"
                ],
                "description": "Save Stock data",
                "operationId": "PostV1InventoryStocks",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventoryStocksBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "stock"
                            ],
                            "properties": {
                                "stock": {
                                    "$ref": "#/definitions/inventory-api-data-stock-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/stocks/{stockId}": {
            "get": {
                "tags": [
                    "inventoryApiStockRepositoryV1"
                ],
                "description": "Get Stock data by given stockId. If you want to create plugin on get method, also you need to create separate Plugin on getList method, because entity loading way is different for these methods",
                "operationId": "GetV1InventoryStocksStockId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "stockId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-api-data-stock-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "inventoryApiStockRepositoryV1"
                ],
                "description": "Delete the Stock data by stockId. If stock is not found do nothing",
                "operationId": "DeleteV1InventoryStocksStockId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "stockId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inventoryApiStockRepositoryV1"
                ],
                "description": "Save Stock data",
                "operationId": "PutV1InventoryStocksStockId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "stockId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1InventoryStocksStockIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "stock"
                            ],
                            "properties": {
                                "stock": {
                                    "$ref": "#/definitions/inventory-api-data-stock-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/stock-source-links": {
            "get": {
                "tags": [
                    "inventoryApiGetStockSourceLinksV1"
                ],
                "description": "Find StockSourceLink list by given SearchCriteria",
                "operationId": "GetV1InventoryStocksourcelinks",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-api-data-stock-source-link-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventoryApiStockSourceLinksSaveV1"
                ],
                "description": "Save StockSourceLink list data",
                "operationId": "PostV1InventoryStocksourcelinks",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventoryStocksourcelinksBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "links"
                            ],
                            "properties": {
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/inventory-api-data-stock-source-link-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/stock-source-links-delete": {
            "post": {
                "tags": [
                    "inventoryApiStockSourceLinksDeleteV1"
                ],
                "description": "Remove StockSourceLink list list",
                "operationId": "PostV1InventoryStocksourcelinksdelete",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventoryStocksourcelinksdeleteBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "links"
                            ],
                            "properties": {
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/inventory-api-data-stock-source-link-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/source-items": {
            "get": {
                "tags": [
                    "inventoryApiSourceItemRepositoryV1"
                ],
                "description": "Find SourceItems by SearchCriteria We need to have this method for direct work with SourceItems because this object contains additional data like as qty, status (for example can be searchable by additional field)",
                "operationId": "GetV1InventorySourceitems",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-api-data-source-item-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventoryApiSourceItemsSaveV1"
                ],
                "description": "Save Multiple Source item data",
                "operationId": "PostV1InventorySourceitems",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventorySourceitemsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sourceItems"
                            ],
                            "properties": {
                                "sourceItems": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/inventory-api-data-source-item-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/source-items-delete": {
            "post": {
                "tags": [
                    "inventoryApiSourceItemsDeleteV1"
                ],
                "description": "Delete Multiple Source item data",
                "operationId": "PostV1InventorySourceitemsdelete",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventorySourceitemsdeleteBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sourceItems"
                            ],
                            "properties": {
                                "sourceItems": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/inventory-api-data-source-item-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/bulk-product-source-assign": {
            "post": {
                "tags": [
                    "inventoryCatalogApiBulkSourceAssignV1"
                ],
                "description": "Run mass product to source assignment",
                "operationId": "PostV1InventoryBulkproductsourceassign",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventoryBulkproductsourceassignBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "skus",
                                "sourceCodes"
                            ],
                            "properties": {
                                "skus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "sourceCodes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/bulk-product-source-unassign": {
            "post": {
                "tags": [
                    "inventoryCatalogApiBulkSourceUnassignV1"
                ],
                "description": "Run mass product to source un-assignment",
                "operationId": "PostV1InventoryBulkproductsourceunassign",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventoryBulkproductsourceunassignBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "skus",
                                "sourceCodes"
                            ],
                            "properties": {
                                "skus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "sourceCodes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/bulk-product-source-transfer": {
            "post": {
                "tags": [
                    "inventoryCatalogApiBulkInventoryTransferV1"
                ],
                "description": "Run bulk inventory transfer",
                "operationId": "PostV1InventoryBulkproductsourcetransfer",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventoryBulkproductsourcetransferBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "skus",
                                "originSource",
                                "destinationSource",
                                "unassignFromOrigin"
                            ],
                            "properties": {
                                "skus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "originSource": {
                                    "type": "string"
                                },
                                "destinationSource": {
                                    "type": "string"
                                },
                                "unassignFromOrigin": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/bulk-partial-source-transfer": {
            "post": {
                "tags": [
                    "inventoryCatalogApiBulkPartialInventoryTransferV1"
                ],
                "description": "Run bulk partial inventory transfer for specified items.",
                "operationId": "PostV1InventoryBulkpartialsourcetransfer",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventoryBulkpartialsourcetransferBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "originSourceCode",
                                "destinationSourceCode",
                                "items"
                            ],
                            "properties": {
                                "originSourceCode": {
                                    "type": "string"
                                },
                                "destinationSourceCode": {
                                    "type": "string"
                                },
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/inventory-catalog-api-data-partial-inventory-transfer-item-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/get-distance-provider-code": {
            "get": {
                "tags": [
                    "inventoryDistanceBasedSourceSelectionApiGetDistanceProviderCodeV1"
                ],
                "description": "Get Default distance provider code",
                "operationId": "GetV1InventoryGetdistanceprovidercode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/get-distance": {
            "get": {
                "tags": [
                    "inventoryDistanceBasedSourceSelectionApiGetDistanceV1"
                ],
                "description": "Get distance between two points",
                "operationId": "GetV1InventoryGetdistance",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source[lat]",
                        "in": "query",
                        "type": "number",
                        "description": "Latitude"
                    },
                    {
                        "name": "source[lng]",
                        "in": "query",
                        "type": "number",
                        "description": "Longitude"
                    },
                    {
                        "name": "destination[lat]",
                        "in": "query",
                        "type": "number",
                        "description": "Latitude"
                    },
                    {
                        "name": "destination[lng]",
                        "in": "query",
                        "type": "number",
                        "description": "Longitude"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/get-latlng-from-address": {
            "get": {
                "tags": [
                    "inventoryDistanceBasedSourceSelectionApiGetLatLngFromAddressV1"
                ],
                "description": "Get latitude and longitude object from address",
                "operationId": "GetV1InventoryGetlatlngfromaddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "address[country]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping country"
                    },
                    {
                        "name": "address[postcode]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping postcode"
                    },
                    {
                        "name": "address[street]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping street address"
                    },
                    {
                        "name": "address[region]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping region"
                    },
                    {
                        "name": "address[city]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping city"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/get-latslngs-from-address": {
            "get": {
                "tags": [
                    "inventoryDistanceBasedSourceSelectionApiGetLatsLngsFromAddressV1"
                ],
                "description": "Get all available latitude and longitude objects from address.",
                "operationId": "GetV1InventoryGetlatslngsfromaddress",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "address[country]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping country"
                    },
                    {
                        "name": "address[postcode]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping postcode"
                    },
                    {
                        "name": "address[street]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping street address"
                    },
                    {
                        "name": "address[region]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping region"
                    },
                    {
                        "name": "address[city]",
                        "in": "query",
                        "type": "string",
                        "description": "Shipping city"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}": {
            "get": {
                "tags": [
                    "inventoryExportStockApiExportStockSalableQtyV1"
                ],
                "description": "Export product stock data filtered by search criteria.",
                "operationId": "GetV1InventoryExportstocksalableqtySalesChannelTypeSalesChannelCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "salesChannelType",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "salesChannelCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}": {
            "get": {
                "tags": [
                    "inventoryExportStockApiExportStockIndexDataV1"
                ],
                "description": "Provides stock index export from inventory_stock_% table",
                "operationId": "GetV1InventoryDumpstockindexdataSalesChannelTypeSalesChannelCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "salesChannelType",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "salesChannelCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inventory-export-stock-api-data-product-stock-index-data-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/get-product-salable-quantity/{sku}/{stockId}": {
            "get": {
                "tags": [
                    "inventorySalesApiGetProductSalableQtyV1"
                ],
                "description": "Get Product Quantity for given SKU and Stock",
                "operationId": "GetV1InventoryGetproductsalablequantitySkuStockId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "stockId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/is-product-salable/{sku}/{stockId}": {
            "get": {
                "tags": [
                    "inventorySalesApiIsProductSalableV1"
                ],
                "description": "Get is product in salable for given SKU in a given Stock",
                "operationId": "GetV1InventoryIsproductsalableSkuStockId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "stockId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/are-products-salable": {
            "get": {
                "tags": [
                    "inventorySalesApiAreProductsSalableV1"
                ],
                "description": "Get products salable status for given SKUs and given Stock.",
                "operationId": "GetV1InventoryAreproductssalable",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "skus",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "stockId",
                        "in": "query",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inventory-sales-api-data-is-product-salable-result-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}": {
            "get": {
                "tags": [
                    "inventorySalesApiIsProductSalableForRequestedQtyV1"
                ],
                "description": "Get is product salable for given SKU in a given Stock for a certain Qty",
                "operationId": "GetV1InventoryIsproductsalableforrequestedqtySkuStockIdRequestedQty",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "stockId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "requestedQty",
                        "in": "path",
                        "type": "number",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-sales-api-data-product-salable-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/are-product-salable-for-requested-qty/": {
            "get": {
                "tags": [
                    "inventorySalesApiAreProductsSalableForRequestedQtyV1"
                ],
                "description": "Get whether products are salable in requested Qty for given set of SKUs in specified stock.",
                "operationId": "GetV1InventoryAreproductsalableforrequestedqty",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "skuRequests[0][sku]",
                        "in": "query",
                        "type": "string",
                        "description": "Product sku."
                    },
                    {
                        "name": "skuRequests[0][qty]",
                        "in": "query",
                        "type": "number",
                        "description": "Product quantity."
                    },
                    {
                        "name": "stockId",
                        "in": "query",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/stock-resolver/{type}/{code}": {
            "get": {
                "tags": [
                    "inventorySalesApiStockResolverV1"
                ],
                "description": "Resolve Stock by Sales Channel type and code",
                "operationId": "GetV1InventoryStockresolverTypeCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-api-data-stock-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/source-selection-algorithm-list": {
            "get": {
                "tags": [
                    "inventorySourceSelectionApiGetSourceSelectionAlgorithmListV1"
                ],
                "description": "",
                "operationId": "GetV1InventorySourceselectionalgorithmlist",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/inventory-source-selection-api-data-source-selection-algorithm-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/source-selection-algorithm-result": {
            "post": {
                "tags": [
                    "inventorySourceSelectionApiSourceSelectionServiceV1"
                ],
                "description": "",
                "operationId": "PostV1InventorySourceselectionalgorithmresult",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventorySourceselectionalgorithmresultBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "inventoryRequest",
                                "algorithmCode"
                            ],
                            "properties": {
                                "inventoryRequest": {
                                    "$ref": "#/definitions/inventory-source-selection-api-data-inventory-request-interface"
                                },
                                "algorithmCode": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-source-selection-api-data-source-selection-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/order/notify-orders-are-ready-for-pickup": {
            "post": {
                "tags": [
                    "inventoryInStorePickupSalesApiNotifyOrdersAreReadyForPickupV1"
                ],
                "description": "Notify customer that the orders is ready for pickup.",
                "operationId": "PostV1OrderNotifyordersarereadyforpickup",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1OrderNotifyordersarereadyforpickupBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "orderIds"
                            ],
                            "properties": {
                                "orderIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-in-store-pickup-sales-api-data-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/low-quantity-notification/{sourceCode}/{sku}": {
            "get": {
                "tags": [
                    "inventoryLowQuantityNotificationApiGetSourceItemConfigurationV1"
                ],
                "description": "Get the source item configuration",
                "operationId": "GetV1InventoryLowquantitynotificationSourceCodeSku",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "sourceCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/low-quantity-notification": {
            "post": {
                "tags": [
                    "inventoryLowQuantityNotificationApiSourceItemConfigurationsSaveV1"
                ],
                "description": "",
                "operationId": "PostV1InventoryLowquantitynotification",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventoryLowquantitynotificationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sourceItemConfigurations"
                            ],
                            "properties": {
                                "sourceItemConfigurations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/low-quantity-notifications-delete": {
            "post": {
                "tags": [
                    "inventoryLowQuantityNotificationApiDeleteSourceItemsConfigurationV1"
                ],
                "description": "Delete multiple source items configuration for low quantity",
                "operationId": "PostV1InventoryLowquantitynotificationsdelete",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1InventoryLowquantitynotificationsdeleteBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "sourceItems"
                            ],
                            "properties": {
                                "sourceItems": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/inventory-api-data-source-item-interface"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/adobestock/asset/{id}": {
            "delete": {
                "tags": [
                    "adobeStockAssetApiAssetRepositoryV1"
                ],
                "description": "Delete asset",
                "operationId": "DeleteV1AdobestockAssetId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "adobeStockAssetApiAssetRepositoryV1"
                ],
                "description": "Get asset by id",
                "operationId": "GetV1AdobestockAssetId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/adobe-stock-asset-api-data-asset-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/adobestock/asset/search": {
            "get": {
                "tags": [
                    "adobeStockAssetApiAssetRepositoryV1"
                ],
                "description": "Get a list of assets",
                "operationId": "GetV1AdobestockAssetSearch",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/adobe-stock-asset-api-data-asset-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/adobestock/asset/list": {
            "get": {
                "tags": [
                    "adobeStockAssetApiGetAssetListV1"
                ],
                "description": "Search for images based on search criteria",
                "operationId": "GetV1AdobestockAssetList",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[requestName]",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/framework-search-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bulk/{bulkUuid}/detailed-status": {
            "get": {
                "tags": [
                    "asynchronousOperationsBulkStatusV1"
                ],
                "description": "Get Bulk summary data with list of operations items full data.",
                "operationId": "GetV1BulkBulkUuidDetailedstatus",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "bulkUuid",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/asynchronous-operations-data-detailed-bulk-operations-status-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bulk/{bulkUuid}/status": {
            "get": {
                "tags": [
                    "asynchronousOperationsBulkStatusV1"
                ],
                "description": "Get Bulk summary data with list of operations items short data.",
                "operationId": "GetV1BulkBulkUuidStatus",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "bulkUuid",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/asynchronous-operations-data-bulk-operations-status-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bulk/{bulkUuid}/operation-status/{status}": {
            "get": {
                "tags": [
                    "asynchronousOperationsBulkStatusV1"
                ],
                "description": "Get operations count by bulk uuid and status.",
                "operationId": "GetV1BulkBulkUuidOperationstatusStatus",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "bulkUuid",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/bulk": {
            "get": {
                "tags": [
                    "asynchronousOperationsOperationRepositoryV1"
                ],
                "description": "Lists the bulk operation items that match specified search criteria.",
                "operationId": "GetV1Bulk",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/asynchronous-operations-data-operation-search-results-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V2/carts/{cartId}/coupons": {
            "get": {
                "tags": [
                    "multicouponCouponManagementV2"
                ],
                "description": "Returns information for all coupons in a specified cart.",
                "operationId": "GetV2CartsCartIdCoupons",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "The coupon code data.",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "multicouponCouponManagementV2"
                ],
                "description": "Append the coupon code(s) to cart",
                "operationId": "PostV2CartsCartIdCoupons",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV2CartsCartIdCouponsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "couponCodes"
                            ],
                            "properties": {
                                "couponCodes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "multicouponCouponManagementV2"
                ],
                "description": "Replace the coupon code(s) in cart with the new code(s)",
                "operationId": "PutV2CartsCartIdCoupons",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PutV2CartsCartIdCouponsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "couponCodes"
                            ],
                            "properties": {
                                "couponCodes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V2/carts/{cartId}/coupons/deleteByCodes": {
            "post": {
                "tags": [
                    "multicouponCouponManagementV2"
                ],
                "description": "Deletes coupon(s) from a specified cart.",
                "operationId": "PostV2CartsCartIdCouponsDeleteByCodes",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "PostV2CartsCartIdCouponsDeleteByCodesBody",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "couponCodes": {
                                    "type": "array",
                                    "description": "coupon codes",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/negotiableQuote/{negotiableQuoteId}/duplicate": {
            "post": {
                "tags": [
                    "negotiableQuoteDuplicateDuplicateNegotiableQuoteV1"
                ],
                "description": "Duplicate Negotiable Quote based on the ID of existing negotiable quote. Returns ID of a duplicated quote.",
                "operationId": "PostV1NegotiableQuoteNegotiableQuoteIdDuplicate",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "negotiableQuoteId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/oope_shipping_carrier": {
            "get": {
                "tags": [
                    "outOfProcessShippingMethodsOutOfProcessCarrierRepositoryV1"
                ],
                "description": "Get a list of out of process shipping carriers",
                "operationId": "GetV1Oope_shipping_carrier",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/out-of-process-shipping-methods-data-out-of-process-carrier-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "outOfProcessShippingMethodsOutOfProcessCarrierRepositoryV1"
                ],
                "description": "Create or update an out of process shipping carrier",
                "operationId": "PostV1Oope_shipping_carrier",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1Oope_shipping_carrierBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "carrier"
                            ],
                            "properties": {
                                "carrier": {
                                    "$ref": "#/definitions/out-of-process-shipping-methods-data-out-of-process-carrier-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/out-of-process-shipping-methods-data-out-of-process-carrier-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "outOfProcessShippingMethodsOutOfProcessCarrierRepositoryV1"
                ],
                "description": "Create or update an out of process shipping carrier",
                "operationId": "PutV1Oope_shipping_carrier",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PutV1Oope_shipping_carrierBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "carrier"
                            ],
                            "properties": {
                                "carrier": {
                                    "$ref": "#/definitions/out-of-process-shipping-methods-data-out-of-process-carrier-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/out-of-process-shipping-methods-data-out-of-process-carrier-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/oope_shipping_carrier/{code}": {
            "get": {
                "tags": [
                    "outOfProcessShippingMethodsOutOfProcessCarrierRepositoryV1"
                ],
                "description": "Get a single out of process shipping carrier by code",
                "operationId": "GetV1Oope_shipping_carrierCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/out-of-process-shipping-methods-data-out-of-process-carrier-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "outOfProcessShippingMethodsOutOfProcessCarrierRepositoryV1"
                ],
                "description": "Delete an out of process shipping carrier",
                "operationId": "DeleteV1Oope_shipping_carrierCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/oope_tax_management/tax_integration/{code}": {
            "get": {
                "tags": [
                    "outOfProcessTaxManagementOutOfProcessTaxIntegrationRepositoryV1"
                ],
                "description": "Retrieve a tax integration by its code.",
                "operationId": "GetV1Oope_tax_managementTax_integrationCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/out-of-process-tax-management-data-out-of-process-tax-integration-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/oope_tax_management/tax_integration": {
            "get": {
                "tags": [
                    "outOfProcessTaxManagementOutOfProcessTaxIntegrationRepositoryV1"
                ],
                "description": "Retrieve a list of all tax integrations.",
                "operationId": "GetV1Oope_tax_managementTax_integration",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/out-of-process-tax-management-data-out-of-process-tax-integration-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "outOfProcessTaxManagementOutOfProcessTaxIntegrationRepositoryV1"
                ],
                "description": "Creates or updates an out of process tax integrations.",
                "operationId": "PostV1Oope_tax_managementTax_integration",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1Oope_tax_managementTax_integrationBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "tax_integration"
                            ],
                            "properties": {
                                "tax_integration": {
                                    "$ref": "#/definitions/out-of-process-tax-management-data-out-of-process-tax-integration-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/out-of-process-tax-management-data-out-of-process-tax-integration-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returns/{id}/tracking-numbers": {
            "post": {
                "tags": [
                    "rmaTrackManagementV1"
                ],
                "description": "Add track",
                "operationId": "PostV1ReturnsIdTrackingnumbers",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "PostV1ReturnsIdTrackingnumbersBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "track"
                            ],
                            "properties": {
                                "track": {
                                    "$ref": "#/definitions/rma-data-track-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "rmaTrackManagementV1"
                ],
                "description": "Get track list",
                "operationId": "GetV1ReturnsIdTrackingnumbers",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/rma-data-track-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returns/{id}/tracking-numbers/{trackId}": {
            "delete": {
                "tags": [
                    "rmaTrackManagementV1"
                ],
                "description": "Remove track by id",
                "operationId": "DeleteV1ReturnsIdTrackingnumbersTrackId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "trackId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returns/{id}/labels": {
            "get": {
                "tags": [
                    "rmaTrackManagementV1"
                ],
                "description": "Get shipping label int the PDF format",
                "operationId": "GetV1ReturnsIdLabels",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returns/{id}": {
            "get": {
                "tags": [
                    "rmaRmaRepositoryV1"
                ],
                "description": "Return data object for specified RMA id",
                "operationId": "GetV1ReturnsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/rma-data-rma-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "rmaRmaRepositoryV1"
                ],
                "description": "Delete RMA",
                "operationId": "DeleteV1ReturnsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "DeleteV1ReturnsIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "rmaDataObject"
                            ],
                            "properties": {
                                "rmaDataObject": {
                                    "$ref": "#/definitions/rma-data-rma-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "rmaRmaManagementV1"
                ],
                "description": "Save RMA",
                "operationId": "PutV1ReturnsId",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PutV1ReturnsIdBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "rmaDataObject"
                            ],
                            "properties": {
                                "rmaDataObject": {
                                    "$ref": "#/definitions/rma-data-rma-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/rma-data-rma-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returns/{id}/comments": {
            "post": {
                "tags": [
                    "rmaCommentManagementV1"
                ],
                "description": "Add comment",
                "operationId": "PostV1ReturnsIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "PostV1ReturnsIdCommentsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/rma-data-comment-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "rmaCommentManagementV1"
                ],
                "description": "Comments list",
                "operationId": "GetV1ReturnsIdComments",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/rma-data-comment-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returns": {
            "post": {
                "tags": [
                    "rmaRmaManagementV1"
                ],
                "description": "Save RMA",
                "operationId": "PostV1Returns",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "PostV1ReturnsBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "rmaDataObject"
                            ],
                            "properties": {
                                "rmaDataObject": {
                                    "$ref": "#/definitions/rma-data-rma-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/rma-data-rma-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "rmaRmaManagementV1"
                ],
                "description": "Return list of rma data objects based on search criteria",
                "operationId": "GetV1Returns",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/rma-data-rma-search-result-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returnsAttributeMetadata/{attributeCode}": {
            "get": {
                "tags": [
                    "rmaRmaAttributesManagementV1"
                ],
                "description": "Retrieve attribute metadata.",
                "operationId": "GetV1ReturnsAttributeMetadataAttributeCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returnsAttributeMetadata/form/{formCode}": {
            "get": {
                "tags": [
                    "rmaRmaAttributesManagementV1"
                ],
                "description": "Retrieve all attributes filtered by form code",
                "operationId": "GetV1ReturnsAttributeMetadataFormFormCode",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "formCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returnsAttributeMetadata": {
            "get": {
                "tags": [
                    "rmaRmaAttributesManagementV1"
                ],
                "description": "Get all attribute metadata.",
                "operationId": "GetV1ReturnsAttributeMetadata",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customer-data-attribute-metadata-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/returnsAttributeMetadata/custom": {
            "get": {
                "tags": [
                    "rmaRmaAttributesManagementV1"
                ],
                "description": "Get custom attribute metadata for the given Data object's attribute set",
                "operationId": "GetV1ReturnsAttributeMetadataCustom",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "dataObjectClassName",
                        "in": "query",
                        "type": "string",
                        "description": "Data object class name",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/framework-metadata-object-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/eventing/supportedList": {
            "get": {
                "tags": [
                    "adobeCommerceEventsCoreSaasSupportedEventListV1"
                ],
                "description": "Return list of aliased allowed event names.",
                "operationId": "GetV1EventingSupportedList",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/adobe-commerce-events-core-saas-data-supported-event-interface"
                            }
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "error-response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Error message"
                },
                "errors": {
                    "$ref": "#/definitions/error-errors"
                },
                "code": {
                    "type": "integer",
                    "description": "Error code"
                },
                "parameters": {
                    "$ref": "#/definitions/error-parameters"
                },
                "trace": {
                    "type": "string",
                    "description": "Stack trace"
                }
            },
            "required": [
                "message"
            ]
        },
        "error-errors": {
            "type": "array",
            "description": "Errors list",
            "items": {
                "$ref": "#/definitions/error-errors-item"
            }
        },
        "error-errors-item": {
            "type": "object",
            "description": "Error details",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Error message"
                },
                "parameters": {
                    "$ref": "#/definitions/error-parameters"
                }
            }
        },
        "error-parameters": {
            "type": "array",
            "description": "Error parameters list",
            "items": {
                "$ref": "#/definitions/error-parameters-item"
            }
        },
        "error-parameters-item": {
            "type": "object",
            "description": "Error parameters item",
            "properties": {
                "resources": {
                    "type": "string",
                    "description": "ACL resource"
                },
                "fieldName": {
                    "type": "string",
                    "description": "Missing or invalid field name"
                },
                "fieldValue": {
                    "type": "string",
                    "description": "Incorrect field value"
                }
            }
        },
        "store-data-store-interface": {
            "type": "object",
            "description": "Store interface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Store name"
                },
                "website_id": {
                    "type": "integer"
                },
                "store_group_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/store-data-store-extension-interface"
                }
            },
            "required": [
                "id",
                "code",
                "name",
                "website_id",
                "store_group_id",
                "is_active"
            ]
        },
        "store-data-store-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\StoreInterface"
        },
        "store-data-group-interface": {
            "type": "object",
            "description": "Group interface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "website_id": {
                    "type": "integer"
                },
                "root_category_id": {
                    "type": "integer"
                },
                "default_store_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string",
                    "description": "Group code."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/store-data-group-extension-interface"
                }
            },
            "required": [
                "id",
                "website_id",
                "root_category_id",
                "default_store_id",
                "name",
                "code"
            ]
        },
        "store-data-group-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\GroupInterface"
        },
        "store-data-website-interface": {
            "type": "object",
            "description": "Website interface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Website name"
                },
                "default_group_id": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/store-data-website-extension-interface"
                }
            },
            "required": [
                "id",
                "code",
                "name",
                "default_group_id"
            ]
        },
        "store-data-website-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\WebsiteInterface"
        },
        "store-data-store-config-interface": {
            "type": "object",
            "description": "Interface for store config",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Store id"
                },
                "code": {
                    "type": "string",
                    "description": "Store code"
                },
                "website_id": {
                    "type": "integer",
                    "description": "Website id of the store"
                },
                "locale": {
                    "type": "string",
                    "description": "Store locale"
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code"
                },
                "default_display_currency_code": {
                    "type": "string",
                    "description": "Default display currency code"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone of the store"
                },
                "weight_unit": {
                    "type": "string",
                    "description": "The unit of weight"
                },
                "base_url": {
                    "type": "string",
                    "description": "Base URL for the store"
                },
                "base_link_url": {
                    "type": "string",
                    "description": "Base link URL for the store"
                },
                "base_static_url": {
                    "type": "string",
                    "description": "Base static URL for the store"
                },
                "base_media_url": {
                    "type": "string",
                    "description": "Base media URL for the store"
                },
                "secure_base_url": {
                    "type": "string",
                    "description": "Secure base URL for the store"
                },
                "secure_base_link_url": {
                    "type": "string",
                    "description": "Secure base link URL for the store"
                },
                "secure_base_static_url": {
                    "type": "string",
                    "description": "Secure base static URL for the store"
                },
                "secure_base_media_url": {
                    "type": "string",
                    "description": "Secure base media URL for the store"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/store-data-store-config-extension-interface"
                }
            },
            "required": [
                "id",
                "code",
                "website_id",
                "locale",
                "base_currency_code",
                "default_display_currency_code",
                "timezone",
                "weight_unit",
                "base_url",
                "base_link_url",
                "base_static_url",
                "base_media_url",
                "secure_base_url",
                "secure_base_link_url",
                "secure_base_static_url",
                "secure_base_media_url"
            ]
        },
        "store-data-store-config-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\StoreConfigInterface"
        },
        "eav-data-attribute-set-search-results-interface": {
            "type": "object",
            "description": "Interface AttributeSetSearchResultsInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Attribute sets list.",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-set-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "eav-data-attribute-set-interface": {
            "type": "object",
            "description": "Interface AttributeSetInterface",
            "properties": {
                "attribute_set_id": {
                    "type": "integer",
                    "description": "Attribute set ID"
                },
                "attribute_set_name": {
                    "type": "string",
                    "description": "Attribute set name"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Attribute set sort order index"
                },
                "entity_type_id": {
                    "type": "integer",
                    "description": "Attribute set entity type id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/eav-data-attribute-set-extension-interface"
                }
            },
            "required": [
                "attribute_set_name",
                "sort_order"
            ]
        },
        "eav-data-attribute-set-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeSetInterface"
        },
        "framework-search-criteria-interface": {
            "type": "object",
            "description": "Search criteria interface.",
            "properties": {
                "filter_groups": {
                    "type": "array",
                    "description": "A list of filter groups.",
                    "items": {
                        "$ref": "#/definitions/framework-search-filter-group"
                    }
                },
                "sort_orders": {
                    "type": "array",
                    "description": "Sort order.",
                    "items": {
                        "$ref": "#/definitions/framework-sort-order"
                    }
                },
                "page_size": {
                    "type": "integer",
                    "description": "Page size."
                },
                "current_page": {
                    "type": "integer",
                    "description": "Current page."
                }
            },
            "required": [
                "filter_groups"
            ]
        },
        "framework-search-filter-group": {
            "type": "object",
            "description": "Groups two or more filters together using a logical OR",
            "properties": {
                "filters": {
                    "type": "array",
                    "description": "A list of filters in this group",
                    "items": {
                        "$ref": "#/definitions/framework-filter"
                    }
                }
            }
        },
        "framework-filter": {
            "type": "object",
            "description": "Filter which can be used by any methods from service layer.",
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Field"
                },
                "value": {
                    "type": "string",
                    "description": "Value"
                },
                "condition_type": {
                    "type": "string",
                    "description": "Condition type"
                }
            },
            "required": [
                "field",
                "value"
            ]
        },
        "framework-sort-order": {
            "type": "object",
            "description": "Data object for sort order.",
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Sorting field."
                },
                "direction": {
                    "type": "string",
                    "description": "Sorting direction."
                }
            },
            "required": [
                "field",
                "direction"
            ]
        },
        "customer-data-group-interface": {
            "type": "object",
            "description": "Customer group interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "code": {
                    "type": "string",
                    "description": "Code"
                },
                "tax_class_id": {
                    "type": "integer",
                    "description": "Tax class id"
                },
                "tax_class_name": {
                    "type": "string",
                    "description": "Tax class name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-group-extension-interface"
                }
            },
            "required": [
                "code",
                "tax_class_id"
            ]
        },
        "customer-data-group-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\GroupInterface",
            "properties": {
                "exclude_website_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "customer-data-group-search-results-interface": {
            "type": "object",
            "description": "Interface for customer groups search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Customer groups list.",
                    "items": {
                        "$ref": "#/definitions/customer-data-group-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "customer-data-attribute-metadata-interface": {
            "type": "object",
            "description": "Customer attribute metadata interface.",
            "properties": {
                "frontend_input": {
                    "type": "string",
                    "description": "HTML for input element."
                },
                "input_filter": {
                    "type": "string",
                    "description": "Template used for input (e.g. \"date\")"
                },
                "store_label": {
                    "type": "string",
                    "description": "Label of the store."
                },
                "validation_rules": {
                    "type": "array",
                    "description": "Validation rules.",
                    "items": {
                        "$ref": "#/definitions/customer-data-validation-rule-interface"
                    }
                },
                "multiline_count": {
                    "type": "integer",
                    "description": "Of lines of the attribute value."
                },
                "visible": {
                    "type": "boolean",
                    "description": "Attribute is visible on frontend."
                },
                "required": {
                    "type": "boolean",
                    "description": "Attribute is required."
                },
                "data_model": {
                    "type": "string",
                    "description": "Data model for attribute."
                },
                "options": {
                    "type": "array",
                    "description": "Options of the attribute (key => value pairs for select)",
                    "items": {
                        "$ref": "#/definitions/customer-data-option-interface"
                    }
                },
                "frontend_class": {
                    "type": "string",
                    "description": "Class which is used to display the attribute on frontend."
                },
                "user_defined": {
                    "type": "boolean",
                    "description": "Current attribute has been defined by a user."
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Attributes sort order."
                },
                "frontend_label": {
                    "type": "string",
                    "description": "Label which supposed to be displayed on frontend."
                },
                "note": {
                    "type": "string",
                    "description": "The note attribute for the element."
                },
                "system": {
                    "type": "boolean",
                    "description": "This is a system attribute."
                },
                "backend_type": {
                    "type": "string",
                    "description": "Backend type."
                },
                "is_used_in_grid": {
                    "type": "boolean",
                    "description": "It is used in customer grid"
                },
                "is_visible_in_grid": {
                    "type": "boolean",
                    "description": "It is visible in customer grid"
                },
                "is_filterable_in_grid": {
                    "type": "boolean",
                    "description": "It is filterable in customer grid"
                },
                "is_searchable_in_grid": {
                    "type": "boolean",
                    "description": "It is searchable in customer grid"
                },
                "attribute_code": {
                    "type": "string",
                    "description": "Code of the attribute."
                }
            },
            "required": [
                "frontend_input",
                "input_filter",
                "store_label",
                "validation_rules",
                "multiline_count",
                "visible",
                "required",
                "data_model",
                "options",
                "frontend_class",
                "user_defined",
                "sort_order",
                "frontend_label",
                "note",
                "system",
                "backend_type",
                "attribute_code"
            ]
        },
        "customer-data-validation-rule-interface": {
            "type": "object",
            "description": "Validation rule interface.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Validation rule name"
                },
                "value": {
                    "type": "string",
                    "description": "Validation rule value"
                }
            },
            "required": [
                "name",
                "value"
            ]
        },
        "customer-data-option-interface": {
            "type": "object",
            "description": "Option interface.",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Option label"
                },
                "value": {
                    "type": "string",
                    "description": "Option value"
                },
                "options": {
                    "type": "array",
                    "description": "Nested options",
                    "items": {
                        "$ref": "#/definitions/customer-data-option-interface"
                    }
                }
            },
            "required": [
                "label"
            ]
        },
        "customer-data-customer-interface": {
            "type": "object",
            "description": "Customer entity interface for API handling.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Customer id"
                },
                "group_id": {
                    "type": "integer",
                    "description": "Group id"
                },
                "default_billing": {
                    "type": "string",
                    "description": "Default billing address id"
                },
                "default_shipping": {
                    "type": "string",
                    "description": "Default shipping address id"
                },
                "confirmation": {
                    "type": "string",
                    "description": "Confirmation"
                },
                "created_at": {
                    "type": "string",
                    "description": "Created at time"
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated at time"
                },
                "created_in": {
                    "type": "string",
                    "description": "Created in area"
                },
                "dob": {
                    "type": "string",
                    "description": "In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customers’ full date of birth (month, day, year) along with other personal identifiers (e.g., full name) before collecting or processing such data."
                },
                "email": {
                    "type": "string",
                    "description": "Email address"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix"
                },
                "gender": {
                    "type": "integer",
                    "description": "Gender"
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store id"
                },
                "taxvat": {
                    "type": "string",
                    "description": "Tax Vat"
                },
                "website_id": {
                    "type": "integer",
                    "description": "Website id"
                },
                "addresses": {
                    "type": "array",
                    "description": "Customer addresses.",
                    "items": {
                        "$ref": "#/definitions/customer-data-address-interface"
                    }
                },
                "disable_auto_group_change": {
                    "type": "integer",
                    "description": "Disable auto group change flag."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-customer-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "email",
                "firstname",
                "lastname"
            ]
        },
        "customer-data-address-interface": {
            "type": "object",
            "description": "Customer address interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID"
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID"
                },
                "region": {
                    "$ref": "#/definitions/customer-data-region-interface"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region ID"
                },
                "country_id": {
                    "type": "string",
                    "description": "Country code in ISO_3166-2 format"
                },
                "street": {
                    "type": "array",
                    "description": "Street",
                    "items": {
                        "type": "string"
                    }
                },
                "company": {
                    "type": "string",
                    "description": "Company"
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone number"
                },
                "fax": {
                    "type": "string",
                    "description": "Fax number"
                },
                "postcode": {
                    "type": "string",
                    "description": "Postcode"
                },
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix"
                },
                "vat_id": {
                    "type": "string",
                    "description": "Vat id"
                },
                "default_shipping": {
                    "type": "boolean",
                    "description": "If this address is default shipping address."
                },
                "default_billing": {
                    "type": "boolean",
                    "description": "If this address is default billing address"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-address-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            }
        },
        "customer-data-region-interface": {
            "type": "object",
            "description": "Customer address region interface.",
            "properties": {
                "region_code": {
                    "type": "string",
                    "description": "Region code"
                },
                "region": {
                    "type": "string",
                    "description": "Region"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-region-extension-interface"
                }
            },
            "required": [
                "region_code",
                "region",
                "region_id"
            ]
        },
        "customer-data-region-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface"
        },
        "customer-data-address-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface"
        },
        "framework-attribute-interface": {
            "type": "object",
            "description": "Interface for custom attribute value.",
            "properties": {
                "attribute_code": {
                    "type": "string",
                    "description": "Attribute code"
                },
                "value": {
                    "type": "string",
                    "description": "Attribute value"
                }
            },
            "required": [
                "attribute_code",
                "value"
            ]
        },
        "customer-data-customer-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface",
            "properties": {
                "company_attributes": {
                    "$ref": "#/definitions/company-data-company-customer-interface"
                },
                "is_subscribed": {
                    "type": "boolean"
                },
                "assistance_allowed": {
                    "type": "integer"
                }
            }
        },
        "company-data-company-customer-interface": {
            "type": "object",
            "description": "Extended customer custom attributes interface.",
            "properties": {
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID."
                },
                "company_id": {
                    "type": "integer",
                    "description": "Company ID."
                },
                "job_title": {
                    "type": "string",
                    "description": "Job title."
                },
                "status": {
                    "type": "integer",
                    "description": "Customer status."
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone."
                },
                "is_default": {
                    "type": "boolean",
                    "description": "Is default"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-company-customer-extension-interface"
                }
            }
        },
        "company-data-company-customer-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface"
        },
        "customer-data-customer-search-results-interface": {
            "type": "object",
            "description": "Interface for customer search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Customers list.",
                    "items": {
                        "$ref": "#/definitions/customer-data-customer-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "customer-data-validation-results-interface": {
            "type": "object",
            "description": "Validation results interface.",
            "properties": {
                "valid": {
                    "type": "boolean",
                    "description": "If the provided data is valid."
                },
                "messages": {
                    "type": "array",
                    "description": "Error messages as array in case of validation failure, else return empty array.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "valid",
                "messages"
            ]
        },
        "adobe-io-events-client-configuration-check-result-interface": {
            "type": "object",
            "description": "Contains configuration status for each necessary config setting",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Ok/error status of the configuration"
                },
                "technical_service_account_configured": {
                    "type": "boolean",
                    "description": "The technical service account is configured"
                },
                "technical_service_account_can_connect_to_io_events": {
                    "type": "boolean",
                    "description": "Providers are configured to allow the service account to connect"
                },
                "provider_id_configured": {
                    "type": "string",
                    "description": "The provider id if configured"
                },
                "provider_id_valid": {
                    "type": "boolean",
                    "description": "A configured provider id is valid"
                }
            },
            "required": [
                "status",
                "technical_service_account_configured",
                "technical_service_account_can_connect_to_io_events",
                "provider_id_configured",
                "provider_id_valid"
            ]
        },
        "adobe-commerce-events-client-data-event-data-interface": {
            "type": "object",
            "description": "Interface for event data from webapi requests",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Event name"
                },
                "parent": {
                    "type": "string",
                    "description": "Event parent name"
                },
                "fields": {
                    "type": "array",
                    "description": "Event fields",
                    "items": {
                        "$ref": "#/definitions/adobe-commerce-events-client-data-event-field-interface"
                    }
                },
                "rules": {
                    "type": "array",
                    "description": "Event fields",
                    "items": {
                        "$ref": "#/definitions/adobe-commerce-events-client-data-event-rule-interface"
                    }
                },
                "destination": {
                    "type": "string",
                    "description": "Event destination"
                },
                "priority": {
                    "type": "boolean",
                    "description": "Event priority"
                },
                "hipaa_audit_required": {
                    "type": "boolean",
                    "description": "If event is required to be HIPAA audited"
                },
                "provider_id": {
                    "type": "string",
                    "description": "Event provider id"
                }
            },
            "required": [
                "name",
                "parent",
                "fields",
                "rules",
                "destination",
                "priority",
                "hipaa_audit_required",
                "provider_id"
            ]
        },
        "adobe-commerce-events-client-data-event-field-interface": {
            "type": "object",
            "description": "Interface for event field data from webapi requests",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Event field name"
                },
                "converter": {
                    "type": "string",
                    "description": "Event field converter"
                }
            },
            "required": [
                "name",
                "converter"
            ]
        },
        "adobe-commerce-events-client-data-event-rule-interface": {
            "type": "object",
            "description": "Interface for event rule data from webapi requests",
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Event rule field name"
                },
                "operator": {
                    "type": "string",
                    "description": "Event rule operator"
                },
                "value": {
                    "type": "string",
                    "description": "Event rule value"
                }
            },
            "required": [
                "field",
                "operator",
                "value"
            ]
        },
        "adobe-commerce-events-client-data-configuration-interface": {
            "type": "object",
            "description": "Eventing configuration",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If is enabled"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant id"
                },
                "environment_id": {
                    "type": "string",
                    "description": "Environment id"
                },
                "provider_id": {
                    "type": "string",
                    "description": "Provider id"
                },
                "instance_id": {
                    "type": "string",
                    "description": "Instance id"
                },
                "workspace_configuration": {
                    "type": "string",
                    "description": "Workspace configuration"
                }
            },
            "required": [
                "enabled",
                "merchant_id",
                "environment_id",
                "provider_id",
                "instance_id",
                "workspace_configuration"
            ]
        },
        "adobe-commerce-events-client-data-event-provider-interface": {
            "type": "object",
            "description": "Interface for event provider",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the event provider record"
                },
                "provider_id": {
                    "type": "string",
                    "description": "Event provider id"
                },
                "instance_id": {
                    "type": "string",
                    "description": "Event provider instance id"
                },
                "label": {
                    "type": "string",
                    "description": "Event provider label"
                },
                "description": {
                    "type": "string",
                    "description": "Event provider description"
                },
                "workspace_configuration": {
                    "type": "string",
                    "description": "Event provider workspace configuration"
                }
            },
            "required": [
                "provider_id",
                "instance_id",
                "label",
                "description",
                "workspace_configuration"
            ]
        },
        "adobe-commerce-webhooks-data-webhook-data-interface": {
            "type": "object",
            "description": "Interface for webhook data from webapi requests",
            "properties": {
                "webhook_method": {
                    "type": "string",
                    "description": "Webhook method name"
                },
                "webhook_type": {
                    "type": "string",
                    "description": "Webhook type"
                },
                "batch_name": {
                    "type": "string",
                    "description": "Webhook batch name"
                },
                "batch_order": {
                    "type": "integer",
                    "description": "Webhook batch order"
                },
                "hook_name": {
                    "type": "string",
                    "description": "Hook name"
                },
                "url": {
                    "type": "string",
                    "description": "Hook url"
                },
                "priority": {
                    "type": "integer",
                    "description": "Hook priority"
                },
                "required": {
                    "type": "boolean",
                    "description": "If hook is required"
                },
                "soft_timeout": {
                    "type": "integer",
                    "description": "Hook soft timeout"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Hook timeout"
                },
                "method": {
                    "type": "string",
                    "description": "Hook method"
                },
                "fallback_error_message": {
                    "type": "string",
                    "description": "Hook fallback error message"
                },
                "ttl": {
                    "type": "integer",
                    "description": "Hook ttl"
                },
                "fields": {
                    "type": "array",
                    "description": "Webhook fields",
                    "items": {
                        "$ref": "#/definitions/adobe-commerce-webhooks-data-hook-field-interface"
                    }
                },
                "rules": {
                    "type": "array",
                    "description": "Webhook rules",
                    "items": {
                        "$ref": "#/definitions/adobe-commerce-webhooks-data-hook-rule-interface"
                    }
                },
                "headers": {
                    "type": "array",
                    "description": "Webhook headers",
                    "items": {
                        "$ref": "#/definitions/adobe-commerce-webhooks-data-hook-header-interface"
                    }
                }
            },
            "required": [
                "webhook_method",
                "webhook_type",
                "batch_name",
                "batch_order",
                "hook_name",
                "url",
                "priority",
                "required",
                "soft_timeout",
                "timeout",
                "method",
                "fallback_error_message",
                "ttl",
                "fields",
                "rules",
                "headers"
            ]
        },
        "adobe-commerce-webhooks-data-hook-field-interface": {
            "type": "object",
            "description": "Interface for hook field data from webapi requests",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Field name."
                },
                "source": {
                    "type": "string",
                    "description": "Field source."
                }
            },
            "required": [
                "name",
                "source"
            ]
        },
        "adobe-commerce-webhooks-data-hook-rule-interface": {
            "type": "object",
            "description": "Interface for hook rule data from webapi requests",
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Field name."
                },
                "operator": {
                    "type": "string",
                    "description": "Operator."
                },
                "value": {
                    "type": "string",
                    "description": "Value."
                }
            },
            "required": [
                "field",
                "operator",
                "value"
            ]
        },
        "adobe-commerce-webhooks-data-hook-header-interface": {
            "type": "object",
            "description": "Interface for hook header data from webapi requests",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Header name."
                },
                "value": {
                    "type": "string",
                    "description": "Header value."
                }
            },
            "required": [
                "name",
                "value"
            ]
        },
        "framework-search-search-result-interface": {
            "type": "object",
            "description": "Interface SearchResultInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/framework-search-document-interface"
                    }
                },
                "aggregations": {
                    "$ref": "#/definitions/framework-search-aggregation-interface"
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "aggregations",
                "search_criteria",
                "total_count"
            ]
        },
        "framework-search-document-interface": {
            "type": "object",
            "description": "Interface Search Document",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "id"
            ]
        },
        "framework-search-aggregation-interface": {
            "type": "object",
            "description": "Interface Aggregation to get faceted data",
            "properties": {
                "buckets": {
                    "type": "array",
                    "description": "All Document fields",
                    "items": {
                        "$ref": "#/definitions/framework-search-bucket-interface"
                    }
                },
                "bucket_names": {
                    "type": "array",
                    "description": "Document field names",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "buckets",
                "bucket_names"
            ]
        },
        "framework-search-bucket-interface": {
            "type": "object",
            "description": "Interface for facet Bucket",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Field name"
                },
                "values": {
                    "type": "array",
                    "description": "Field values",
                    "items": {
                        "$ref": "#/definitions/framework-search-aggregation-value-interface"
                    }
                }
            },
            "required": [
                "name",
                "values"
            ]
        },
        "framework-search-aggregation-value-interface": {
            "type": "object",
            "description": "Interface Aggregation Value",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Aggregation"
                },
                "metrics": {
                    "type": "array",
                    "description": "Metrics",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value",
                "metrics"
            ]
        },
        "framework-search-search-criteria-interface": {
            "type": "object",
            "description": "Interface SearchCriteriaInterface",
            "properties": {
                "request_name": {
                    "type": "string"
                },
                "filter_groups": {
                    "type": "array",
                    "description": "A list of filter groups.",
                    "items": {
                        "$ref": "#/definitions/framework-search-filter-group"
                    }
                },
                "sort_orders": {
                    "type": "array",
                    "description": "Sort order.",
                    "items": {
                        "$ref": "#/definitions/framework-sort-order"
                    }
                },
                "page_size": {
                    "type": "integer",
                    "description": "Page size."
                },
                "current_page": {
                    "type": "integer",
                    "description": "Current page."
                }
            },
            "required": [
                "request_name",
                "filter_groups"
            ]
        },
        "catalog-data-product-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "sku": {
                    "type": "string",
                    "description": "Sku"
                },
                "name": {
                    "type": "string",
                    "description": "Name"
                },
                "attribute_set_id": {
                    "type": "integer",
                    "description": "Attribute set id"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "status": {
                    "type": "integer",
                    "description": "Status"
                },
                "visibility": {
                    "type": "integer",
                    "description": "Visibility"
                },
                "type_id": {
                    "type": "string",
                    "description": "Type id"
                },
                "created_at": {
                    "type": "string",
                    "description": "Created date"
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated date"
                },
                "weight": {
                    "type": "number",
                    "description": "Weight"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-extension-interface"
                },
                "product_links": {
                    "type": "array",
                    "description": "Product links info",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-link-interface"
                    }
                },
                "options": {
                    "type": "array",
                    "description": "List of product options",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                    }
                },
                "media_gallery_entries": {
                    "type": "array",
                    "description": "Media gallery entries",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-interface"
                    }
                },
                "tier_prices": {
                    "type": "array",
                    "description": "List of product tier prices",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-tier-price-interface"
                    }
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "sku"
            ]
        },
        "catalog-data-product-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductInterface",
            "properties": {
                "website_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "category_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-category-link-interface"
                    }
                },
                "stock_item": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-item-interface"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sales-rule-data-rule-discount-interface"
                    }
                },
                "bundle_product_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bundle-data-option-interface"
                    }
                },
                "configurable_product_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-option-interface"
                    }
                },
                "configurable_product_links": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "downloadable_product_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/downloadable-data-link-interface"
                    }
                },
                "downloadable_product_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/downloadable-data-sample-interface"
                    }
                },
                "giftcard_amounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gift-card-data-giftcard-amount-interface"
                    }
                }
            }
        },
        "catalog-data-category-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "position": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "string",
                    "description": "Category id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-category-link-extension-interface"
                }
            },
            "required": [
                "category_id"
            ]
        },
        "catalog-data-category-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryLinkInterface"
        },
        "catalog-inventory-data-stock-item-interface": {
            "type": "object",
            "description": "Interface StockItem",
            "properties": {
                "item_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "stock_id": {
                    "type": "integer",
                    "description": "Stock identifier"
                },
                "qty": {
                    "type": "number"
                },
                "is_in_stock": {
                    "type": "boolean",
                    "description": "Stock Availability"
                },
                "is_qty_decimal": {
                    "type": "boolean"
                },
                "show_default_notification_message": {
                    "type": "boolean"
                },
                "use_config_min_qty": {
                    "type": "boolean"
                },
                "min_qty": {
                    "type": "number",
                    "description": "Minimal quantity available for item status in stock"
                },
                "use_config_min_sale_qty": {
                    "type": "integer"
                },
                "min_sale_qty": {
                    "type": "number",
                    "description": "Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation"
                },
                "use_config_max_sale_qty": {
                    "type": "boolean"
                },
                "max_sale_qty": {
                    "type": "number",
                    "description": "Maximum Qty Allowed in Shopping Cart data wrapper"
                },
                "use_config_backorders": {
                    "type": "boolean"
                },
                "backorders": {
                    "type": "integer",
                    "description": "Backorders status"
                },
                "use_config_notify_stock_qty": {
                    "type": "boolean"
                },
                "notify_stock_qty": {
                    "type": "number",
                    "description": "Notify for Quantity Below data wrapper"
                },
                "use_config_qty_increments": {
                    "type": "boolean"
                },
                "qty_increments": {
                    "type": "number",
                    "description": "Quantity Increments data wrapper"
                },
                "use_config_enable_qty_inc": {
                    "type": "boolean"
                },
                "enable_qty_increments": {
                    "type": "boolean",
                    "description": "Whether Quantity Increments is enabled"
                },
                "use_config_manage_stock": {
                    "type": "boolean"
                },
                "manage_stock": {
                    "type": "boolean",
                    "description": "Can Manage Stock"
                },
                "low_stock_date": {
                    "type": "string"
                },
                "is_decimal_divided": {
                    "type": "boolean"
                },
                "stock_status_changed_auto": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-item-extension-interface"
                }
            },
            "required": [
                "qty",
                "is_in_stock",
                "is_qty_decimal",
                "show_default_notification_message",
                "use_config_min_qty",
                "min_qty",
                "use_config_min_sale_qty",
                "min_sale_qty",
                "use_config_max_sale_qty",
                "max_sale_qty",
                "use_config_backorders",
                "backorders",
                "use_config_notify_stock_qty",
                "notify_stock_qty",
                "use_config_qty_increments",
                "qty_increments",
                "use_config_enable_qty_inc",
                "enable_qty_increments",
                "use_config_manage_stock",
                "manage_stock",
                "low_stock_date",
                "is_decimal_divided",
                "stock_status_changed_auto"
            ]
        },
        "catalog-inventory-data-stock-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockItemInterface"
        },
        "sales-rule-data-rule-discount-interface": {
            "type": "object",
            "description": "Rule discount Interface",
            "properties": {
                "discount_data": {
                    "$ref": "#/definitions/sales-rule-data-discount-data-interface"
                },
                "rule_label": {
                    "type": "string",
                    "description": "Rule Label"
                },
                "rule_i_d": {
                    "type": "integer",
                    "description": "Rule ID"
                }
            },
            "required": [
                "discount_data",
                "rule_label",
                "rule_i_d"
            ]
        },
        "sales-rule-data-discount-data-interface": {
            "type": "object",
            "description": "Discount Data Interface",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "Amount"
                },
                "base_amount": {
                    "type": "number",
                    "description": "Base Amount"
                },
                "original_amount": {
                    "type": "number",
                    "description": "Original Amount"
                },
                "base_original_amount": {
                    "type": "number",
                    "description": "Base Original Amount"
                }
            },
            "required": [
                "amount",
                "base_amount",
                "original_amount",
                "base_original_amount"
            ]
        },
        "bundle-data-option-interface": {
            "type": "object",
            "description": "Interface OptionInterface",
            "properties": {
                "option_id": {
                    "type": "integer",
                    "description": "Option id"
                },
                "title": {
                    "type": "string",
                    "description": "Option title"
                },
                "required": {
                    "type": "boolean",
                    "description": "Is required option"
                },
                "type": {
                    "type": "string",
                    "description": "Input type"
                },
                "position": {
                    "type": "integer",
                    "description": "Option position"
                },
                "sku": {
                    "type": "string",
                    "description": "Product sku"
                },
                "product_links": {
                    "type": "array",
                    "description": "Product links",
                    "items": {
                        "$ref": "#/definitions/bundle-data-link-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-option-extension-interface"
                }
            }
        },
        "bundle-data-link-interface": {
            "type": "object",
            "description": "Interface LinkInterface",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The identifier"
                },
                "sku": {
                    "type": "string",
                    "description": "Linked product sku"
                },
                "option_id": {
                    "type": "integer",
                    "description": "Option id"
                },
                "qty": {
                    "type": "number",
                    "description": "Qty"
                },
                "position": {
                    "type": "integer",
                    "description": "Position"
                },
                "is_default": {
                    "type": "boolean",
                    "description": "Is default"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "price_type": {
                    "type": "integer",
                    "description": "Price type"
                },
                "can_change_quantity": {
                    "type": "integer",
                    "description": "Whether quantity could be changed"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-link-extension-interface"
                }
            },
            "required": [
                "is_default",
                "price",
                "price_type"
            ]
        },
        "bundle-data-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\LinkInterface"
        },
        "bundle-data-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionInterface"
        },
        "configurable-product-data-option-interface": {
            "type": "object",
            "description": "Interface OptionInterface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "attribute_id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "is_use_default": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-option-value-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/configurable-product-data-option-extension-interface"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "configurable-product-data-option-value-interface": {
            "type": "object",
            "description": "Interface OptionValueInterface",
            "properties": {
                "value_index": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/configurable-product-data-option-value-extension-interface"
                }
            },
            "required": [
                "value_index"
            ]
        },
        "configurable-product-data-option-value-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionValueInterface"
        },
        "configurable-product-data-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionInterface"
        },
        "downloadable-data-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Sample(or link) id"
                },
                "title": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                },
                "is_shareable": {
                    "type": "integer",
                    "description": "Shareable status"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "number_of_downloads": {
                    "type": "integer",
                    "description": "Of downloads per user"
                },
                "link_type": {
                    "type": "string"
                },
                "link_file": {
                    "type": "string",
                    "description": "relative file path"
                },
                "link_file_content": {
                    "$ref": "#/definitions/downloadable-data-file-content-interface"
                },
                "link_url": {
                    "type": "string",
                    "description": "Link url or null when type is 'file'"
                },
                "sample_type": {
                    "type": "string"
                },
                "sample_file": {
                    "type": "string",
                    "description": "relative file path"
                },
                "sample_file_content": {
                    "$ref": "#/definitions/downloadable-data-file-content-interface"
                },
                "sample_url": {
                    "type": "string",
                    "description": "file URL"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/downloadable-data-link-extension-interface"
                }
            },
            "required": [
                "sort_order",
                "is_shareable",
                "price",
                "link_type",
                "sample_type"
            ]
        },
        "downloadable-data-file-content-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "file_data": {
                    "type": "string",
                    "description": "Data (base64 encoded content)"
                },
                "name": {
                    "type": "string",
                    "description": "File name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/downloadable-data-file-content-extension-interface"
                }
            },
            "required": [
                "file_data",
                "name"
            ]
        },
        "downloadable-data-file-content-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\File\\ContentInterface"
        },
        "downloadable-data-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\LinkInterface"
        },
        "downloadable-data-sample-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Sample(or link) id"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Order index for sample"
                },
                "sample_type": {
                    "type": "string"
                },
                "sample_file": {
                    "type": "string",
                    "description": "relative file path"
                },
                "sample_file_content": {
                    "$ref": "#/definitions/downloadable-data-file-content-interface"
                },
                "sample_url": {
                    "type": "string",
                    "description": "file URL"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/downloadable-data-sample-extension-interface"
                }
            },
            "required": [
                "title",
                "sort_order",
                "sample_type"
            ]
        },
        "downloadable-data-sample-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\SampleInterface"
        },
        "gift-card-data-giftcard-amount-interface": {
            "type": "object",
            "description": "Interface GiftcardAmountInterface: this interface is used to serialize and deserialize EAV attribute giftcard_amounts",
            "properties": {
                "attribute_id": {
                    "type": "integer",
                    "description": "AttributeId"
                },
                "website_id": {
                    "type": "integer",
                    "description": "WebsiteId"
                },
                "value": {
                    "type": "number",
                    "description": "Value"
                },
                "website_value": {
                    "type": "number",
                    "description": "WebsiteValue"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/gift-card-data-giftcard-amount-extension-interface"
                }
            },
            "required": [
                "attribute_id",
                "website_id",
                "value",
                "website_value"
            ]
        },
        "gift-card-data-giftcard-amount-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftcardAmountInterface"
        },
        "catalog-data-product-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "sku": {
                    "type": "string",
                    "description": "SKU"
                },
                "link_type": {
                    "type": "string",
                    "description": "Link type"
                },
                "linked_product_sku": {
                    "type": "string",
                    "description": "Linked product sku"
                },
                "linked_product_type": {
                    "type": "string",
                    "description": "Linked product type (simple, virtual, etc)"
                },
                "position": {
                    "type": "integer",
                    "description": "Linked item position"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-link-extension-interface"
                }
            },
            "required": [
                "sku",
                "link_type",
                "linked_product_sku",
                "linked_product_type",
                "position"
            ]
        },
        "catalog-data-product-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkInterface",
            "properties": {
                "qty": {
                    "type": "number"
                }
            }
        },
        "catalog-data-product-custom-option-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "product_sku": {
                    "type": "string",
                    "description": "Product SKU"
                },
                "option_id": {
                    "type": "integer",
                    "description": "Option id"
                },
                "title": {
                    "type": "string",
                    "description": "Option title"
                },
                "type": {
                    "type": "string",
                    "description": "Option type"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Sort order"
                },
                "is_require": {
                    "type": "boolean",
                    "description": "Is require"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "price_type": {
                    "type": "string",
                    "description": "Price type"
                },
                "sku": {
                    "type": "string",
                    "description": "Sku"
                },
                "file_extension": {
                    "type": "string",
                    "description": "File extension"
                },
                "max_characters": {
                    "type": "integer",
                    "description": "Max characters"
                },
                "image_size_x": {
                    "type": "integer",
                    "description": "Image x size"
                },
                "image_size_y": {
                    "type": "integer",
                    "description": "Image Y size"
                },
                "values": {
                    "type": "array",
                    "description": "Values",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-custom-option-values-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-custom-option-extension-interface"
                }
            },
            "required": [
                "product_sku",
                "title",
                "type",
                "sort_order",
                "is_require"
            ]
        },
        "catalog-data-product-custom-option-values-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Option title"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Sort order"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "price_type": {
                    "type": "string",
                    "description": "Price type"
                },
                "sku": {
                    "type": "string",
                    "description": "Sku"
                },
                "option_type_id": {
                    "type": "integer",
                    "description": "Option type id"
                }
            },
            "required": [
                "title",
                "sort_order",
                "price",
                "price_type"
            ]
        },
        "catalog-data-product-custom-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionInterface"
        },
        "catalog-data-product-attribute-media-gallery-entry-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Gallery entry ID"
                },
                "media_type": {
                    "type": "string",
                    "description": "Media type"
                },
                "label": {
                    "type": "string",
                    "description": "Gallery entry alternative text"
                },
                "position": {
                    "type": "integer",
                    "description": "Gallery entry position (sort order)"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "If gallery entry is hidden from product page"
                },
                "types": {
                    "type": "array",
                    "description": "Gallery entry image types (thumbnail, image, small_image etc)",
                    "items": {
                        "type": "string"
                    }
                },
                "file": {
                    "type": "string",
                    "description": "File path"
                },
                "content": {
                    "$ref": "#/definitions/framework-data-image-content-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-extension-interface"
                }
            },
            "required": [
                "media_type",
                "label",
                "position",
                "disabled",
                "types"
            ]
        },
        "framework-data-image-content-interface": {
            "type": "object",
            "description": "Image Content data interface",
            "properties": {
                "base64_encoded_data": {
                    "type": "string",
                    "description": "Media data (base64 encoded content)"
                },
                "type": {
                    "type": "string",
                    "description": "MIME type"
                },
                "name": {
                    "type": "string",
                    "description": "Image name"
                }
            },
            "required": [
                "base64_encoded_data",
                "type",
                "name"
            ]
        },
        "catalog-data-product-attribute-media-gallery-entry-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeMediaGalleryEntryInterface",
            "properties": {
                "video_content": {
                    "$ref": "#/definitions/framework-data-video-content-interface"
                },
                "asset_image": {
                    "$ref": "#/definitions/adobe-assets-integration-data-asset-image-interface"
                },
                "asset_video": {
                    "$ref": "#/definitions/adobe-assets-integration-data-asset-video-interface"
                }
            }
        },
        "framework-data-video-content-interface": {
            "type": "object",
            "description": "Video Content data interface",
            "properties": {
                "media_type": {
                    "type": "string",
                    "description": "MIME type"
                },
                "video_provider": {
                    "type": "string",
                    "description": "Provider"
                },
                "video_url": {
                    "type": "string",
                    "description": "Video URL"
                },
                "video_title": {
                    "type": "string",
                    "description": "Title"
                },
                "video_description": {
                    "type": "string",
                    "description": "Video Description"
                },
                "video_metadata": {
                    "type": "string",
                    "description": "Metadata"
                }
            },
            "required": [
                "media_type",
                "video_provider",
                "video_url",
                "video_title",
                "video_description",
                "video_metadata"
            ]
        },
        "adobe-assets-integration-data-asset-image-interface": {
            "type": "object",
            "description": "Asset image data interface",
            "properties": {
                "media_type": {
                    "type": "string",
                    "description": "MIME type"
                },
                "media_url": {
                    "type": "string",
                    "description": "Media URL"
                },
                "asset_id": {
                    "type": "string",
                    "description": "Asset Id"
                }
            },
            "required": [
                "media_type",
                "media_url",
                "asset_id"
            ]
        },
        "adobe-assets-integration-data-asset-video-interface": {
            "type": "object",
            "description": "Asset video data interface",
            "properties": {
                "media_type": {
                    "type": "string",
                    "description": "MIME type"
                },
                "video_media_url": {
                    "type": "string",
                    "description": "Video URL"
                },
                "video_asset_id": {
                    "type": "string",
                    "description": "Asset Id"
                }
            },
            "required": [
                "media_type",
                "video_media_url",
                "video_asset_id"
            ]
        },
        "catalog-data-product-tier-price-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "customer_group_id": {
                    "type": "integer",
                    "description": "Customer group id"
                },
                "qty": {
                    "type": "number",
                    "description": "Tier qty"
                },
                "value": {
                    "type": "number",
                    "description": "Price value"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-tier-price-extension-interface"
                }
            },
            "required": [
                "customer_group_id",
                "qty",
                "value"
            ]
        },
        "catalog-data-product-tier-price-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTierPriceInterface",
            "properties": {
                "percentage_value": {
                    "type": "number"
                },
                "website_id": {
                    "type": "integer"
                }
            }
        },
        "catalog-data-product-search-results-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Attributes list.",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "catalog-data-product-attribute-type-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Value"
                },
                "label": {
                    "type": "string",
                    "description": "Type label"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-attribute-type-extension-interface"
                }
            },
            "required": [
                "value",
                "label"
            ]
        },
        "catalog-data-product-attribute-type-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeTypeInterface"
        },
        "catalog-data-product-attribute-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/eav-data-attribute-extension-interface"
                },
                "is_wysiwyg_enabled": {
                    "type": "boolean",
                    "description": "WYSIWYG flag"
                },
                "is_html_allowed_on_front": {
                    "type": "boolean",
                    "description": "The HTML tags are allowed on the frontend"
                },
                "used_for_sort_by": {
                    "type": "boolean",
                    "description": "It is used for sorting in product listing"
                },
                "is_filterable": {
                    "type": "boolean",
                    "description": "It used in layered navigation"
                },
                "is_filterable_in_search": {
                    "type": "boolean",
                    "description": "It is used in search results layered navigation"
                },
                "is_used_in_grid": {
                    "type": "boolean",
                    "description": "It is used in catalog product grid"
                },
                "is_visible_in_grid": {
                    "type": "boolean",
                    "description": "It is visible in catalog product grid"
                },
                "is_filterable_in_grid": {
                    "type": "boolean",
                    "description": "It is filterable in catalog product grid"
                },
                "position": {
                    "type": "integer",
                    "description": "Position"
                },
                "apply_to": {
                    "type": "array",
                    "description": "Apply to value for the element",
                    "items": {
                        "type": "string"
                    }
                },
                "is_searchable": {
                    "type": "string",
                    "description": "The attribute can be used in Quick Search"
                },
                "is_visible_in_advanced_search": {
                    "type": "string",
                    "description": "The attribute can be used in Advanced Search"
                },
                "is_comparable": {
                    "type": "string",
                    "description": "The attribute can be compared on the frontend"
                },
                "is_used_for_promo_rules": {
                    "type": "string",
                    "description": "The attribute can be used for promo rules"
                },
                "is_visible_on_front": {
                    "type": "string",
                    "description": "The attribute is visible on the frontend"
                },
                "used_in_product_listing": {
                    "type": "string",
                    "description": "The attribute can be used in product listing"
                },
                "is_visible": {
                    "type": "boolean",
                    "description": "Attribute is visible on frontend."
                },
                "scope": {
                    "type": "string",
                    "description": "Attribute scope"
                },
                "attribute_id": {
                    "type": "integer",
                    "description": "Id of the attribute."
                },
                "attribute_code": {
                    "type": "string",
                    "description": "Code of the attribute."
                },
                "frontend_input": {
                    "type": "string",
                    "description": "HTML for input element."
                },
                "entity_type_id": {
                    "type": "string",
                    "description": "Entity type id"
                },
                "is_required": {
                    "type": "boolean",
                    "description": "Attribute is required."
                },
                "options": {
                    "type": "array",
                    "description": "Options of the attribute (key => value pairs for select)",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-option-interface"
                    }
                },
                "is_user_defined": {
                    "type": "boolean",
                    "description": "Current attribute has been defined by a user."
                },
                "default_frontend_label": {
                    "type": "string",
                    "description": "Frontend label for default store"
                },
                "frontend_labels": {
                    "type": "array",
                    "description": "Frontend label for each store",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-frontend-label-interface"
                    }
                },
                "note": {
                    "type": "string",
                    "description": "The note attribute for the element."
                },
                "backend_type": {
                    "type": "string",
                    "description": "Backend type."
                },
                "backend_model": {
                    "type": "string",
                    "description": "Backend model"
                },
                "source_model": {
                    "type": "string",
                    "description": "Source model"
                },
                "default_value": {
                    "type": "string",
                    "description": "Default value for the element."
                },
                "is_unique": {
                    "type": "string",
                    "description": "This is a unique attribute"
                },
                "frontend_class": {
                    "type": "string",
                    "description": "Frontend class of attribute"
                },
                "validation_rules": {
                    "type": "array",
                    "description": "Validation rules.",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-validation-rule-interface"
                    }
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "attribute_code",
                "frontend_input",
                "entity_type_id",
                "is_required",
                "frontend_labels"
            ]
        },
        "eav-data-attribute-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeInterface"
        },
        "eav-data-attribute-option-interface": {
            "type": "object",
            "description": "Created from:",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Option label"
                },
                "value": {
                    "type": "string",
                    "description": "Option value"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Option order"
                },
                "is_default": {
                    "type": "boolean",
                    "description": "Default"
                },
                "store_labels": {
                    "type": "array",
                    "description": "Option label for store scopes",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-option-label-interface"
                    }
                }
            },
            "required": [
                "label",
                "value"
            ]
        },
        "eav-data-attribute-option-label-interface": {
            "type": "object",
            "description": "Interface AttributeOptionLabelInterface",
            "properties": {
                "store_id": {
                    "type": "integer",
                    "description": "Store id"
                },
                "label": {
                    "type": "string",
                    "description": "Option label"
                }
            }
        },
        "eav-data-attribute-frontend-label-interface": {
            "type": "object",
            "description": "Interface AttributeFrontendLabelInterface",
            "properties": {
                "store_id": {
                    "type": "integer",
                    "description": "Store id"
                },
                "label": {
                    "type": "string",
                    "description": "Option label"
                }
            }
        },
        "eav-data-attribute-validation-rule-interface": {
            "type": "object",
            "description": "Interface AttributeValidationRuleInterface",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Object key"
                },
                "value": {
                    "type": "string",
                    "description": "Object value"
                }
            },
            "required": [
                "key",
                "value"
            ]
        },
        "catalog-data-product-attribute-search-results-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Attributes list.",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-attribute-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "catalog-data-category-attribute-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "is_wysiwyg_enabled": {
                    "type": "boolean",
                    "description": "WYSIWYG flag"
                },
                "is_html_allowed_on_front": {
                    "type": "boolean",
                    "description": "The HTML tags are allowed on the frontend"
                },
                "used_for_sort_by": {
                    "type": "boolean",
                    "description": "It is used for sorting in product listing"
                },
                "is_filterable": {
                    "type": "boolean",
                    "description": "It used in layered navigation"
                },
                "is_filterable_in_search": {
                    "type": "boolean",
                    "description": "It is used in search results layered navigation"
                },
                "is_used_in_grid": {
                    "type": "boolean",
                    "description": "It is used in catalog product grid"
                },
                "is_visible_in_grid": {
                    "type": "boolean",
                    "description": "It is visible in catalog product grid"
                },
                "is_filterable_in_grid": {
                    "type": "boolean",
                    "description": "It is filterable in catalog product grid"
                },
                "position": {
                    "type": "integer",
                    "description": "Position"
                },
                "apply_to": {
                    "type": "array",
                    "description": "Apply to value for the element",
                    "items": {
                        "type": "string"
                    }
                },
                "is_searchable": {
                    "type": "string",
                    "description": "The attribute can be used in Quick Search"
                },
                "is_visible_in_advanced_search": {
                    "type": "string",
                    "description": "The attribute can be used in Advanced Search"
                },
                "is_comparable": {
                    "type": "string",
                    "description": "The attribute can be compared on the frontend"
                },
                "is_used_for_promo_rules": {
                    "type": "string",
                    "description": "The attribute can be used for promo rules"
                },
                "is_visible_on_front": {
                    "type": "string",
                    "description": "The attribute is visible on the frontend"
                },
                "used_in_product_listing": {
                    "type": "string",
                    "description": "The attribute can be used in product listing"
                },
                "is_visible": {
                    "type": "boolean",
                    "description": "Attribute is visible on frontend."
                },
                "scope": {
                    "type": "string",
                    "description": "Attribute scope"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-eav-attribute-extension-interface"
                },
                "attribute_id": {
                    "type": "integer",
                    "description": "Id of the attribute."
                },
                "attribute_code": {
                    "type": "string",
                    "description": "Code of the attribute."
                },
                "frontend_input": {
                    "type": "string",
                    "description": "HTML for input element."
                },
                "entity_type_id": {
                    "type": "string",
                    "description": "Entity type id"
                },
                "is_required": {
                    "type": "boolean",
                    "description": "Attribute is required."
                },
                "options": {
                    "type": "array",
                    "description": "Options of the attribute (key => value pairs for select)",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-option-interface"
                    }
                },
                "is_user_defined": {
                    "type": "boolean",
                    "description": "Current attribute has been defined by a user."
                },
                "default_frontend_label": {
                    "type": "string",
                    "description": "Frontend label for default store"
                },
                "frontend_labels": {
                    "type": "array",
                    "description": "Frontend label for each store",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-frontend-label-interface"
                    }
                },
                "note": {
                    "type": "string",
                    "description": "The note attribute for the element."
                },
                "backend_type": {
                    "type": "string",
                    "description": "Backend type."
                },
                "backend_model": {
                    "type": "string",
                    "description": "Backend model"
                },
                "source_model": {
                    "type": "string",
                    "description": "Source model"
                },
                "default_value": {
                    "type": "string",
                    "description": "Default value for the element."
                },
                "is_unique": {
                    "type": "string",
                    "description": "This is a unique attribute"
                },
                "frontend_class": {
                    "type": "string",
                    "description": "Frontend class of attribute"
                },
                "validation_rules": {
                    "type": "array",
                    "description": "Validation rules.",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-validation-rule-interface"
                    }
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "attribute_code",
                "frontend_input",
                "entity_type_id",
                "is_required",
                "frontend_labels"
            ]
        },
        "catalog-data-eav-attribute-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\EavAttributeInterface"
        },
        "catalog-data-category-attribute-search-results-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Attributes list.",
                    "items": {
                        "$ref": "#/definitions/catalog-data-category-attribute-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "catalog-data-product-type-interface": {
            "type": "object",
            "description": "Product type details",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Product type code"
                },
                "label": {
                    "type": "string",
                    "description": "Product type label"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-type-extension-interface"
                }
            },
            "required": [
                "name",
                "label"
            ]
        },
        "catalog-data-product-type-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTypeInterface"
        },
        "eav-data-attribute-group-search-results-interface": {
            "type": "object",
            "description": "Interface AttributeGroupSearchResultsInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Attribute sets list.",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-group-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "eav-data-attribute-group-interface": {
            "type": "object",
            "description": "Interface AttributeGroupInterface",
            "properties": {
                "attribute_group_id": {
                    "type": "string",
                    "description": "Id"
                },
                "attribute_group_name": {
                    "type": "string",
                    "description": "Name"
                },
                "attribute_set_id": {
                    "type": "integer",
                    "description": "Attribute set id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/eav-data-attribute-group-extension-interface"
                }
            }
        },
        "eav-data-attribute-group-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeGroupInterface",
            "properties": {
                "attribute_group_code": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "string"
                }
            }
        },
        "catalog-data-tier-price-interface": {
            "type": "object",
            "description": "Tier price interface.",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Tier price."
                },
                "price_type": {
                    "type": "string",
                    "description": "Tier price type."
                },
                "website_id": {
                    "type": "integer",
                    "description": "Website id."
                },
                "sku": {
                    "type": "string",
                    "description": "SKU."
                },
                "customer_group": {
                    "type": "string",
                    "description": "Customer group."
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-tier-price-extension-interface"
                }
            },
            "required": [
                "price",
                "price_type",
                "website_id",
                "sku",
                "customer_group",
                "quantity"
            ]
        },
        "catalog-data-tier-price-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\TierPriceInterface"
        },
        "catalog-data-price-update-result-interface": {
            "type": "object",
            "description": "Interface returned in case of incorrect price passed to efficient price API.",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Error message, that contains description of error occurred during price update."
                },
                "parameters": {
                    "type": "array",
                    "description": "Parameters, that could be displayed in error message placeholders.",
                    "items": {
                        "type": "string"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-price-update-result-extension-interface"
                }
            },
            "required": [
                "message",
                "parameters"
            ]
        },
        "catalog-data-price-update-result-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface"
        },
        "catalog-data-base-price-interface": {
            "type": "object",
            "description": "Price interface.",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Price."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store id."
                },
                "sku": {
                    "type": "string",
                    "description": "SKU."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-base-price-extension-interface"
                }
            },
            "required": [
                "price",
                "store_id",
                "sku"
            ]
        },
        "catalog-data-base-price-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\BasePriceInterface"
        },
        "catalog-data-cost-interface": {
            "type": "object",
            "description": "Cost interface.",
            "properties": {
                "cost": {
                    "type": "number",
                    "description": "Cost value."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store id."
                },
                "sku": {
                    "type": "string",
                    "description": "SKU."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-cost-extension-interface"
                }
            },
            "required": [
                "cost",
                "store_id",
                "sku"
            ]
        },
        "catalog-data-cost-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CostInterface"
        },
        "catalog-data-special-price-interface": {
            "type": "object",
            "description": "Product Special Price Interface is used to encapsulate data that can be processed by efficient price API.",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Product special price value."
                },
                "store_id": {
                    "type": "integer",
                    "description": "ID of store, that contains special price value."
                },
                "sku": {
                    "type": "string",
                    "description": "SKU of product, that contains special price value."
                },
                "price_from": {
                    "type": "string",
                    "description": "Start date for special price in Y-m-d H:i:s format."
                },
                "price_to": {
                    "type": "string",
                    "description": "End date for special price in Y-m-d H:i:s format."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-special-price-extension-interface"
                }
            },
            "required": [
                "price",
                "store_id",
                "sku",
                "price_from",
                "price_to"
            ]
        },
        "catalog-data-special-price-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\SpecialPriceInterface"
        },
        "catalog-data-category-interface": {
            "type": "object",
            "description": "Category data interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Category id."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent category ID"
                },
                "name": {
                    "type": "string",
                    "description": "Category name"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Whether category is active"
                },
                "position": {
                    "type": "integer",
                    "description": "Category position"
                },
                "level": {
                    "type": "integer",
                    "description": "Category level"
                },
                "children": {
                    "type": "string",
                    "description": "Children ids comma separated."
                },
                "created_at": {
                    "type": "string",
                    "description": "Category creation date and time."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Category last update date and time."
                },
                "path": {
                    "type": "string",
                    "description": "Category full path."
                },
                "available_sort_by": {
                    "type": "array",
                    "description": "Available sort by for category.",
                    "items": {
                        "type": "string"
                    }
                },
                "include_in_menu": {
                    "type": "boolean",
                    "description": "Category is included in menu."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-category-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            }
        },
        "catalog-data-category-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryInterface"
        },
        "catalog-data-category-tree-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent category ID"
                },
                "name": {
                    "type": "string",
                    "description": "Category name"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Whether category is active"
                },
                "position": {
                    "type": "integer",
                    "description": "Category position"
                },
                "level": {
                    "type": "integer",
                    "description": "Category level"
                },
                "product_count": {
                    "type": "integer",
                    "description": "Product count"
                },
                "children_data": {
                    "type": "array",
                    "description": "Children Data",
                    "items": {
                        "$ref": "#/definitions/catalog-data-category-tree-interface"
                    }
                }
            },
            "required": [
                "parent_id",
                "name",
                "is_active",
                "position",
                "level",
                "product_count",
                "children_data"
            ]
        },
        "catalog-data-category-search-results-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Categories",
                    "items": {
                        "$ref": "#/definitions/catalog-data-category-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "catalog-data-product-custom-option-type-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Option type label"
                },
                "code": {
                    "type": "string",
                    "description": "Option type code"
                },
                "group": {
                    "type": "string",
                    "description": "Option type group"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-custom-option-type-extension-interface"
                }
            },
            "required": [
                "label",
                "code",
                "group"
            ]
        },
        "catalog-data-product-custom-option-type-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionTypeInterface"
        },
        "catalog-data-product-link-type-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Link type code"
                },
                "name": {
                    "type": "string",
                    "description": "Link type name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-link-type-extension-interface"
                }
            },
            "required": [
                "code",
                "name"
            ]
        },
        "catalog-data-product-link-type-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkTypeInterface"
        },
        "catalog-data-product-link-attribute-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Attribute code"
                },
                "type": {
                    "type": "string",
                    "description": "Attribute type"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-link-attribute-extension-interface"
                }
            },
            "required": [
                "code",
                "type"
            ]
        },
        "catalog-data-product-link-attribute-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkAttributeInterface"
        },
        "catalog-data-category-product-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "sku": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "string",
                    "description": "Category id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-category-product-link-extension-interface"
                }
            },
            "required": [
                "category_id"
            ]
        },
        "catalog-data-category-product-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryProductLinkInterface"
        },
        "catalog-data-product-website-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "sku": {
                    "type": "string"
                },
                "website_id": {
                    "type": "integer",
                    "description": "Website ids"
                }
            },
            "required": [
                "sku",
                "website_id"
            ]
        },
        "quote-data-cart-interface": {
            "type": "object",
            "description": "Interface CartInterface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Cart/quote ID."
                },
                "created_at": {
                    "type": "string",
                    "description": "Cart creation date and time. Otherwise, null."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Cart last update date and time. Otherwise, null."
                },
                "converted_at": {
                    "type": "string",
                    "description": "Cart conversion date and time. Otherwise, null."
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Active status flag value. Otherwise, null."
                },
                "is_virtual": {
                    "type": "boolean",
                    "description": "Virtual flag value. Otherwise, null."
                },
                "items": {
                    "type": "array",
                    "description": "Array of items. Otherwise, null.",
                    "items": {
                        "$ref": "#/definitions/quote-data-cart-item-interface"
                    }
                },
                "items_count": {
                    "type": "integer",
                    "description": "Number of different items or products in the cart. Otherwise, null."
                },
                "items_qty": {
                    "type": "number",
                    "description": "Total quantity of all cart items. Otherwise, null."
                },
                "customer": {
                    "$ref": "#/definitions/customer-data-customer-interface"
                },
                "billing_address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "reserved_order_id": {
                    "type": "string",
                    "description": "Reserved order ID. Otherwise, null."
                },
                "orig_order_id": {
                    "type": "integer",
                    "description": "Original order ID. Otherwise, null."
                },
                "currency": {
                    "$ref": "#/definitions/quote-data-currency-interface"
                },
                "customer_is_guest": {
                    "type": "boolean",
                    "description": "For guest customers, false for logged in customers"
                },
                "customer_note": {
                    "type": "string",
                    "description": "Notice text"
                },
                "customer_note_notify": {
                    "type": "boolean",
                    "description": "Customer notification flag"
                },
                "customer_tax_class_id": {
                    "type": "integer",
                    "description": "Customer tax class ID."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store identifier"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-cart-extension-interface"
                }
            },
            "required": [
                "id",
                "customer",
                "store_id"
            ]
        },
        "quote-data-cart-item-interface": {
            "type": "object",
            "description": "Interface CartItemInterface",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "description": "Item ID. Otherwise, null."
                },
                "sku": {
                    "type": "string",
                    "description": "Product SKU. Otherwise, null."
                },
                "qty": {
                    "type": "number",
                    "description": "Product quantity."
                },
                "name": {
                    "type": "string",
                    "description": "Product name. Otherwise, null."
                },
                "price": {
                    "type": "number",
                    "description": "Product price. Otherwise, null."
                },
                "product_type": {
                    "type": "string",
                    "description": "Product type. Otherwise, null."
                },
                "quote_id": {
                    "type": "string",
                    "description": "Quote id."
                },
                "product_option": {
                    "$ref": "#/definitions/quote-data-product-option-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-cart-item-extension-interface"
                }
            },
            "required": [
                "qty",
                "quote_id"
            ]
        },
        "quote-data-product-option-interface": {
            "type": "object",
            "description": "Product option interface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-product-option-extension-interface"
                }
            }
        },
        "quote-data-product-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface",
            "properties": {
                "custom_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-custom-option-interface"
                    }
                },
                "bundle_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bundle-data-bundle-option-interface"
                    }
                },
                "configurable_item_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-configurable-item-option-value-interface"
                    }
                },
                "downloadable_option": {
                    "$ref": "#/definitions/downloadable-data-downloadable-option-interface"
                },
                "giftcard_item_option": {
                    "$ref": "#/definitions/gift-card-data-gift-card-option-interface"
                },
                "grouped_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grouped-product-data-grouped-options-interface"
                    }
                }
            }
        },
        "catalog-data-custom-option-interface": {
            "type": "object",
            "description": "Interface CustomOptionInterface",
            "properties": {
                "option_id": {
                    "type": "string",
                    "description": "Option id"
                },
                "option_value": {
                    "type": "string",
                    "description": "Option value"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-custom-option-extension-interface"
                }
            },
            "required": [
                "option_id",
                "option_value"
            ]
        },
        "catalog-data-custom-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface",
            "properties": {
                "file_info": {
                    "$ref": "#/definitions/framework-data-image-content-interface"
                }
            }
        },
        "bundle-data-bundle-option-interface": {
            "type": "object",
            "description": "Interface BundleOptionInterface",
            "properties": {
                "option_id": {
                    "type": "integer",
                    "description": "Bundle option id."
                },
                "option_qty": {
                    "type": "integer",
                    "description": "Bundle option quantity."
                },
                "option_selections": {
                    "type": "array",
                    "description": "Bundle option selection ids.",
                    "items": {
                        "type": "integer"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-bundle-option-extension-interface"
                }
            },
            "required": [
                "option_id",
                "option_qty",
                "option_selections"
            ]
        },
        "bundle-data-bundle-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\BundleOptionInterface"
        },
        "configurable-product-data-configurable-item-option-value-interface": {
            "type": "object",
            "description": "Interface ConfigurableItemOptionValueInterface",
            "properties": {
                "option_id": {
                    "type": "string",
                    "description": "Option SKU"
                },
                "option_value": {
                    "type": "integer",
                    "description": "Item id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/configurable-product-data-configurable-item-option-value-extension-interface"
                }
            },
            "required": [
                "option_id"
            ]
        },
        "configurable-product-data-configurable-item-option-value-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\ConfigurableItemOptionValueInterface"
        },
        "downloadable-data-downloadable-option-interface": {
            "type": "object",
            "description": "Downloadable Option",
            "properties": {
                "downloadable_links": {
                    "type": "array",
                    "description": "The list of downloadable links",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "required": [
                "downloadable_links"
            ]
        },
        "gift-card-data-gift-card-option-interface": {
            "type": "object",
            "description": "Interface GiftCardOptionInterface",
            "properties": {
                "giftcard_amount": {
                    "type": "string",
                    "description": "Gift card amount."
                },
                "custom_giftcard_amount": {
                    "type": "number",
                    "description": "Gift card open amount value."
                },
                "giftcard_sender_name": {
                    "type": "string",
                    "description": "Gift card sender name."
                },
                "giftcard_recipient_name": {
                    "type": "string",
                    "description": "Gift card recipient name."
                },
                "giftcard_sender_email": {
                    "type": "string",
                    "description": "Gift card sender email."
                },
                "giftcard_recipient_email": {
                    "type": "string",
                    "description": "Gift card recipient email."
                },
                "giftcard_message": {
                    "type": "string",
                    "description": "Giftcard message."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/gift-card-data-gift-card-option-extension-interface"
                }
            },
            "required": [
                "giftcard_amount",
                "giftcard_sender_name",
                "giftcard_recipient_name",
                "giftcard_sender_email",
                "giftcard_recipient_email"
            ]
        },
        "gift-card-data-gift-card-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface",
            "properties": {
                "giftcard_created_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "grouped-product-data-grouped-options-interface": {
            "type": "object",
            "description": "Represents `product item id with qty` of a grouped product.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Associated product id"
                },
                "qty": {
                    "type": "integer",
                    "description": "Associated product qty"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/grouped-product-data-grouped-options-extension-interface"
                }
            }
        },
        "grouped-product-data-grouped-options-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GroupedProduct\\Api\\Data\\GroupedOptionsInterface"
        },
        "quote-data-cart-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartItemInterface",
            "properties": {
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sales-rule-data-rule-discount-interface"
                    }
                },
                "negotiable_quote_item": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-item-interface"
                }
            }
        },
        "negotiable-quote-data-negotiable-quote-item-interface": {
            "type": "object",
            "description": "Interface CompanyQuoteConfigInterface",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "description": "Quote item id"
                },
                "original_price": {
                    "type": "number",
                    "description": "Quote item original price"
                },
                "original_tax_amount": {
                    "type": "number",
                    "description": "Quote item original tax amount"
                },
                "original_discount_amount": {
                    "type": "number",
                    "description": "Quote item original discount amount"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-item-extension-interface"
                }
            },
            "required": [
                "item_id",
                "original_price",
                "original_tax_amount",
                "original_discount_amount"
            ]
        },
        "negotiable-quote-data-negotiable-quote-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface",
            "properties": {
                "negotiated_price_type": {
                    "type": "integer"
                },
                "negotiated_price_value": {
                    "type": "number"
                },
                "last_item_notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/negotiable-quote-data-item-note-interface"
                    }
                },
                "is_discounting_locked": {
                    "type": "boolean"
                },
                "min_qty": {
                    "type": "number"
                },
                "max_qty": {
                    "type": "number"
                }
            }
        },
        "negotiable-quote-data-item-note-interface": {
            "type": "object",
            "description": "Interface ItemNoteInterface",
            "properties": {
                "note_id": {
                    "type": "integer",
                    "description": "Note ID."
                },
                "negotiable_quote_item_id": {
                    "type": "integer",
                    "description": "Negotiable quote item Id"
                },
                "creator_type": {
                    "type": "integer",
                    "description": "The note creator type."
                },
                "creator_id": {
                    "type": "integer",
                    "description": "Note creator ID."
                },
                "note": {
                    "type": "string",
                    "description": "Note."
                },
                "created_at": {
                    "type": "string",
                    "description": "Comment created at."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-item-note-extension-interface"
                }
            },
            "required": [
                "negotiable_quote_item_id",
                "creator_type",
                "creator_id",
                "note"
            ]
        },
        "negotiable-quote-data-item-note-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\ItemNoteInterface"
        },
        "quote-data-address-interface": {
            "type": "object",
            "description": "Interface AddressInterface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "region": {
                    "type": "string",
                    "description": "Region name"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region id"
                },
                "region_code": {
                    "type": "string",
                    "description": "Region code"
                },
                "country_id": {
                    "type": "string",
                    "description": "Country id"
                },
                "street": {
                    "type": "array",
                    "description": "Street",
                    "items": {
                        "type": "string"
                    }
                },
                "company": {
                    "type": "string",
                    "description": "Company"
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone number"
                },
                "fax": {
                    "type": "string",
                    "description": "Fax number"
                },
                "postcode": {
                    "type": "string",
                    "description": "Postcode"
                },
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix"
                },
                "vat_id": {
                    "type": "string",
                    "description": "Vat id"
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer id"
                },
                "email": {
                    "type": "string",
                    "description": "Billing/shipping email"
                },
                "same_as_billing": {
                    "type": "integer",
                    "description": "Same as billing flag"
                },
                "customer_address_id": {
                    "type": "integer",
                    "description": "Customer address id"
                },
                "save_in_address_book": {
                    "type": "integer",
                    "description": "Save in address book flag"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-address-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "region",
                "region_id",
                "region_code",
                "country_id",
                "street",
                "telephone",
                "postcode",
                "city",
                "firstname",
                "lastname",
                "email"
            ]
        },
        "quote-data-address-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface",
            "properties": {
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sales-rule-data-rule-discount-interface"
                    }
                },
                "gift_registry_id": {
                    "type": "integer"
                },
                "pickup_location_code": {
                    "type": "string"
                }
            }
        },
        "quote-data-currency-interface": {
            "type": "object",
            "description": "Interface CurrencyInterface",
            "properties": {
                "global_currency_code": {
                    "type": "string",
                    "description": "Global currency code"
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code"
                },
                "store_currency_code": {
                    "type": "string",
                    "description": "Store currency code"
                },
                "quote_currency_code": {
                    "type": "string",
                    "description": "Quote currency code"
                },
                "store_to_base_rate": {
                    "type": "number",
                    "description": "Store currency to base currency rate"
                },
                "store_to_quote_rate": {
                    "type": "number",
                    "description": "Store currency to quote currency rate"
                },
                "base_to_global_rate": {
                    "type": "number",
                    "description": "Base currency to global currency rate"
                },
                "base_to_quote_rate": {
                    "type": "number",
                    "description": "Base currency to quote currency rate"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-currency-extension-interface"
                }
            }
        },
        "quote-data-currency-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface"
        },
        "quote-data-cart-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface",
            "properties": {
                "shipping_assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/quote-data-shipping-assignment-interface"
                    }
                },
                "negotiable_quote": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-interface"
                },
                "company_id": {
                    "type": "integer"
                },
                "coupon_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "quote-data-shipping-assignment-interface": {
            "type": "object",
            "description": "Interface ShippingAssignmentInterface",
            "properties": {
                "shipping": {
                    "$ref": "#/definitions/quote-data-shipping-interface"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/quote-data-cart-item-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-shipping-assignment-extension-interface"
                }
            },
            "required": [
                "shipping",
                "items"
            ]
        },
        "quote-data-shipping-interface": {
            "type": "object",
            "description": "Interface ShippingInterface",
            "properties": {
                "address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "method": {
                    "type": "string",
                    "description": "Shipping method"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-shipping-extension-interface"
                }
            },
            "required": [
                "address",
                "method"
            ]
        },
        "quote-data-shipping-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface"
        },
        "quote-data-shipping-assignment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface"
        },
        "negotiable-quote-data-negotiable-quote-interface": {
            "type": "object",
            "description": "Interface NegotiableQuoteInterface",
            "properties": {
                "quote_id": {
                    "type": "integer",
                    "description": "Negotiable quote ID."
                },
                "is_regular_quote": {
                    "type": "boolean",
                    "description": "Is regular quote."
                },
                "status": {
                    "type": "string",
                    "description": "Negotiable quote status."
                },
                "negotiated_price_type": {
                    "type": "integer",
                    "description": "Negotiated price type."
                },
                "negotiated_price_value": {
                    "type": "number",
                    "description": "Negotiated price value."
                },
                "shipping_price": {
                    "type": "number",
                    "description": "Proposed shipping price."
                },
                "quote_name": {
                    "type": "string",
                    "description": "Negotiable quote name."
                },
                "expiration_period": {
                    "type": "string",
                    "description": "Expiration period."
                },
                "email_notification_status": {
                    "type": "integer",
                    "description": "Email notification status."
                },
                "has_unconfirmed_changes": {
                    "type": "boolean",
                    "description": "Has unconfirmed changes."
                },
                "is_shipping_tax_changed": {
                    "type": "boolean",
                    "description": "Shipping tax changes."
                },
                "is_customer_price_changed": {
                    "type": "boolean",
                    "description": "Customer price changes."
                },
                "notifications": {
                    "type": "integer",
                    "description": "Quote notifications."
                },
                "applied_rule_ids": {
                    "type": "string",
                    "description": "Quote rules."
                },
                "is_address_draft": {
                    "type": "boolean",
                    "description": "Is address draft."
                },
                "deleted_sku": {
                    "type": "string",
                    "description": "Deleted products sku."
                },
                "creator_id": {
                    "type": "integer",
                    "description": "Quote creator id."
                },
                "creator_type": {
                    "type": "integer",
                    "description": "Quote creator type."
                },
                "original_total_price": {
                    "type": "number",
                    "description": "Quote original total price."
                },
                "base_original_total_price": {
                    "type": "number",
                    "description": "Quote original total price in base currency."
                },
                "negotiated_total_price": {
                    "type": "number",
                    "description": "Quote negotiated total price."
                },
                "base_negotiated_total_price": {
                    "type": "number",
                    "description": "Quote negotiated total price in base currency."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-extension-interface"
                }
            },
            "required": [
                "quote_id",
                "is_regular_quote",
                "status",
                "negotiated_price_type",
                "negotiated_price_value",
                "shipping_price",
                "quote_name",
                "expiration_period",
                "email_notification_status",
                "has_unconfirmed_changes",
                "is_shipping_tax_changed",
                "is_customer_price_changed",
                "notifications",
                "applied_rule_ids",
                "is_address_draft",
                "deleted_sku",
                "creator_id",
                "creator_type"
            ]
        },
        "negotiable-quote-data-negotiable-quote-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteInterface"
        },
        "quote-data-cart-search-results-interface": {
            "type": "object",
            "description": "Interface CartSearchResultsInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Carts list.",
                    "items": {
                        "$ref": "#/definitions/quote-data-cart-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "quote-data-payment-interface": {
            "type": "object",
            "description": "Interface PaymentInterface",
            "properties": {
                "po_number": {
                    "type": "string",
                    "description": "Purchase order number"
                },
                "method": {
                    "type": "string",
                    "description": "Payment method code"
                },
                "additional_data": {
                    "type": "array",
                    "description": "Payment additional details",
                    "items": {
                        "type": "string"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-payment-extension-interface"
                }
            },
            "required": [
                "method"
            ]
        },
        "quote-data-payment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\PaymentInterface",
            "properties": {
                "agreement_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "quote-data-shipping-method-interface": {
            "type": "object",
            "description": "Interface ShippingMethodInterface",
            "properties": {
                "carrier_code": {
                    "type": "string",
                    "description": "Shipping carrier code."
                },
                "method_code": {
                    "type": "string",
                    "description": "Shipping method code."
                },
                "carrier_title": {
                    "type": "string",
                    "description": "Shipping carrier title. Otherwise, null."
                },
                "method_title": {
                    "type": "string",
                    "description": "Shipping method title. Otherwise, null."
                },
                "amount": {
                    "type": "number",
                    "description": "Shipping amount in store currency."
                },
                "base_amount": {
                    "type": "number",
                    "description": "Shipping amount in base currency."
                },
                "available": {
                    "type": "boolean",
                    "description": "The value of the availability flag for the current shipping method."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-shipping-method-extension-interface"
                },
                "error_message": {
                    "type": "string",
                    "description": "Shipping Error message."
                },
                "price_excl_tax": {
                    "type": "number",
                    "description": "Shipping price excl tax."
                },
                "price_incl_tax": {
                    "type": "number",
                    "description": "Shipping price incl tax."
                }
            },
            "required": [
                "carrier_code",
                "method_code",
                "amount",
                "base_amount",
                "available",
                "error_message",
                "price_excl_tax",
                "price_incl_tax"
            ]
        },
        "quote-data-shipping-method-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface"
        },
        "quote-data-payment-method-interface": {
            "type": "object",
            "description": "Interface PaymentMethodInterface",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Payment method code"
                },
                "title": {
                    "type": "string",
                    "description": "Payment method title"
                }
            },
            "required": [
                "code",
                "title"
            ]
        },
        "quote-data-totals-interface": {
            "type": "object",
            "description": "Interface TotalsInterface",
            "properties": {
                "grand_total": {
                    "type": "number",
                    "description": "Grand total in quote currency"
                },
                "base_grand_total": {
                    "type": "number",
                    "description": "Grand total in base currency"
                },
                "subtotal": {
                    "type": "number",
                    "description": "Subtotal in quote currency"
                },
                "base_subtotal": {
                    "type": "number",
                    "description": "Subtotal in base currency"
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount in quote currency"
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Discount amount in base currency"
                },
                "subtotal_with_discount": {
                    "type": "number",
                    "description": "Subtotal in quote currency with applied discount"
                },
                "base_subtotal_with_discount": {
                    "type": "number",
                    "description": "Subtotal in base currency with applied discount"
                },
                "shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount in quote currency"
                },
                "base_shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount in base currency"
                },
                "shipping_discount_amount": {
                    "type": "number",
                    "description": "Shipping discount amount in quote currency"
                },
                "base_shipping_discount_amount": {
                    "type": "number",
                    "description": "Shipping discount amount in base currency"
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount in quote currency"
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Tax amount in base currency"
                },
                "weee_tax_applied_amount": {
                    "type": "number",
                    "description": "Item weee tax applied amount in quote currency."
                },
                "shipping_tax_amount": {
                    "type": "number",
                    "description": "Shipping tax amount in quote currency"
                },
                "base_shipping_tax_amount": {
                    "type": "number",
                    "description": "Shipping tax amount in base currency"
                },
                "subtotal_incl_tax": {
                    "type": "number",
                    "description": "Subtotal including tax in quote currency"
                },
                "base_subtotal_incl_tax": {
                    "type": "number",
                    "description": "Subtotal including tax in base currency"
                },
                "shipping_incl_tax": {
                    "type": "number",
                    "description": "Shipping including tax in quote currency"
                },
                "base_shipping_incl_tax": {
                    "type": "number",
                    "description": "Shipping including tax in base currency"
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code"
                },
                "quote_currency_code": {
                    "type": "string",
                    "description": "Quote currency code"
                },
                "coupon_code": {
                    "type": "string",
                    "description": "Applied coupon code"
                },
                "items_qty": {
                    "type": "integer",
                    "description": "Items qty"
                },
                "items": {
                    "type": "array",
                    "description": "Totals by items",
                    "items": {
                        "$ref": "#/definitions/quote-data-totals-item-interface"
                    }
                },
                "total_segments": {
                    "type": "array",
                    "description": "Dynamically calculated totals",
                    "items": {
                        "$ref": "#/definitions/quote-data-total-segment-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-totals-extension-interface"
                }
            },
            "required": [
                "weee_tax_applied_amount",
                "total_segments"
            ]
        },
        "quote-data-totals-item-interface": {
            "type": "object",
            "description": "Interface TotalsItemInterface",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "description": "Item id"
                },
                "price": {
                    "type": "number",
                    "description": "Item price in quote currency."
                },
                "base_price": {
                    "type": "number",
                    "description": "Item price in base currency."
                },
                "qty": {
                    "type": "number",
                    "description": "Item quantity."
                },
                "row_total": {
                    "type": "number",
                    "description": "Row total in quote currency."
                },
                "base_row_total": {
                    "type": "number",
                    "description": "Row total in base currency."
                },
                "row_total_with_discount": {
                    "type": "number",
                    "description": "Row total with discount in quote currency. Otherwise, null."
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount in quote currency. Otherwise, null."
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Tax amount in base currency. Otherwise, null."
                },
                "tax_percent": {
                    "type": "number",
                    "description": "Tax percent. Otherwise, null."
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount in quote currency. Otherwise, null."
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Discount amount in base currency. Otherwise, null."
                },
                "discount_percent": {
                    "type": "number",
                    "description": "Discount percent. Otherwise, null."
                },
                "price_incl_tax": {
                    "type": "number",
                    "description": "Price including tax in quote currency. Otherwise, null."
                },
                "base_price_incl_tax": {
                    "type": "number",
                    "description": "Price including tax in base currency. Otherwise, null."
                },
                "row_total_incl_tax": {
                    "type": "number",
                    "description": "Row total including tax in quote currency. Otherwise, null."
                },
                "base_row_total_incl_tax": {
                    "type": "number",
                    "description": "Row total including tax in base currency. Otherwise, null."
                },
                "options": {
                    "type": "string",
                    "description": "Item price in quote currency."
                },
                "weee_tax_applied_amount": {
                    "type": "number",
                    "description": "Item weee tax applied amount in quote currency."
                },
                "weee_tax_applied": {
                    "type": "string",
                    "description": "Item weee tax applied in quote currency."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-totals-item-extension-interface"
                },
                "name": {
                    "type": "string",
                    "description": "Product name. Otherwise, null."
                }
            },
            "required": [
                "item_id",
                "price",
                "base_price",
                "qty",
                "row_total",
                "base_row_total",
                "options",
                "weee_tax_applied_amount",
                "weee_tax_applied"
            ]
        },
        "quote-data-totals-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsItemInterface",
            "properties": {
                "negotiable_quote_item_totals": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-item-totals-interface"
                }
            }
        },
        "negotiable-quote-data-negotiable-quote-item-totals-interface": {
            "type": "object",
            "description": "Extension attribute for quote item totals model.",
            "properties": {
                "cost": {
                    "type": "number",
                    "description": "Cost for quote item."
                },
                "catalog_price": {
                    "type": "number",
                    "description": "Catalog price for quote item."
                },
                "base_catalog_price": {
                    "type": "number",
                    "description": "Catalog price for quote item in base currency."
                },
                "catalog_price_incl_tax": {
                    "type": "number",
                    "description": "Catalog price with included tax for quote item."
                },
                "base_catalog_price_incl_tax": {
                    "type": "number",
                    "description": "Catalog price with included tax for quote item in base currency."
                },
                "cart_price": {
                    "type": "number",
                    "description": "Cart price for quote item."
                },
                "base_cart_price": {
                    "type": "number",
                    "description": "Cart price for quote item in base currency."
                },
                "cart_tax": {
                    "type": "number",
                    "description": "Tax from catalog price for quote item."
                },
                "base_cart_tax": {
                    "type": "number",
                    "description": "Tax from catalog price for quote item in base currency."
                },
                "cart_price_incl_tax": {
                    "type": "number",
                    "description": "Cart price with included tax for quote item."
                },
                "base_cart_price_incl_tax": {
                    "type": "number",
                    "description": "Cart price with included tax for quote item in base currency."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-item-totals-extension-interface"
                }
            },
            "required": [
                "cost",
                "catalog_price",
                "base_catalog_price",
                "catalog_price_incl_tax",
                "base_catalog_price_incl_tax",
                "cart_price",
                "base_cart_price",
                "cart_tax",
                "base_cart_tax",
                "cart_price_incl_tax",
                "base_cart_price_incl_tax"
            ]
        },
        "negotiable-quote-data-negotiable-quote-item-totals-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemTotalsInterface"
        },
        "quote-data-total-segment-interface": {
            "type": "object",
            "description": "Interface TotalsInterface",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code"
                },
                "title": {
                    "type": "string",
                    "description": "Total title"
                },
                "value": {
                    "type": "number",
                    "description": "Total value"
                },
                "area": {
                    "type": "string",
                    "description": "Display area code."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-total-segment-extension-interface"
                }
            },
            "required": [
                "code",
                "value"
            ]
        },
        "quote-data-total-segment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalSegmentInterface",
            "properties": {
                "tax_grandtotal_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax-data-grand-total-details-interface"
                    }
                },
                "gift_cards": {
                    "type": "string"
                },
                "gw_order_id": {
                    "type": "string"
                },
                "gw_item_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gw_allow_gift_receipt": {
                    "type": "string"
                },
                "gw_add_card": {
                    "type": "string"
                },
                "gw_price": {
                    "type": "string"
                },
                "gw_base_price": {
                    "type": "string"
                },
                "gw_items_price": {
                    "type": "string"
                },
                "gw_items_base_price": {
                    "type": "string"
                },
                "gw_card_price": {
                    "type": "string"
                },
                "gw_card_base_price": {
                    "type": "string"
                },
                "gw_base_tax_amount": {
                    "type": "string"
                },
                "gw_tax_amount": {
                    "type": "string"
                },
                "gw_items_base_tax_amount": {
                    "type": "string"
                },
                "gw_items_tax_amount": {
                    "type": "string"
                },
                "gw_card_base_tax_amount": {
                    "type": "string"
                },
                "gw_card_tax_amount": {
                    "type": "string"
                },
                "gw_price_incl_tax": {
                    "type": "string"
                },
                "gw_base_price_incl_tax": {
                    "type": "string"
                },
                "gw_card_price_incl_tax": {
                    "type": "string"
                },
                "gw_card_base_price_incl_tax": {
                    "type": "string"
                },
                "gw_items_price_incl_tax": {
                    "type": "string"
                },
                "gw_items_base_price_incl_tax": {
                    "type": "string"
                }
            }
        },
        "tax-data-grand-total-details-interface": {
            "type": "object",
            "description": "Interface GrandTotalDetailsInterface",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "Tax amount value"
                },
                "rates": {
                    "type": "array",
                    "description": "Tax rates info",
                    "items": {
                        "$ref": "#/definitions/tax-data-grand-total-rates-interface"
                    }
                },
                "group_id": {
                    "type": "integer",
                    "description": "Group identifier"
                }
            },
            "required": [
                "amount",
                "rates",
                "group_id"
            ]
        },
        "tax-data-grand-total-rates-interface": {
            "type": "object",
            "description": "Interface GrandTotalRatesInterface",
            "properties": {
                "percent": {
                    "type": "string",
                    "description": "Tax percentage value"
                },
                "title": {
                    "type": "string",
                    "description": "Rate title"
                }
            },
            "required": [
                "percent",
                "title"
            ]
        },
        "quote-data-totals-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsInterface",
            "properties": {
                "coupon_label": {
                    "type": "string"
                },
                "base_customer_balance_amount": {
                    "type": "number"
                },
                "customer_balance_amount": {
                    "type": "number"
                },
                "negotiable_quote_totals": {
                    "$ref": "#/definitions/negotiable-quote-data-negotiable-quote-totals-interface"
                },
                "coupon_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "coupons_labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reward_points_balance": {
                    "type": "number"
                },
                "reward_currency_amount": {
                    "type": "number"
                },
                "base_reward_currency_amount": {
                    "type": "number"
                }
            }
        },
        "negotiable-quote-data-negotiable-quote-totals-interface": {
            "type": "object",
            "description": "Extension attribute for quote totals model.",
            "properties": {
                "items_count": {
                    "type": "integer",
                    "description": "The number of different items or products in the cart."
                },
                "quote_status": {
                    "type": "string",
                    "description": "Negotiable quote status."
                },
                "created_at": {
                    "type": "string",
                    "description": "The cart creation date and time."
                },
                "updated_at": {
                    "type": "string",
                    "description": "The cart last update date and time."
                },
                "customer_group": {
                    "type": "integer",
                    "description": "Customer group id."
                },
                "base_to_quote_rate": {
                    "type": "number",
                    "description": "Base currency to quote currency rate."
                },
                "cost_total": {
                    "type": "number",
                    "description": "Total cost for quote."
                },
                "base_cost_total": {
                    "type": "number",
                    "description": "Total cost for quote in base currency."
                },
                "original_total": {
                    "type": "number",
                    "description": "Original quote total."
                },
                "base_original_total": {
                    "type": "number",
                    "description": "Original quote total in base currency."
                },
                "original_tax": {
                    "type": "number",
                    "description": "Original tax amount for quote."
                },
                "base_original_tax": {
                    "type": "number",
                    "description": "Original tax amount for quote in base currency."
                },
                "original_price_incl_tax": {
                    "type": "number",
                    "description": "Original price with included tax for quote."
                },
                "base_original_price_incl_tax": {
                    "type": "number",
                    "description": "Original price with included tax for quote in base currency."
                },
                "negotiated_price_type": {
                    "type": "integer",
                    "description": "Negotiable quote type."
                },
                "negotiated_price_value": {
                    "type": "number",
                    "description": "Negotiable price value for quote."
                }
            },
            "required": [
                "items_count",
                "quote_status",
                "created_at",
                "updated_at",
                "customer_group",
                "base_to_quote_rate",
                "cost_total",
                "base_cost_total",
                "original_total",
                "base_original_total",
                "original_tax",
                "base_original_tax",
                "original_price_incl_tax",
                "base_original_price_incl_tax",
                "negotiated_price_type",
                "negotiated_price_value"
            ]
        },
        "catalog-inventory-data-stock-item-collection-interface": {
            "type": "object",
            "description": "Interface StockItemCollectionInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Items",
                    "items": {
                        "$ref": "#/definitions/catalog-inventory-data-stock-item-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/catalog-inventory-stock-item-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "catalog-inventory-stock-item-criteria-interface": {
            "type": "object",
            "description": "Interface StockItemCriteriaInterface",
            "properties": {
                "mapper_interface_name": {
                    "type": "string",
                    "description": "Associated Mapper Interface name"
                },
                "criteria_list": {
                    "type": "array",
                    "description": "Criteria objects added to current Composite Criteria",
                    "items": {
                        "$ref": "#/definitions/framework-criteria-interface"
                    }
                },
                "filters": {
                    "type": "array",
                    "description": "List of filters",
                    "items": {
                        "type": "string"
                    }
                },
                "orders": {
                    "type": "array",
                    "description": "Ordering criteria",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "array",
                    "description": "Limit",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "mapper_interface_name",
                "criteria_list",
                "filters",
                "orders",
                "limit"
            ]
        },
        "framework-criteria-interface": {
            "type": "object",
            "description": "Interface CriteriaInterface",
            "properties": {
                "mapper_interface_name": {
                    "type": "string",
                    "description": "Associated Mapper Interface name"
                },
                "criteria_list": {
                    "type": "array",
                    "description": "Criteria objects added to current Composite Criteria",
                    "items": {
                        "$ref": "#/definitions/framework-criteria-interface"
                    }
                },
                "filters": {
                    "type": "array",
                    "description": "List of filters",
                    "items": {
                        "type": "string"
                    }
                },
                "orders": {
                    "type": "array",
                    "description": "Ordering criteria",
                    "items": {
                        "type": "string"
                    }
                },
                "limit": {
                    "type": "array",
                    "description": "Limit",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "mapper_interface_name",
                "criteria_list",
                "filters",
                "orders",
                "limit"
            ]
        },
        "catalog-inventory-data-stock-status-interface": {
            "type": "object",
            "description": "Interface StockStatusInterface",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "stock_id": {
                    "type": "integer"
                },
                "qty": {
                    "type": "integer"
                },
                "stock_status": {
                    "type": "integer"
                },
                "stock_item": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-item-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-status-extension-interface"
                }
            },
            "required": [
                "product_id",
                "stock_id",
                "qty",
                "stock_status",
                "stock_item"
            ]
        },
        "catalog-inventory-data-stock-status-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockStatusInterface"
        },
        "sales-data-order-interface": {
            "type": "object",
            "description": "Order interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
            "properties": {
                "adjustment_negative": {
                    "type": "number",
                    "description": "Negative adjustment value."
                },
                "adjustment_positive": {
                    "type": "number",
                    "description": "Positive adjustment value."
                },
                "applied_rule_ids": {
                    "type": "string",
                    "description": "Applied rule IDs."
                },
                "base_adjustment_negative": {
                    "type": "number",
                    "description": "Base negative adjustment value."
                },
                "base_adjustment_positive": {
                    "type": "number",
                    "description": "Base positive adjustment value."
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code."
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Base discount amount."
                },
                "base_discount_canceled": {
                    "type": "number",
                    "description": "Base discount canceled."
                },
                "base_discount_invoiced": {
                    "type": "number",
                    "description": "Base discount invoiced."
                },
                "base_discount_refunded": {
                    "type": "number",
                    "description": "Base discount refunded."
                },
                "base_grand_total": {
                    "type": "number",
                    "description": "Base grand total."
                },
                "base_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Base discount tax compensation amount."
                },
                "base_discount_tax_compensation_invoiced": {
                    "type": "number",
                    "description": "Base discount tax compensation invoiced."
                },
                "base_discount_tax_compensation_refunded": {
                    "type": "number",
                    "description": "Base discount tax compensation refunded."
                },
                "base_shipping_amount": {
                    "type": "number",
                    "description": "Base shipping amount."
                },
                "base_shipping_canceled": {
                    "type": "number",
                    "description": "Base shipping canceled."
                },
                "base_shipping_discount_amount": {
                    "type": "number",
                    "description": "Base shipping discount amount."
                },
                "base_shipping_discount_tax_compensation_amnt": {
                    "type": "number",
                    "description": "Base shipping discount tax compensation amount."
                },
                "base_shipping_incl_tax": {
                    "type": "number",
                    "description": "Base shipping including tax."
                },
                "base_shipping_invoiced": {
                    "type": "number",
                    "description": "Base shipping invoiced."
                },
                "base_shipping_refunded": {
                    "type": "number",
                    "description": "Base shipping refunded."
                },
                "base_shipping_tax_amount": {
                    "type": "number",
                    "description": "Base shipping tax amount."
                },
                "base_shipping_tax_refunded": {
                    "type": "number",
                    "description": "Base shipping tax refunded."
                },
                "base_subtotal": {
                    "type": "number",
                    "description": "Base subtotal."
                },
                "base_subtotal_canceled": {
                    "type": "number",
                    "description": "Base subtotal canceled."
                },
                "base_subtotal_incl_tax": {
                    "type": "number",
                    "description": "Base subtotal including tax."
                },
                "base_subtotal_invoiced": {
                    "type": "number",
                    "description": "Base subtotal invoiced."
                },
                "base_subtotal_refunded": {
                    "type": "number",
                    "description": "Base subtotal refunded."
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Base tax amount."
                },
                "base_tax_canceled": {
                    "type": "number",
                    "description": "Base tax canceled."
                },
                "base_tax_invoiced": {
                    "type": "number",
                    "description": "Base tax invoiced."
                },
                "base_tax_refunded": {
                    "type": "number",
                    "description": "Base tax refunded."
                },
                "base_total_canceled": {
                    "type": "number",
                    "description": "Base total canceled."
                },
                "base_total_due": {
                    "type": "number",
                    "description": "Base total due."
                },
                "base_total_invoiced": {
                    "type": "number",
                    "description": "Base total invoiced."
                },
                "base_total_invoiced_cost": {
                    "type": "number",
                    "description": "Base total invoiced cost."
                },
                "base_total_offline_refunded": {
                    "type": "number",
                    "description": "Base total offline refunded."
                },
                "base_total_online_refunded": {
                    "type": "number",
                    "description": "Base total online refunded."
                },
                "base_total_paid": {
                    "type": "number",
                    "description": "Base total paid."
                },
                "base_total_qty_ordered": {
                    "type": "number",
                    "description": "Base total quantity ordered."
                },
                "base_total_refunded": {
                    "type": "number",
                    "description": "Base total refunded."
                },
                "base_to_global_rate": {
                    "type": "number",
                    "description": "Base-to-global rate."
                },
                "base_to_order_rate": {
                    "type": "number",
                    "description": "Base-to-order rate."
                },
                "billing_address_id": {
                    "type": "integer",
                    "description": "Billing address ID."
                },
                "can_ship_partially": {
                    "type": "integer",
                    "description": "Can-ship-partially flag value."
                },
                "can_ship_partially_item": {
                    "type": "integer",
                    "description": "Can-ship-partially-item flag value."
                },
                "coupon_code": {
                    "type": "string",
                    "description": "Coupon code."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "customer_dob": {
                    "type": "string",
                    "description": "In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customers’ full date of birth (month, day, year) along with other personal identifiers (e.g., full name) before collecting or processing such data."
                },
                "customer_email": {
                    "type": "string",
                    "description": "Customer email address."
                },
                "customer_firstname": {
                    "type": "string",
                    "description": "Customer first name."
                },
                "customer_gender": {
                    "type": "integer",
                    "description": "Customer gender."
                },
                "customer_group_id": {
                    "type": "integer",
                    "description": "Customer group ID."
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID."
                },
                "customer_is_guest": {
                    "type": "integer",
                    "description": "Customer-is-guest flag value."
                },
                "customer_lastname": {
                    "type": "string",
                    "description": "Customer last name."
                },
                "customer_middlename": {
                    "type": "string",
                    "description": "Customer middle name."
                },
                "customer_note": {
                    "type": "string",
                    "description": "Customer note."
                },
                "customer_note_notify": {
                    "type": "integer",
                    "description": "Customer-note-notify flag value."
                },
                "customer_prefix": {
                    "type": "string",
                    "description": "Customer prefix."
                },
                "customer_suffix": {
                    "type": "string",
                    "description": "Customer suffix."
                },
                "customer_taxvat": {
                    "type": "string",
                    "description": "Customer value-added tax (VAT)."
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount."
                },
                "discount_canceled": {
                    "type": "number",
                    "description": "Discount canceled."
                },
                "discount_description": {
                    "type": "string",
                    "description": "Discount description."
                },
                "discount_invoiced": {
                    "type": "number",
                    "description": "Discount invoiced."
                },
                "discount_refunded": {
                    "type": "number",
                    "description": "Discount refunded amount."
                },
                "edit_increment": {
                    "type": "integer",
                    "description": "Edit increment value."
                },
                "email_sent": {
                    "type": "integer",
                    "description": "Email-sent flag value."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Order ID."
                },
                "ext_customer_id": {
                    "type": "string",
                    "description": "External customer ID."
                },
                "ext_order_id": {
                    "type": "string",
                    "description": "External order ID."
                },
                "forced_shipment_with_invoice": {
                    "type": "integer",
                    "description": "Forced-shipment-with-invoice flag value."
                },
                "global_currency_code": {
                    "type": "string",
                    "description": "Global currency code."
                },
                "grand_total": {
                    "type": "number",
                    "description": "Grand total."
                },
                "discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Discount tax compensation amount."
                },
                "discount_tax_compensation_invoiced": {
                    "type": "number",
                    "description": "Discount tax compensation invoiced amount."
                },
                "discount_tax_compensation_refunded": {
                    "type": "number",
                    "description": "Discount tax compensation refunded amount."
                },
                "hold_before_state": {
                    "type": "string",
                    "description": "Hold before state."
                },
                "hold_before_status": {
                    "type": "string",
                    "description": "Hold before status."
                },
                "increment_id": {
                    "type": "string",
                    "description": "Increment ID."
                },
                "is_virtual": {
                    "type": "integer",
                    "description": "Is-virtual flag value."
                },
                "order_currency_code": {
                    "type": "string",
                    "description": "Order currency code."
                },
                "original_increment_id": {
                    "type": "string",
                    "description": "Original increment ID."
                },
                "payment_authorization_amount": {
                    "type": "number",
                    "description": "Payment authorization amount."
                },
                "payment_auth_expiration": {
                    "type": "integer",
                    "description": "Payment authorization expiration date."
                },
                "protect_code": {
                    "type": "string",
                    "description": "Protect code."
                },
                "quote_address_id": {
                    "type": "integer",
                    "description": "Quote address ID."
                },
                "quote_id": {
                    "type": "integer",
                    "description": "Quote ID."
                },
                "relation_child_id": {
                    "type": "string",
                    "description": "Relation child ID."
                },
                "relation_child_real_id": {
                    "type": "string",
                    "description": "Relation child real ID."
                },
                "relation_parent_id": {
                    "type": "string",
                    "description": "Relation parent ID."
                },
                "relation_parent_real_id": {
                    "type": "string",
                    "description": "Relation parent real ID."
                },
                "remote_ip": {
                    "type": "string",
                    "description": "Remote IP address."
                },
                "shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount."
                },
                "shipping_canceled": {
                    "type": "number",
                    "description": "Shipping canceled amount."
                },
                "shipping_description": {
                    "type": "string",
                    "description": "Shipping description."
                },
                "shipping_discount_amount": {
                    "type": "number",
                    "description": "Shipping discount amount."
                },
                "shipping_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Shipping discount tax compensation amount."
                },
                "shipping_incl_tax": {
                    "type": "number",
                    "description": "Shipping including tax amount."
                },
                "shipping_invoiced": {
                    "type": "number",
                    "description": "Shipping invoiced amount."
                },
                "shipping_refunded": {
                    "type": "number",
                    "description": "Shipping refunded amount."
                },
                "shipping_tax_amount": {
                    "type": "number",
                    "description": "Shipping tax amount."
                },
                "shipping_tax_refunded": {
                    "type": "number",
                    "description": "Shipping tax refunded amount."
                },
                "state": {
                    "type": "string",
                    "description": "State."
                },
                "status": {
                    "type": "string",
                    "description": "Status."
                },
                "store_currency_code": {
                    "type": "string",
                    "description": "Store currency code."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store ID."
                },
                "store_name": {
                    "type": "string",
                    "description": "Store name."
                },
                "store_to_base_rate": {
                    "type": "number",
                    "description": "Store-to-base rate."
                },
                "store_to_order_rate": {
                    "type": "number",
                    "description": "Store-to-order rate."
                },
                "subtotal": {
                    "type": "number",
                    "description": "Subtotal."
                },
                "subtotal_canceled": {
                    "type": "number",
                    "description": "Subtotal canceled amount."
                },
                "subtotal_incl_tax": {
                    "type": "number",
                    "description": "Subtotal including tax amount."
                },
                "subtotal_invoiced": {
                    "type": "number",
                    "description": "Subtotal invoiced amount."
                },
                "subtotal_refunded": {
                    "type": "number",
                    "description": "Subtotal refunded amount."
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount."
                },
                "tax_canceled": {
                    "type": "number",
                    "description": "Tax canceled amount."
                },
                "tax_invoiced": {
                    "type": "number",
                    "description": "Tax invoiced amount."
                },
                "tax_refunded": {
                    "type": "number",
                    "description": "Tax refunded amount."
                },
                "total_canceled": {
                    "type": "number",
                    "description": "Total canceled."
                },
                "total_due": {
                    "type": "number",
                    "description": "Total due."
                },
                "total_invoiced": {
                    "type": "number",
                    "description": "Total invoiced amount."
                },
                "total_item_count": {
                    "type": "integer",
                    "description": "Total item count."
                },
                "total_offline_refunded": {
                    "type": "number",
                    "description": "Total offline refunded amount."
                },
                "total_online_refunded": {
                    "type": "number",
                    "description": "Total online refunded amount."
                },
                "total_paid": {
                    "type": "number",
                    "description": "Total paid."
                },
                "total_qty_ordered": {
                    "type": "number",
                    "description": "Total quantity ordered."
                },
                "total_refunded": {
                    "type": "number",
                    "description": "Total amount refunded."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated-at timestamp."
                },
                "weight": {
                    "type": "number",
                    "description": "Weight."
                },
                "x_forwarded_for": {
                    "type": "string",
                    "description": "X-Forwarded-For field value."
                },
                "items": {
                    "type": "array",
                    "description": "Array of items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-order-item-interface"
                    }
                },
                "billing_address": {
                    "$ref": "#/definitions/sales-data-order-address-interface"
                },
                "payment": {
                    "$ref": "#/definitions/sales-data-order-payment-interface"
                },
                "status_histories": {
                    "type": "array",
                    "description": "Array of status histories.",
                    "items": {
                        "$ref": "#/definitions/sales-data-order-status-history-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-order-extension-interface"
                }
            },
            "required": [
                "base_grand_total",
                "customer_email",
                "grand_total",
                "items"
            ]
        },
        "sales-data-order-item-interface": {
            "type": "object",
            "description": "Order item interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
            "properties": {
                "additional_data": {
                    "type": "string",
                    "description": "Additional data."
                },
                "amount_refunded": {
                    "type": "number",
                    "description": "Amount refunded."
                },
                "applied_rule_ids": {
                    "type": "string",
                    "description": "Applied rule IDs."
                },
                "base_amount_refunded": {
                    "type": "number",
                    "description": "Base amount refunded."
                },
                "base_cost": {
                    "type": "number",
                    "description": "Base cost."
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Base discount amount."
                },
                "base_discount_invoiced": {
                    "type": "number",
                    "description": "Base discount invoiced."
                },
                "base_discount_refunded": {
                    "type": "number",
                    "description": "Base discount refunded."
                },
                "base_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Base discount tax compensation amount."
                },
                "base_discount_tax_compensation_invoiced": {
                    "type": "number",
                    "description": "Base discount tax compensation invoiced."
                },
                "base_discount_tax_compensation_refunded": {
                    "type": "number",
                    "description": "Base discount tax compensation refunded."
                },
                "base_original_price": {
                    "type": "number",
                    "description": "Base original price."
                },
                "base_price": {
                    "type": "number",
                    "description": "Base price."
                },
                "base_price_incl_tax": {
                    "type": "number",
                    "description": "Base price including tax."
                },
                "base_row_invoiced": {
                    "type": "number",
                    "description": "Base row invoiced."
                },
                "base_row_total": {
                    "type": "number",
                    "description": "Base row total."
                },
                "base_row_total_incl_tax": {
                    "type": "number",
                    "description": "Base row total including tax."
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Base tax amount."
                },
                "base_tax_before_discount": {
                    "type": "number",
                    "description": "Base tax before discount."
                },
                "base_tax_invoiced": {
                    "type": "number",
                    "description": "Base tax invoiced."
                },
                "base_tax_refunded": {
                    "type": "number",
                    "description": "Base tax refunded."
                },
                "base_weee_tax_applied_amount": {
                    "type": "number",
                    "description": "Base WEEE tax applied amount."
                },
                "base_weee_tax_applied_row_amnt": {
                    "type": "number",
                    "description": "Base WEEE tax applied row amount."
                },
                "base_weee_tax_disposition": {
                    "type": "number",
                    "description": "Base WEEE tax disposition."
                },
                "base_weee_tax_row_disposition": {
                    "type": "number",
                    "description": "Base WEEE tax row disposition."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount."
                },
                "discount_invoiced": {
                    "type": "number",
                    "description": "Discount invoiced."
                },
                "discount_percent": {
                    "type": "number",
                    "description": "Discount percent."
                },
                "discount_refunded": {
                    "type": "number",
                    "description": "Discount refunded."
                },
                "event_id": {
                    "type": "integer",
                    "description": "Event ID."
                },
                "ext_order_item_id": {
                    "type": "string",
                    "description": "External order item ID."
                },
                "free_shipping": {
                    "type": "integer",
                    "description": "Free-shipping flag value."
                },
                "gw_base_price": {
                    "type": "number",
                    "description": "GW base price."
                },
                "gw_base_price_invoiced": {
                    "type": "number",
                    "description": "GW base price invoiced."
                },
                "gw_base_price_refunded": {
                    "type": "number",
                    "description": "GW base price refunded."
                },
                "gw_base_tax_amount": {
                    "type": "number",
                    "description": "GW base tax amount."
                },
                "gw_base_tax_amount_invoiced": {
                    "type": "number",
                    "description": "GW base tax amount invoiced."
                },
                "gw_base_tax_amount_refunded": {
                    "type": "number",
                    "description": "GW base tax amount refunded."
                },
                "gw_id": {
                    "type": "integer",
                    "description": "GW ID."
                },
                "gw_price": {
                    "type": "number",
                    "description": "GW price."
                },
                "gw_price_invoiced": {
                    "type": "number",
                    "description": "GW price invoiced."
                },
                "gw_price_refunded": {
                    "type": "number",
                    "description": "GW price refunded."
                },
                "gw_tax_amount": {
                    "type": "number",
                    "description": "GW tax amount."
                },
                "gw_tax_amount_invoiced": {
                    "type": "number",
                    "description": "GW tax amount invoiced."
                },
                "gw_tax_amount_refunded": {
                    "type": "number",
                    "description": "GW tax amount refunded."
                },
                "discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Discount tax compensation amount."
                },
                "discount_tax_compensation_canceled": {
                    "type": "number",
                    "description": "Discount tax compensation canceled."
                },
                "discount_tax_compensation_invoiced": {
                    "type": "number",
                    "description": "Discount tax compensation invoiced."
                },
                "discount_tax_compensation_refunded": {
                    "type": "number",
                    "description": "Discount tax compensation refunded."
                },
                "is_qty_decimal": {
                    "type": "integer",
                    "description": "Is-quantity-decimal flag value."
                },
                "is_virtual": {
                    "type": "integer",
                    "description": "Is-virtual flag value."
                },
                "item_id": {
                    "type": "integer",
                    "description": "Item ID."
                },
                "locked_do_invoice": {
                    "type": "integer",
                    "description": "Locked DO invoice flag value."
                },
                "locked_do_ship": {
                    "type": "integer",
                    "description": "Locked DO ship flag value."
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "no_discount": {
                    "type": "integer",
                    "description": "No-discount flag value."
                },
                "order_id": {
                    "type": "integer",
                    "description": "Order ID."
                },
                "original_price": {
                    "type": "number",
                    "description": "Original price."
                },
                "parent_item_id": {
                    "type": "integer",
                    "description": "Parent item ID."
                },
                "price": {
                    "type": "number",
                    "description": "Price."
                },
                "price_incl_tax": {
                    "type": "number",
                    "description": "Price including tax."
                },
                "product_id": {
                    "type": "integer",
                    "description": "Product ID."
                },
                "product_type": {
                    "type": "string",
                    "description": "Product type."
                },
                "qty_backordered": {
                    "type": "number",
                    "description": "Quantity backordered."
                },
                "qty_canceled": {
                    "type": "number",
                    "description": "Quantity canceled."
                },
                "qty_invoiced": {
                    "type": "number",
                    "description": "Quantity invoiced."
                },
                "qty_ordered": {
                    "type": "number",
                    "description": "Quantity ordered."
                },
                "qty_refunded": {
                    "type": "number",
                    "description": "Quantity refunded."
                },
                "qty_returned": {
                    "type": "number",
                    "description": "Quantity returned."
                },
                "qty_shipped": {
                    "type": "number",
                    "description": "Quantity shipped."
                },
                "quote_item_id": {
                    "type": "integer",
                    "description": "Quote item ID."
                },
                "row_invoiced": {
                    "type": "number",
                    "description": "Row invoiced."
                },
                "row_total": {
                    "type": "number",
                    "description": "Row total."
                },
                "row_total_incl_tax": {
                    "type": "number",
                    "description": "Row total including tax."
                },
                "row_weight": {
                    "type": "number",
                    "description": "Row weight."
                },
                "sku": {
                    "type": "string",
                    "description": "SKU."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store ID."
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount."
                },
                "tax_before_discount": {
                    "type": "number",
                    "description": "Tax before discount."
                },
                "tax_canceled": {
                    "type": "number",
                    "description": "Tax canceled."
                },
                "tax_invoiced": {
                    "type": "number",
                    "description": "Tax invoiced."
                },
                "tax_percent": {
                    "type": "number",
                    "description": "Tax percent."
                },
                "tax_refunded": {
                    "type": "number",
                    "description": "Tax refunded."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated-at timestamp."
                },
                "weee_tax_applied": {
                    "type": "string",
                    "description": "WEEE tax applied."
                },
                "weee_tax_applied_amount": {
                    "type": "number",
                    "description": "WEEE tax applied amount."
                },
                "weee_tax_applied_row_amount": {
                    "type": "number",
                    "description": "WEEE tax applied row amount."
                },
                "weee_tax_disposition": {
                    "type": "number",
                    "description": "WEEE tax disposition."
                },
                "weee_tax_row_disposition": {
                    "type": "number",
                    "description": "WEEE tax row disposition."
                },
                "weight": {
                    "type": "number",
                    "description": "Weight."
                },
                "parent_item": {
                    "$ref": "#/definitions/sales-data-order-item-interface"
                },
                "product_option": {
                    "$ref": "#/definitions/catalog-data-product-option-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-order-item-extension-interface"
                }
            },
            "required": [
                "sku"
            ]
        },
        "catalog-data-product-option-interface": {
            "type": "object",
            "description": "Product option interface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-option-extension-interface"
                }
            }
        },
        "catalog-data-product-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductOptionInterface",
            "properties": {
                "custom_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-custom-option-interface"
                    }
                },
                "bundle_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bundle-data-bundle-option-interface"
                    }
                },
                "configurable_item_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-configurable-item-option-value-interface"
                    }
                },
                "downloadable_option": {
                    "$ref": "#/definitions/downloadable-data-downloadable-option-interface"
                },
                "giftcard_item_option": {
                    "$ref": "#/definitions/gift-card-data-gift-card-option-interface"
                }
            }
        },
        "sales-data-order-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderItemInterface",
            "properties": {
                "itemized_taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax-data-order-tax-item-interface"
                    }
                },
                "gift_message": {
                    "$ref": "#/definitions/gift-message-data-message-interface"
                },
                "gw_id": {
                    "type": "string"
                },
                "gw_base_price": {
                    "type": "string"
                },
                "gw_price": {
                    "type": "string"
                },
                "gw_base_tax_amount": {
                    "type": "string"
                },
                "gw_tax_amount": {
                    "type": "string"
                },
                "gw_base_price_invoiced": {
                    "type": "string"
                },
                "gw_price_invoiced": {
                    "type": "string"
                },
                "gw_base_tax_amount_invoiced": {
                    "type": "string"
                },
                "gw_tax_amount_invoiced": {
                    "type": "string"
                },
                "gw_base_price_refunded": {
                    "type": "string"
                },
                "gw_price_refunded": {
                    "type": "string"
                },
                "gw_base_tax_amount_refunded": {
                    "type": "string"
                },
                "gw_tax_amount_refunded": {
                    "type": "string"
                }
            }
        },
        "tax-data-order-tax-item-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "tax_item_id": {
                    "type": "integer",
                    "description": "Tax item ID"
                },
                "tax_id": {
                    "type": "integer",
                    "description": "Tax ID"
                },
                "item_id": {
                    "type": "integer",
                    "description": "Order item ID"
                },
                "tax_code": {
                    "type": "string",
                    "description": "Tax code"
                },
                "tax_percent": {
                    "type": "number",
                    "description": "Tax percent"
                },
                "amount": {
                    "type": "number",
                    "description": "Tax amount"
                },
                "base_amount": {
                    "type": "number",
                    "description": "Tax amount in base currency"
                },
                "real_amount": {
                    "type": "number",
                    "description": "Real tax amount"
                },
                "real_base_amount": {
                    "type": "number",
                    "description": "Real tax amount in base currency"
                },
                "associated_item_id": {
                    "type": "integer",
                    "description": "Associated order item ID"
                },
                "taxable_item_type": {
                    "type": "string",
                    "description": "shipping, product, weee, quote_gw, etc..."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/tax-data-order-tax-item-extension-interface"
                }
            },
            "required": [
                "tax_percent",
                "amount",
                "base_amount",
                "real_amount",
                "real_base_amount"
            ]
        },
        "tax-data-order-tax-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxItemInterface"
        },
        "gift-message-data-message-interface": {
            "type": "object",
            "description": "Interface MessageInterface",
            "properties": {
                "gift_message_id": {
                    "type": "integer",
                    "description": "Gift message ID. Otherwise, null."
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID. Otherwise, null."
                },
                "sender": {
                    "type": "string",
                    "description": "Sender name."
                },
                "recipient": {
                    "type": "string",
                    "description": "Recipient name."
                },
                "message": {
                    "type": "string",
                    "description": "Message text."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/gift-message-data-message-extension-interface"
                }
            },
            "required": [
                "sender",
                "recipient",
                "message"
            ]
        },
        "gift-message-data-message-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GiftMessage\\Api\\Data\\MessageInterface",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "wrapping_id": {
                    "type": "integer"
                },
                "wrapping_allow_gift_receipt": {
                    "type": "boolean"
                },
                "wrapping_add_printed_card": {
                    "type": "boolean"
                }
            }
        },
        "sales-data-order-address-interface": {
            "type": "object",
            "description": "Order address interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
            "properties": {
                "address_type": {
                    "type": "string",
                    "description": "Address type."
                },
                "city": {
                    "type": "string",
                    "description": "City."
                },
                "company": {
                    "type": "string",
                    "description": "Company."
                },
                "country_id": {
                    "type": "string",
                    "description": "Country ID."
                },
                "customer_address_id": {
                    "type": "integer",
                    "description": "Country address ID."
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID."
                },
                "email": {
                    "type": "string",
                    "description": "Email address."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Order address ID."
                },
                "fax": {
                    "type": "string",
                    "description": "Fax number."
                },
                "firstname": {
                    "type": "string",
                    "description": "First name."
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name."
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "postcode": {
                    "type": "string",
                    "description": "Postal code."
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix."
                },
                "region": {
                    "type": "string",
                    "description": "Region."
                },
                "region_code": {
                    "type": "string",
                    "description": "Region code."
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region ID."
                },
                "street": {
                    "type": "array",
                    "description": "Array of any street values. Otherwise, null.",
                    "items": {
                        "type": "string"
                    }
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix."
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone number."
                },
                "vat_id": {
                    "type": "string",
                    "description": "VAT ID."
                },
                "vat_is_valid": {
                    "type": "integer",
                    "description": "VAT-is-valid flag value."
                },
                "vat_request_date": {
                    "type": "string",
                    "description": "VAT request date."
                },
                "vat_request_id": {
                    "type": "string",
                    "description": "VAT request ID."
                },
                "vat_request_success": {
                    "type": "integer",
                    "description": "VAT-request-success flag value."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-order-address-extension-interface"
                }
            },
            "required": [
                "address_type",
                "city",
                "country_id",
                "firstname",
                "lastname",
                "postcode",
                "telephone"
            ]
        },
        "sales-data-order-address-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderAddressInterface"
        },
        "sales-data-order-payment-interface": {
            "type": "object",
            "description": "Order payment interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
            "properties": {
                "account_status": {
                    "type": "string",
                    "description": "Account status."
                },
                "additional_data": {
                    "type": "string",
                    "description": "Additional data."
                },
                "additional_information": {
                    "type": "array",
                    "description": "Array of additional information.",
                    "items": {
                        "type": "string"
                    }
                },
                "address_status": {
                    "type": "string",
                    "description": "Address status."
                },
                "amount_authorized": {
                    "type": "number",
                    "description": "Amount authorized."
                },
                "amount_canceled": {
                    "type": "number",
                    "description": "Amount canceled."
                },
                "amount_ordered": {
                    "type": "number",
                    "description": "Amount ordered."
                },
                "amount_paid": {
                    "type": "number",
                    "description": "Amount paid."
                },
                "amount_refunded": {
                    "type": "number",
                    "description": "Amount refunded."
                },
                "anet_trans_method": {
                    "type": "string",
                    "description": "Anet transaction method."
                },
                "base_amount_authorized": {
                    "type": "number",
                    "description": "Base amount authorized."
                },
                "base_amount_canceled": {
                    "type": "number",
                    "description": "Base amount canceled."
                },
                "base_amount_ordered": {
                    "type": "number",
                    "description": "Base amount ordered."
                },
                "base_amount_paid": {
                    "type": "number",
                    "description": "Base amount paid."
                },
                "base_amount_paid_online": {
                    "type": "number",
                    "description": "Base amount paid online."
                },
                "base_amount_refunded": {
                    "type": "number",
                    "description": "Base amount refunded."
                },
                "base_amount_refunded_online": {
                    "type": "number",
                    "description": "Base amount refunded online."
                },
                "base_shipping_amount": {
                    "type": "number",
                    "description": "Base shipping amount."
                },
                "base_shipping_captured": {
                    "type": "number",
                    "description": "Base shipping captured amount."
                },
                "base_shipping_refunded": {
                    "type": "number",
                    "description": "Base shipping refunded amount."
                },
                "cc_approval": {
                    "type": "string",
                    "description": "Credit card approval."
                },
                "cc_avs_status": {
                    "type": "string",
                    "description": "Credit card avs status."
                },
                "cc_cid_status": {
                    "type": "string",
                    "description": "Credit card CID status."
                },
                "cc_debug_request_body": {
                    "type": "string",
                    "description": "Credit card debug request body."
                },
                "cc_debug_response_body": {
                    "type": "string",
                    "description": "Credit card debug response body."
                },
                "cc_debug_response_serialized": {
                    "type": "string",
                    "description": "Credit card debug response serialized."
                },
                "cc_exp_month": {
                    "type": "string",
                    "description": "Credit card expiration month."
                },
                "cc_exp_year": {
                    "type": "string",
                    "description": "Credit card expiration year."
                },
                "cc_last4": {
                    "type": "string",
                    "description": "Last four digits of the credit card."
                },
                "cc_number_enc": {
                    "type": "string",
                    "description": "Encrypted credit card number."
                },
                "cc_owner": {
                    "type": "string",
                    "description": "Credit card number."
                },
                "cc_secure_verify": {
                    "type": "string",
                    "description": "Credit card secure verify."
                },
                "cc_ss_issue": {
                    "type": "string",
                    "description": "Credit card SS issue."
                },
                "cc_ss_start_month": {
                    "type": "string",
                    "description": "Credit card SS start month."
                },
                "cc_ss_start_year": {
                    "type": "string",
                    "description": "Credit card SS start year."
                },
                "cc_status": {
                    "type": "string",
                    "description": "Credit card status."
                },
                "cc_status_description": {
                    "type": "string",
                    "description": "Credit card status description."
                },
                "cc_trans_id": {
                    "type": "string",
                    "description": "Credit card transaction ID."
                },
                "cc_type": {
                    "type": "string",
                    "description": "Credit card type."
                },
                "echeck_account_name": {
                    "type": "string",
                    "description": "eCheck account name."
                },
                "echeck_account_type": {
                    "type": "string",
                    "description": "eCheck account type."
                },
                "echeck_bank_name": {
                    "type": "string",
                    "description": "eCheck bank name."
                },
                "echeck_routing_number": {
                    "type": "string",
                    "description": "eCheck routing number."
                },
                "echeck_type": {
                    "type": "string",
                    "description": "eCheck type."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Entity ID."
                },
                "last_trans_id": {
                    "type": "string",
                    "description": "Last transaction ID."
                },
                "method": {
                    "type": "string",
                    "description": "Method."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "po_number": {
                    "type": "string",
                    "description": "PO number."
                },
                "protection_eligibility": {
                    "type": "string",
                    "description": "Protection eligibility."
                },
                "quote_payment_id": {
                    "type": "integer",
                    "description": "Quote payment ID."
                },
                "shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount."
                },
                "shipping_captured": {
                    "type": "number",
                    "description": "Shipping captured."
                },
                "shipping_refunded": {
                    "type": "number",
                    "description": "Shipping refunded."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-order-payment-extension-interface"
                }
            },
            "required": [
                "account_status",
                "additional_information",
                "cc_last4",
                "method"
            ]
        },
        "sales-data-order-payment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderPaymentInterface",
            "properties": {
                "notification_message": {
                    "type": "string"
                },
                "vault_payment_token": {
                    "$ref": "#/definitions/vault-data-payment-token-interface"
                }
            }
        },
        "vault-data-payment-token-interface": {
            "type": "object",
            "description": "Gateway vault payment token interface.",
            "properties": {
                "entity_id": {
                    "type": "integer",
                    "description": "Entity ID."
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID."
                },
                "public_hash": {
                    "type": "string",
                    "description": "Public hash"
                },
                "payment_method_code": {
                    "type": "string",
                    "description": "Payment method code"
                },
                "type": {
                    "type": "string",
                    "description": "Type"
                },
                "created_at": {
                    "type": "string",
                    "description": "Token creation timestamp"
                },
                "expires_at": {
                    "type": "string",
                    "description": "Token expiration timestamp"
                },
                "gateway_token": {
                    "type": "string",
                    "description": "Gateway token ID"
                },
                "token_details": {
                    "type": "string",
                    "description": "Token details"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Is active."
                },
                "is_visible": {
                    "type": "boolean",
                    "description": "Is visible."
                },
                "website_id": {
                    "type": "integer",
                    "description": "website id."
                }
            },
            "required": [
                "public_hash",
                "payment_method_code",
                "type",
                "gateway_token",
                "token_details",
                "is_active",
                "is_visible",
                "website_id"
            ]
        },
        "sales-data-order-status-history-interface": {
            "type": "object",
            "description": "Order status history interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Order status history ID."
                },
                "entity_name": {
                    "type": "string",
                    "description": "Entity name."
                },
                "is_customer_notified": {
                    "type": "integer",
                    "description": "Is-customer-notified flag value."
                },
                "is_visible_on_front": {
                    "type": "integer",
                    "description": "Is-visible-on-storefront flag value."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "status": {
                    "type": "string",
                    "description": "Status."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-order-status-history-extension-interface"
                }
            },
            "required": [
                "comment",
                "is_customer_notified",
                "is_visible_on_front",
                "parent_id"
            ]
        },
        "sales-data-order-status-history-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderStatusHistoryInterface"
        },
        "sales-data-order-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderInterface",
            "properties": {
                "shipping_assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sales-data-shipping-assignment-interface"
                    }
                },
                "payment_additional_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/payment-data-payment-additional-info-interface"
                    }
                },
                "company_order_attributes": {
                    "$ref": "#/definitions/company-data-company-order-interface"
                },
                "base_customer_balance_amount": {
                    "type": "number"
                },
                "customer_balance_amount": {
                    "type": "number"
                },
                "base_customer_balance_invoiced": {
                    "type": "number"
                },
                "customer_balance_invoiced": {
                    "type": "number"
                },
                "base_customer_balance_refunded": {
                    "type": "number"
                },
                "customer_balance_refunded": {
                    "type": "number"
                },
                "base_customer_balance_total_refunded": {
                    "type": "number"
                },
                "customer_balance_total_refunded": {
                    "type": "number"
                },
                "applied_taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax-data-order-tax-details-applied-tax-interface"
                    }
                },
                "item_applied_taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax-data-order-tax-details-item-interface"
                    }
                },
                "converting_from_quote": {
                    "type": "boolean"
                },
                "taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax-data-order-tax-interface"
                    }
                },
                "additional_itemized_taxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax-data-order-tax-item-interface"
                    }
                },
                "custom_fees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin-ui-sdk-custom-fees-data-custom-fees-interface"
                    }
                },
                "gift_cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gift-card-account-data-gift-card-interface"
                    }
                },
                "base_gift_cards_amount": {
                    "type": "number"
                },
                "gift_cards_amount": {
                    "type": "number"
                },
                "base_gift_cards_invoiced": {
                    "type": "number"
                },
                "gift_cards_invoiced": {
                    "type": "number"
                },
                "base_gift_cards_refunded": {
                    "type": "number"
                },
                "gift_cards_refunded": {
                    "type": "number"
                },
                "gift_message": {
                    "$ref": "#/definitions/gift-message-data-message-interface"
                },
                "gw_id": {
                    "type": "string"
                },
                "gw_allow_gift_receipt": {
                    "type": "string"
                },
                "gw_add_card": {
                    "type": "string"
                },
                "gw_base_price": {
                    "type": "string"
                },
                "gw_price": {
                    "type": "string"
                },
                "gw_items_base_price": {
                    "type": "string"
                },
                "gw_items_price": {
                    "type": "string"
                },
                "gw_card_base_price": {
                    "type": "string"
                },
                "gw_card_price": {
                    "type": "string"
                },
                "gw_base_tax_amount": {
                    "type": "string"
                },
                "gw_tax_amount": {
                    "type": "string"
                },
                "gw_items_base_tax_amount": {
                    "type": "string"
                },
                "gw_items_tax_amount": {
                    "type": "string"
                },
                "gw_card_base_tax_amount": {
                    "type": "string"
                },
                "gw_card_tax_amount": {
                    "type": "string"
                },
                "gw_base_price_incl_tax": {
                    "type": "string"
                },
                "gw_price_incl_tax": {
                    "type": "string"
                },
                "gw_items_base_price_incl_tax": {
                    "type": "string"
                },
                "gw_items_price_incl_tax": {
                    "type": "string"
                },
                "gw_card_base_price_incl_tax": {
                    "type": "string"
                },
                "gw_card_price_incl_tax": {
                    "type": "string"
                },
                "gw_base_price_invoiced": {
                    "type": "string"
                },
                "gw_price_invoiced": {
                    "type": "string"
                },
                "gw_items_base_price_invoiced": {
                    "type": "string"
                },
                "gw_items_price_invoiced": {
                    "type": "string"
                },
                "gw_card_base_price_invoiced": {
                    "type": "string"
                },
                "gw_card_price_invoiced": {
                    "type": "string"
                },
                "gw_base_tax_amount_invoiced": {
                    "type": "string"
                },
                "gw_tax_amount_invoiced": {
                    "type": "string"
                },
                "gw_items_base_tax_invoiced": {
                    "type": "string"
                },
                "gw_items_tax_invoiced": {
                    "type": "string"
                },
                "gw_card_base_tax_invoiced": {
                    "type": "string"
                },
                "gw_card_tax_invoiced": {
                    "type": "string"
                },
                "gw_base_price_refunded": {
                    "type": "string"
                },
                "gw_price_refunded": {
                    "type": "string"
                },
                "gw_items_base_price_refunded": {
                    "type": "string"
                },
                "gw_items_price_refunded": {
                    "type": "string"
                },
                "gw_card_base_price_refunded": {
                    "type": "string"
                },
                "gw_card_price_refunded": {
                    "type": "string"
                },
                "gw_base_tax_amount_refunded": {
                    "type": "string"
                },
                "gw_tax_amount_refunded": {
                    "type": "string"
                },
                "gw_items_base_tax_refunded": {
                    "type": "string"
                },
                "gw_items_tax_refunded": {
                    "type": "string"
                },
                "gw_card_base_tax_refunded": {
                    "type": "string"
                },
                "gw_card_tax_refunded": {
                    "type": "string"
                },
                "pickup_location_code": {
                    "type": "string"
                },
                "notification_sent": {
                    "type": "integer"
                },
                "send_notification": {
                    "type": "integer"
                },
                "coupon_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "coupon_discounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reward_points_balance": {
                    "type": "integer"
                },
                "reward_currency_amount": {
                    "type": "number"
                },
                "base_reward_currency_amount": {
                    "type": "number"
                }
            }
        },
        "sales-data-shipping-assignment-interface": {
            "type": "object",
            "description": "Interface ShippingAssignmentInterface",
            "properties": {
                "shipping": {
                    "$ref": "#/definitions/sales-data-shipping-interface"
                },
                "items": {
                    "type": "array",
                    "description": "Order items of shipping assignment",
                    "items": {
                        "$ref": "#/definitions/sales-data-order-item-interface"
                    }
                },
                "stock_id": {
                    "type": "integer",
                    "description": "Stock id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipping-assignment-extension-interface"
                }
            },
            "required": [
                "shipping",
                "items"
            ]
        },
        "sales-data-shipping-interface": {
            "type": "object",
            "description": "Interface ShippingInterface",
            "properties": {
                "address": {
                    "$ref": "#/definitions/sales-data-order-address-interface"
                },
                "method": {
                    "type": "string",
                    "description": "Shipping method"
                },
                "total": {
                    "$ref": "#/definitions/sales-data-total-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipping-extension-interface"
                }
            }
        },
        "sales-data-total-interface": {
            "type": "object",
            "description": "Interface TotalInterface",
            "properties": {
                "base_shipping_amount": {
                    "type": "number",
                    "description": "Base shipping amount."
                },
                "base_shipping_canceled": {
                    "type": "number",
                    "description": "Base shipping canceled."
                },
                "base_shipping_discount_amount": {
                    "type": "number",
                    "description": "Base shipping discount amount."
                },
                "base_shipping_discount_tax_compensation_amnt": {
                    "type": "number",
                    "description": "Base shipping discount tax compensation amount."
                },
                "base_shipping_incl_tax": {
                    "type": "number",
                    "description": "Base shipping including tax."
                },
                "base_shipping_invoiced": {
                    "type": "number",
                    "description": "Base shipping invoiced."
                },
                "base_shipping_refunded": {
                    "type": "number",
                    "description": "Base shipping refunded."
                },
                "base_shipping_tax_amount": {
                    "type": "number",
                    "description": "Base shipping tax amount."
                },
                "base_shipping_tax_refunded": {
                    "type": "number",
                    "description": "Base shipping tax refunded."
                },
                "shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount."
                },
                "shipping_canceled": {
                    "type": "number",
                    "description": "Shipping canceled amount."
                },
                "shipping_discount_amount": {
                    "type": "number",
                    "description": "Shipping discount amount."
                },
                "shipping_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Shipping discount tax compensation amount."
                },
                "shipping_incl_tax": {
                    "type": "number",
                    "description": "Shipping including tax amount."
                },
                "shipping_invoiced": {
                    "type": "number",
                    "description": "Shipping invoiced amount."
                },
                "shipping_refunded": {
                    "type": "number",
                    "description": "Shipping refunded amount."
                },
                "shipping_tax_amount": {
                    "type": "number",
                    "description": "Shipping tax amount."
                },
                "shipping_tax_refunded": {
                    "type": "number",
                    "description": "Shipping tax refunded amount."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-total-extension-interface"
                }
            }
        },
        "sales-data-total-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TotalInterface"
        },
        "sales-data-shipping-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShippingInterface"
        },
        "sales-data-shipping-assignment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShippingAssignmentInterface"
        },
        "payment-data-payment-additional-info-interface": {
            "type": "object",
            "description": "Payment additional info interface.",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Object key"
                },
                "value": {
                    "type": "string",
                    "description": "Object value"
                }
            },
            "required": [
                "key",
                "value"
            ]
        },
        "company-data-company-order-interface": {
            "type": "object",
            "description": "Order company extension attributes interface. Adds new company attributes to orders.",
            "properties": {
                "order_id": {
                    "type": "integer",
                    "description": "Order ID."
                },
                "company_id": {
                    "type": "integer",
                    "description": "Company ID."
                },
                "company_name": {
                    "type": "string",
                    "description": "Company name."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-company-order-extension-interface"
                }
            }
        },
        "company-data-company-order-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyOrderInterface"
        },
        "tax-data-order-tax-details-applied-tax-interface": {
            "type": "object",
            "description": "Interface OrderTaxDetailsAppliedTaxInterface",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "percent": {
                    "type": "number",
                    "description": "Tax Percent"
                },
                "amount": {
                    "type": "number",
                    "description": "Tax amount"
                },
                "base_amount": {
                    "type": "number",
                    "description": "Tax amount in base currency"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/tax-data-order-tax-details-applied-tax-extension-interface"
                }
            },
            "required": [
                "amount",
                "base_amount"
            ]
        },
        "tax-data-order-tax-details-applied-tax-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxDetailsAppliedTaxInterface",
            "properties": {
                "rates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax-data-applied-tax-rate-interface"
                    }
                }
            }
        },
        "tax-data-applied-tax-rate-interface": {
            "type": "object",
            "description": "Applied tax rate interface.",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "percent": {
                    "type": "number",
                    "description": "Tax Percent"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/tax-data-applied-tax-rate-extension-interface"
                }
            }
        },
        "tax-data-applied-tax-rate-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\AppliedTaxRateInterface"
        },
        "tax-data-order-tax-details-item-interface": {
            "type": "object",
            "description": "Interface OrderTaxDetailsItemInterface",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type (shipping, product, weee, gift wrapping, etc)"
                },
                "item_id": {
                    "type": "integer",
                    "description": "Item id if this item is a product"
                },
                "associated_item_id": {
                    "type": "integer",
                    "description": "Associated item id if this item is associated with another item, null otherwise"
                },
                "applied_taxes": {
                    "type": "array",
                    "description": "Applied taxes",
                    "items": {
                        "$ref": "#/definitions/tax-data-order-tax-details-applied-tax-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/tax-data-order-tax-details-item-extension-interface"
                }
            }
        },
        "tax-data-order-tax-details-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxDetailsItemInterface"
        },
        "tax-data-order-tax-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "tax_id": {
                    "type": "integer",
                    "description": "Tax ID"
                },
                "order_id": {
                    "type": "integer",
                    "description": "Order ID"
                },
                "code": {
                    "type": "string",
                    "description": "Code"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "percent": {
                    "type": "number",
                    "description": "Percent"
                },
                "amount": {
                    "type": "number",
                    "description": "Amount"
                },
                "base_amount": {
                    "type": "number",
                    "description": "Tax amount in base currency"
                },
                "base_real_amount": {
                    "type": "number",
                    "description": "Real tax amount in base currency"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority"
                },
                "position": {
                    "type": "integer",
                    "description": "Position"
                },
                "process": {
                    "type": "integer",
                    "description": "Process"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/tax-data-order-tax-extension-interface"
                }
            },
            "required": [
                "percent",
                "amount",
                "base_amount",
                "base_real_amount",
                "priority",
                "position",
                "process"
            ]
        },
        "tax-data-order-tax-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxInterface"
        },
        "admin-ui-sdk-custom-fees-data-custom-fees-interface": {
            "type": "object",
            "description": "Interface CustomFeesInterface",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id."
                },
                "order_id": {
                    "type": "string",
                    "description": "The order id"
                },
                "custom_fee_code": {
                    "type": "string",
                    "description": "Custom fee code."
                },
                "custom_fee_label": {
                    "type": "string",
                    "description": "Custom fee label."
                },
                "custom_fee_amount": {
                    "type": "number",
                    "description": "Custom fee amount."
                },
                "base_custom_fee_amount": {
                    "type": "number",
                    "description": "Base custom fee amount."
                },
                "custom_fee_amount_invoiced": {
                    "type": "number",
                    "description": "Custom fee amount invoiced."
                },
                "base_custom_fee_amount_invoiced": {
                    "type": "number",
                    "description": "Base custom fee amount invoiced."
                },
                "custom_fee_amount_refunded": {
                    "type": "number",
                    "description": "Custom fee amount refunded."
                },
                "base_custom_fee_amount_refunded": {
                    "type": "number",
                    "description": "Base custom fee amount refunded."
                },
                "apply_fee_on_last_invoice": {
                    "type": "boolean",
                    "description": "If apply fee is set on last invoice."
                },
                "apply_fee_on_last_creditmemo": {
                    "type": "boolean",
                    "description": "If apply fee is set on last credit memo."
                },
                "invoice_id": {
                    "type": "string",
                    "description": "Invoice id."
                },
                "creditmemo_id": {
                    "type": "string",
                    "description": "Credit memo id."
                }
            },
            "required": [
                "order_id",
                "custom_fee_code",
                "custom_fee_label",
                "custom_fee_amount",
                "base_custom_fee_amount",
                "custom_fee_amount_invoiced",
                "base_custom_fee_amount_invoiced",
                "custom_fee_amount_refunded",
                "base_custom_fee_amount_refunded",
                "apply_fee_on_last_invoice",
                "apply_fee_on_last_creditmemo"
            ]
        },
        "gift-card-account-data-gift-card-interface": {
            "type": "object",
            "description": "Gift Card data",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "code": {
                    "type": "string",
                    "description": "Code"
                },
                "amount": {
                    "type": "number",
                    "description": "Amount"
                },
                "base_amount": {
                    "type": "number",
                    "description": "Base Amount"
                }
            },
            "required": [
                "id",
                "code",
                "amount",
                "base_amount"
            ]
        },
        "sales-data-order-search-result-interface": {
            "type": "object",
            "description": "Order search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-order-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-order-status-history-search-result-interface": {
            "type": "object",
            "description": "Order status history search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-order-status-history-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-order-item-search-result-interface": {
            "type": "object",
            "description": "Order item search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-order-item-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-invoice-interface": {
            "type": "object",
            "description": "Invoice interface. An invoice is a record of the receipt of payment for an order.",
            "properties": {
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code."
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Base discount amount."
                },
                "base_grand_total": {
                    "type": "number",
                    "description": "Base grand total."
                },
                "base_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Base discount tax compensation amount."
                },
                "base_shipping_amount": {
                    "type": "number",
                    "description": "Base shipping amount."
                },
                "base_shipping_discount_tax_compensation_amnt": {
                    "type": "number",
                    "description": "Base shipping discount tax compensation amount."
                },
                "base_shipping_incl_tax": {
                    "type": "number",
                    "description": "Base shipping including tax."
                },
                "base_shipping_tax_amount": {
                    "type": "number",
                    "description": "Base shipping tax amount."
                },
                "base_subtotal": {
                    "type": "number",
                    "description": "Base subtotal."
                },
                "base_subtotal_incl_tax": {
                    "type": "number",
                    "description": "Base subtotal including tax."
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Base tax amount."
                },
                "base_total_refunded": {
                    "type": "number",
                    "description": "Base total refunded."
                },
                "base_to_global_rate": {
                    "type": "number",
                    "description": "Base-to-global rate."
                },
                "base_to_order_rate": {
                    "type": "number",
                    "description": "Base-to-order rate."
                },
                "billing_address_id": {
                    "type": "integer",
                    "description": "Billing address ID."
                },
                "can_void_flag": {
                    "type": "integer",
                    "description": "Can void flag value."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount."
                },
                "discount_description": {
                    "type": "string",
                    "description": "Discount description."
                },
                "email_sent": {
                    "type": "integer",
                    "description": "Email-sent flag value."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Invoice ID."
                },
                "global_currency_code": {
                    "type": "string",
                    "description": "Global currency code."
                },
                "grand_total": {
                    "type": "number",
                    "description": "Grand total."
                },
                "discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Discount tax compensation amount."
                },
                "increment_id": {
                    "type": "string",
                    "description": "Increment ID."
                },
                "is_used_for_refund": {
                    "type": "integer",
                    "description": "Is-used-for-refund flag value."
                },
                "order_currency_code": {
                    "type": "string",
                    "description": "Order currency code."
                },
                "order_id": {
                    "type": "integer",
                    "description": "Order ID."
                },
                "shipping_address_id": {
                    "type": "integer",
                    "description": "Shipping address ID."
                },
                "shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount."
                },
                "shipping_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Shipping discount tax compensation amount."
                },
                "shipping_incl_tax": {
                    "type": "number",
                    "description": "Shipping including tax."
                },
                "shipping_tax_amount": {
                    "type": "number",
                    "description": "Shipping tax amount."
                },
                "state": {
                    "type": "integer",
                    "description": "State."
                },
                "store_currency_code": {
                    "type": "string",
                    "description": "Store currency code."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store ID."
                },
                "store_to_base_rate": {
                    "type": "number",
                    "description": "Store-to-base rate."
                },
                "store_to_order_rate": {
                    "type": "number",
                    "description": "Store-to-order rate."
                },
                "subtotal": {
                    "type": "number",
                    "description": "Subtotal."
                },
                "subtotal_incl_tax": {
                    "type": "number",
                    "description": "Subtotal including tax."
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount."
                },
                "total_qty": {
                    "type": "number",
                    "description": "Total quantity."
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated-at timestamp."
                },
                "items": {
                    "type": "array",
                    "description": "Array of invoice items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-invoice-item-interface"
                    }
                },
                "comments": {
                    "type": "array",
                    "description": "Array of any invoice comments. Otherwise, null.",
                    "items": {
                        "$ref": "#/definitions/sales-data-invoice-comment-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-invoice-extension-interface"
                }
            },
            "required": [
                "order_id",
                "total_qty",
                "items"
            ]
        },
        "sales-data-invoice-item-interface": {
            "type": "object",
            "description": "Invoice item interface. An invoice is a record of the receipt of payment for an order. An invoice item is a purchased item in an invoice.",
            "properties": {
                "additional_data": {
                    "type": "string",
                    "description": "Additional data."
                },
                "base_cost": {
                    "type": "number",
                    "description": "Base cost."
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Base discount amount."
                },
                "base_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Base discount tax compensation amount."
                },
                "base_price": {
                    "type": "number",
                    "description": "Base price."
                },
                "base_price_incl_tax": {
                    "type": "number",
                    "description": "Base price including tax."
                },
                "base_row_total": {
                    "type": "number",
                    "description": "Base row total."
                },
                "base_row_total_incl_tax": {
                    "type": "number",
                    "description": "Base row total including tax."
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Base tax amount."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Invoice item ID."
                },
                "discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Discount tax compensation amount."
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "price": {
                    "type": "number",
                    "description": "Price."
                },
                "price_incl_tax": {
                    "type": "number",
                    "description": "Price including tax."
                },
                "product_id": {
                    "type": "integer",
                    "description": "Product ID."
                },
                "row_total": {
                    "type": "number",
                    "description": "Row total."
                },
                "row_total_incl_tax": {
                    "type": "number",
                    "description": "Row total including tax."
                },
                "sku": {
                    "type": "string",
                    "description": "SKU."
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-invoice-item-extension-interface"
                },
                "order_item_id": {
                    "type": "integer",
                    "description": "Order item ID."
                },
                "qty": {
                    "type": "number",
                    "description": "Quantity."
                }
            },
            "required": [
                "sku",
                "order_item_id",
                "qty"
            ]
        },
        "sales-data-invoice-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceItemInterface"
        },
        "sales-data-invoice-comment-interface": {
            "type": "object",
            "description": "Invoice comment interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history.",
            "properties": {
                "is_customer_notified": {
                    "type": "integer",
                    "description": "Is-customer-notified flag value."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-invoice-comment-extension-interface"
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "is_visible_on_front": {
                    "type": "integer",
                    "description": "Is-visible-on-storefront flag value."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Invoice ID."
                }
            },
            "required": [
                "is_customer_notified",
                "parent_id",
                "comment",
                "is_visible_on_front"
            ]
        },
        "sales-data-invoice-comment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCommentInterface"
        },
        "sales-data-invoice-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceInterface",
            "properties": {
                "base_customer_balance_amount": {
                    "type": "number"
                },
                "customer_balance_amount": {
                    "type": "number"
                },
                "base_gift_cards_amount": {
                    "type": "number"
                },
                "gift_cards_amount": {
                    "type": "number"
                },
                "gw_base_price": {
                    "type": "string"
                },
                "gw_price": {
                    "type": "string"
                },
                "gw_items_base_price": {
                    "type": "string"
                },
                "gw_items_price": {
                    "type": "string"
                },
                "gw_card_base_price": {
                    "type": "string"
                },
                "gw_card_price": {
                    "type": "string"
                },
                "gw_base_tax_amount": {
                    "type": "string"
                },
                "gw_tax_amount": {
                    "type": "string"
                },
                "gw_items_base_tax_amount": {
                    "type": "string"
                },
                "gw_items_tax_amount": {
                    "type": "string"
                },
                "gw_card_base_tax_amount": {
                    "type": "string"
                },
                "gw_card_tax_amount": {
                    "type": "string"
                }
            }
        },
        "sales-data-invoice-search-result-interface": {
            "type": "object",
            "description": "Invoice search result interface. An invoice is a record of the receipt of payment for an order.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-invoice-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-invoice-comment-search-result-interface": {
            "type": "object",
            "description": "Invoice comment search result interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-invoice-comment-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-creditmemo-item-creation-interface": {
            "type": "object",
            "description": "Interface CreditmemoItemCreationInterface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-creditmemo-item-creation-extension-interface"
                },
                "order_item_id": {
                    "type": "integer",
                    "description": "Order item ID."
                },
                "qty": {
                    "type": "number",
                    "description": "Quantity."
                }
            },
            "required": [
                "order_item_id",
                "qty"
            ]
        },
        "sales-data-creditmemo-item-creation-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoItemCreationInterface"
        },
        "sales-data-creditmemo-comment-creation-interface": {
            "type": "object",
            "description": "Interface CreditmemoCommentCreationInterface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-creditmemo-comment-creation-extension-interface"
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "is_visible_on_front": {
                    "type": "integer",
                    "description": "Is-visible-on-storefront flag value."
                }
            },
            "required": [
                "comment",
                "is_visible_on_front"
            ]
        },
        "sales-data-creditmemo-comment-creation-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoCommentCreationInterface"
        },
        "sales-data-creditmemo-creation-arguments-interface": {
            "type": "object",
            "description": "Interface CreditmemoCreationArgumentsInterface",
            "properties": {
                "shipping_amount": {
                    "type": "number",
                    "description": "Credit memo shipping amount."
                },
                "adjustment_positive": {
                    "type": "number",
                    "description": "Credit memo positive adjustment."
                },
                "adjustment_negative": {
                    "type": "number",
                    "description": "Credit memo negative adjustment."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-creditmemo-creation-arguments-extension-interface"
                }
            }
        },
        "sales-data-creditmemo-creation-arguments-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoCreationArgumentsInterface",
            "properties": {
                "return_to_stock_items": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "sales-data-creditmemo-comment-search-result-interface": {
            "type": "object",
            "description": "Credit memo comment search result interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-creditmemo-comment-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-creditmemo-comment-interface": {
            "type": "object",
            "description": "Credit memo comment interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer.",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Credit memo ID."
                },
                "is_customer_notified": {
                    "type": "integer",
                    "description": "Is-customer-notified flag value."
                },
                "is_visible_on_front": {
                    "type": "integer",
                    "description": "Is-visible-on-storefront flag value."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-creditmemo-comment-extension-interface"
                }
            },
            "required": [
                "comment",
                "is_customer_notified",
                "is_visible_on_front",
                "parent_id"
            ]
        },
        "sales-data-creditmemo-comment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoCommentInterface"
        },
        "sales-data-creditmemo-interface": {
            "type": "object",
            "description": "Credit memo interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.",
            "properties": {
                "adjustment": {
                    "type": "number",
                    "description": "Credit memo adjustment."
                },
                "adjustment_negative": {
                    "type": "number",
                    "description": "Credit memo negative adjustment."
                },
                "adjustment_positive": {
                    "type": "number",
                    "description": "Credit memo positive adjustment."
                },
                "base_adjustment": {
                    "type": "number",
                    "description": "Credit memo base adjustment."
                },
                "base_adjustment_negative": {
                    "type": "number",
                    "description": "Credit memo negative base adjustment."
                },
                "base_adjustment_positive": {
                    "type": "number",
                    "description": "Credit memo positive base adjustment."
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Credit memo base currency code."
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Credit memo base discount amount."
                },
                "base_grand_total": {
                    "type": "number",
                    "description": "Credit memo base grand total."
                },
                "base_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Credit memo base discount tax compensation amount."
                },
                "base_shipping_amount": {
                    "type": "number",
                    "description": "Credit memo base shipping amount."
                },
                "base_shipping_discount_tax_compensation_amnt": {
                    "type": "number",
                    "description": "Credit memo base shipping discount tax compensation amount."
                },
                "base_shipping_incl_tax": {
                    "type": "number",
                    "description": "Credit memo base shipping including tax."
                },
                "base_shipping_tax_amount": {
                    "type": "number",
                    "description": "Credit memo base shipping tax amount."
                },
                "base_subtotal": {
                    "type": "number",
                    "description": "Credit memo base subtotal."
                },
                "base_subtotal_incl_tax": {
                    "type": "number",
                    "description": "Credit memo base subtotal including tax."
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Credit memo base tax amount."
                },
                "base_to_global_rate": {
                    "type": "number",
                    "description": "Credit memo base-to-global rate."
                },
                "base_to_order_rate": {
                    "type": "number",
                    "description": "Credit memo base-to-order rate."
                },
                "billing_address_id": {
                    "type": "integer",
                    "description": "Credit memo billing address ID."
                },
                "created_at": {
                    "type": "string",
                    "description": "Credit memo created-at timestamp."
                },
                "creditmemo_status": {
                    "type": "integer",
                    "description": "Credit memo status."
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Credit memo discount amount."
                },
                "discount_description": {
                    "type": "string",
                    "description": "Credit memo discount description."
                },
                "email_sent": {
                    "type": "integer",
                    "description": "Credit memo email sent flag value."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Credit memo ID."
                },
                "global_currency_code": {
                    "type": "string",
                    "description": "Credit memo global currency code."
                },
                "grand_total": {
                    "type": "number",
                    "description": "Credit memo grand total."
                },
                "discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Credit memo discount tax compensation amount."
                },
                "increment_id": {
                    "type": "string",
                    "description": "Credit memo increment ID."
                },
                "invoice_id": {
                    "type": "integer",
                    "description": "Credit memo invoice ID."
                },
                "order_currency_code": {
                    "type": "string",
                    "description": "Credit memo order currency code."
                },
                "order_id": {
                    "type": "integer",
                    "description": "Credit memo order ID."
                },
                "shipping_address_id": {
                    "type": "integer",
                    "description": "Credit memo shipping address ID."
                },
                "shipping_amount": {
                    "type": "number",
                    "description": "Credit memo shipping amount."
                },
                "shipping_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Credit memo shipping discount tax compensation amount."
                },
                "shipping_incl_tax": {
                    "type": "number",
                    "description": "Credit memo shipping including tax."
                },
                "shipping_tax_amount": {
                    "type": "number",
                    "description": "Credit memo shipping tax amount."
                },
                "state": {
                    "type": "integer",
                    "description": "Credit memo state."
                },
                "store_currency_code": {
                    "type": "string",
                    "description": "Credit memo store currency code."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Credit memo store ID."
                },
                "store_to_base_rate": {
                    "type": "number",
                    "description": "Credit memo store-to-base rate."
                },
                "store_to_order_rate": {
                    "type": "number",
                    "description": "Credit memo store-to-order rate."
                },
                "subtotal": {
                    "type": "number",
                    "description": "Credit memo subtotal."
                },
                "subtotal_incl_tax": {
                    "type": "number",
                    "description": "Credit memo subtotal including tax."
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Credit memo tax amount."
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Credit memo transaction ID."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Credit memo updated-at timestamp."
                },
                "items": {
                    "type": "array",
                    "description": "Array of credit memo items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-creditmemo-item-interface"
                    }
                },
                "comments": {
                    "type": "array",
                    "description": "Array of any credit memo comments. Otherwise, null.",
                    "items": {
                        "$ref": "#/definitions/sales-data-creditmemo-comment-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-creditmemo-extension-interface"
                }
            },
            "required": [
                "order_id",
                "items"
            ]
        },
        "sales-data-creditmemo-item-interface": {
            "type": "object",
            "description": "Credit memo item interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo item is an invoiced item for which a merchant creates a credit memo.",
            "properties": {
                "additional_data": {
                    "type": "string",
                    "description": "Additional data."
                },
                "base_cost": {
                    "type": "number",
                    "description": "The base cost for a credit memo item."
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "The base discount amount for a credit memo item."
                },
                "base_discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "The base discount tax compensation amount for a credit memo item."
                },
                "base_price": {
                    "type": "number",
                    "description": "The base price for a credit memo item."
                },
                "base_price_incl_tax": {
                    "type": "number",
                    "description": "Base price including tax."
                },
                "base_row_total": {
                    "type": "number",
                    "description": "Base row total."
                },
                "base_row_total_incl_tax": {
                    "type": "number",
                    "description": "Base row total including tax."
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Base tax amount."
                },
                "base_weee_tax_applied_amount": {
                    "type": "number",
                    "description": "Base WEEE tax applied amount."
                },
                "base_weee_tax_applied_row_amnt": {
                    "type": "number",
                    "description": "Base WEEE tax applied row amount."
                },
                "base_weee_tax_disposition": {
                    "type": "number",
                    "description": "Base WEEE tax disposition."
                },
                "base_weee_tax_row_disposition": {
                    "type": "number",
                    "description": "Base WEEE tax row disposition."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Credit memo item ID."
                },
                "discount_tax_compensation_amount": {
                    "type": "number",
                    "description": "Discount tax compensation amount."
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "order_item_id": {
                    "type": "integer",
                    "description": "Order item ID."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "price": {
                    "type": "number",
                    "description": "Price."
                },
                "price_incl_tax": {
                    "type": "number",
                    "description": "Price including tax."
                },
                "product_id": {
                    "type": "integer",
                    "description": "Product ID."
                },
                "qty": {
                    "type": "number",
                    "description": "Quantity."
                },
                "row_total": {
                    "type": "number",
                    "description": "Row total."
                },
                "row_total_incl_tax": {
                    "type": "number",
                    "description": "Row total including tax."
                },
                "sku": {
                    "type": "string",
                    "description": "SKU."
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount."
                },
                "weee_tax_applied": {
                    "type": "string",
                    "description": "WEEE tax applied."
                },
                "weee_tax_applied_amount": {
                    "type": "number",
                    "description": "WEEE tax applied amount."
                },
                "weee_tax_applied_row_amount": {
                    "type": "number",
                    "description": "WEEE tax applied row amount."
                },
                "weee_tax_disposition": {
                    "type": "number",
                    "description": "WEEE tax disposition."
                },
                "weee_tax_row_disposition": {
                    "type": "number",
                    "description": "WEEE tax row disposition."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-creditmemo-item-extension-interface"
                }
            },
            "required": [
                "base_cost",
                "base_price",
                "entity_id",
                "order_item_id",
                "qty"
            ]
        },
        "sales-data-creditmemo-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoItemInterface"
        },
        "sales-data-creditmemo-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoInterface",
            "properties": {
                "base_customer_balance_amount": {
                    "type": "number"
                },
                "customer_balance_amount": {
                    "type": "number"
                },
                "base_gift_cards_amount": {
                    "type": "number"
                },
                "gift_cards_amount": {
                    "type": "number"
                },
                "gw_base_price": {
                    "type": "string"
                },
                "gw_price": {
                    "type": "string"
                },
                "gw_items_base_price": {
                    "type": "string"
                },
                "gw_items_price": {
                    "type": "string"
                },
                "gw_card_base_price": {
                    "type": "string"
                },
                "gw_card_price": {
                    "type": "string"
                },
                "gw_base_tax_amount": {
                    "type": "string"
                },
                "gw_tax_amount": {
                    "type": "string"
                },
                "gw_items_base_tax_amount": {
                    "type": "string"
                },
                "gw_items_tax_amount": {
                    "type": "string"
                },
                "gw_card_base_tax_amount": {
                    "type": "string"
                },
                "gw_card_tax_amount": {
                    "type": "string"
                }
            }
        },
        "sales-data-creditmemo-search-result-interface": {
            "type": "object",
            "description": "Credit memo search result interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-creditmemo-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-shipment-interface": {
            "type": "object",
            "description": "Shipment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. This interface creates shipment record without items quantity (total_qty) validation. To validate total shipped quantity for each item in the order you must use newer `POST /V1/order/:orderId/ship` endpoint.",
            "properties": {
                "billing_address_id": {
                    "type": "integer",
                    "description": "Billing address ID."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID."
                },
                "email_sent": {
                    "type": "integer",
                    "description": "Email-sent flag value."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Shipment ID."
                },
                "increment_id": {
                    "type": "string",
                    "description": "Increment ID."
                },
                "order_id": {
                    "type": "integer",
                    "description": "Order ID."
                },
                "packages": {
                    "type": "array",
                    "description": "Array of packages, if any. Otherwise, null.",
                    "items": {
                        "$ref": "#/definitions/sales-data-shipment-package-interface"
                    }
                },
                "shipment_status": {
                    "type": "integer",
                    "description": "Shipment status."
                },
                "shipping_address_id": {
                    "type": "integer",
                    "description": "Shipping address ID."
                },
                "shipping_label": {
                    "type": "string",
                    "description": "Shipping label."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store ID."
                },
                "total_qty": {
                    "type": "number",
                    "description": "Total quantity."
                },
                "total_weight": {
                    "type": "number",
                    "description": "Total weight."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated-at timestamp."
                },
                "items": {
                    "type": "array",
                    "description": "Array of items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-shipment-item-interface"
                    }
                },
                "tracks": {
                    "type": "array",
                    "description": "Array of tracks.",
                    "items": {
                        "$ref": "#/definitions/sales-data-shipment-track-interface"
                    }
                },
                "comments": {
                    "type": "array",
                    "description": "Array of comments.",
                    "items": {
                        "$ref": "#/definitions/sales-data-shipment-comment-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-extension-interface"
                }
            },
            "required": [
                "order_id",
                "items",
                "tracks",
                "comments"
            ]
        },
        "sales-data-shipment-package-interface": {
            "type": "object",
            "description": "Shipment package interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-package-extension-interface"
                }
            }
        },
        "sales-data-shipment-package-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentPackageInterface"
        },
        "sales-data-shipment-item-interface": {
            "type": "object",
            "description": "Shipment item interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A product is an item in a shipment.",
            "properties": {
                "additional_data": {
                    "type": "string",
                    "description": "Additional data."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Shipment item ID."
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "price": {
                    "type": "number",
                    "description": "Price."
                },
                "product_id": {
                    "type": "integer",
                    "description": "Product ID."
                },
                "row_total": {
                    "type": "number",
                    "description": "Row total."
                },
                "sku": {
                    "type": "string",
                    "description": "SKU."
                },
                "weight": {
                    "type": "number",
                    "description": "Weight."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-item-extension-interface"
                },
                "order_item_id": {
                    "type": "integer",
                    "description": "Order item ID."
                },
                "qty": {
                    "type": "number",
                    "description": "Quantity."
                }
            },
            "required": [
                "order_item_id",
                "qty"
            ]
        },
        "sales-data-shipment-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemInterface"
        },
        "sales-data-shipment-track-interface": {
            "type": "object",
            "description": "Shipment track interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. Merchants and customers can track shipments.",
            "properties": {
                "order_id": {
                    "type": "integer",
                    "description": "The order_id for the shipment package."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Shipment package ID."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated-at timestamp."
                },
                "weight": {
                    "type": "number",
                    "description": "Weight."
                },
                "qty": {
                    "type": "number",
                    "description": "Quantity."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-track-extension-interface"
                },
                "track_number": {
                    "type": "string",
                    "description": "Track number."
                },
                "title": {
                    "type": "string",
                    "description": "Title."
                },
                "carrier_code": {
                    "type": "string",
                    "description": "Carrier code."
                }
            },
            "required": [
                "order_id",
                "parent_id",
                "weight",
                "qty",
                "description",
                "track_number",
                "title",
                "carrier_code"
            ]
        },
        "sales-data-shipment-track-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentTrackInterface"
        },
        "sales-data-shipment-comment-interface": {
            "type": "object",
            "description": "Shipment comment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments.",
            "properties": {
                "is_customer_notified": {
                    "type": "integer",
                    "description": "Is-customer-notified flag value."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent ID."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-comment-extension-interface"
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "is_visible_on_front": {
                    "type": "integer",
                    "description": "Is-visible-on-storefront flag value."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Invoice ID."
                }
            },
            "required": [
                "is_customer_notified",
                "parent_id",
                "comment",
                "is_visible_on_front"
            ]
        },
        "sales-data-shipment-comment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentCommentInterface"
        },
        "sales-data-shipment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentInterface",
            "properties": {
                "source_code": {
                    "type": "string"
                }
            }
        },
        "sales-data-shipment-search-result-interface": {
            "type": "object",
            "description": "Shipment search result interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-shipment-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-shipment-comment-search-result-interface": {
            "type": "object",
            "description": "Shipment comment search result interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-shipment-comment-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-shipment-item-creation-interface": {
            "type": "object",
            "description": "Input argument for shipment item creation Interface ShipmentItemCreationInterface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-item-creation-extension-interface"
                },
                "order_item_id": {
                    "type": "integer",
                    "description": "Order item ID."
                },
                "qty": {
                    "type": "number",
                    "description": "Quantity."
                }
            },
            "required": [
                "order_item_id",
                "qty"
            ]
        },
        "sales-data-shipment-item-creation-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemCreationInterface"
        },
        "sales-data-shipment-comment-creation-interface": {
            "type": "object",
            "description": "Interface ShipmentCommentCreationInterface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-comment-creation-extension-interface"
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "is_visible_on_front": {
                    "type": "integer",
                    "description": "Is-visible-on-storefront flag value."
                }
            },
            "required": [
                "comment",
                "is_visible_on_front"
            ]
        },
        "sales-data-shipment-comment-creation-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentCommentCreationInterface"
        },
        "sales-data-shipment-track-creation-interface": {
            "type": "object",
            "description": "Shipment Track Creation interface.",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-track-creation-extension-interface"
                },
                "track_number": {
                    "type": "string",
                    "description": "Track number."
                },
                "title": {
                    "type": "string",
                    "description": "Title."
                },
                "carrier_code": {
                    "type": "string",
                    "description": "Carrier code."
                }
            },
            "required": [
                "track_number",
                "title",
                "carrier_code"
            ]
        },
        "sales-data-shipment-track-creation-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentTrackCreationInterface"
        },
        "sales-data-shipment-package-creation-interface": {
            "type": "object",
            "description": "Shipment package interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-package-creation-extension-interface"
                }
            }
        },
        "sales-data-shipment-package-creation-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentPackageCreationInterface"
        },
        "sales-data-shipment-creation-arguments-interface": {
            "type": "object",
            "description": "Interface for creation arguments for Shipment.",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-shipment-creation-arguments-extension-interface"
                }
            }
        },
        "sales-data-shipment-creation-arguments-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentCreationArgumentsInterface",
            "properties": {
                "source_code": {
                    "type": "string"
                }
            }
        },
        "sales-data-transaction-interface": {
            "type": "object",
            "description": "Transaction interface. A transaction is an interaction between a merchant and a customer such as a purchase, a credit, a refund, and so on.",
            "properties": {
                "transaction_id": {
                    "type": "integer",
                    "description": "Transaction ID."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "The parent ID for the transaction. Otherwise, null."
                },
                "order_id": {
                    "type": "integer",
                    "description": "Order ID."
                },
                "payment_id": {
                    "type": "integer",
                    "description": "Payment ID."
                },
                "txn_id": {
                    "type": "string",
                    "description": "Transaction business ID."
                },
                "parent_txn_id": {
                    "type": "string",
                    "description": "Parent transaction business ID."
                },
                "txn_type": {
                    "type": "string",
                    "description": "Transaction type."
                },
                "is_closed": {
                    "type": "integer",
                    "description": "Is-closed flag value."
                },
                "additional_information": {
                    "type": "array",
                    "description": "Array of additional information. Otherwise, null.",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string",
                    "description": "Created-at timestamp."
                },
                "child_transactions": {
                    "type": "array",
                    "description": "Array of child transactions.",
                    "items": {
                        "$ref": "#/definitions/sales-data-transaction-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-transaction-extension-interface"
                }
            },
            "required": [
                "transaction_id",
                "order_id",
                "payment_id",
                "txn_id",
                "parent_txn_id",
                "txn_type",
                "is_closed",
                "created_at",
                "child_transactions"
            ]
        },
        "sales-data-transaction-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TransactionInterface"
        },
        "sales-data-transaction-search-result-interface": {
            "type": "object",
            "description": "Transaction search result interface. A transaction is an interaction between a merchant and a customer such as a purchase, a credit, a refund, and so on.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Array of collection items.",
                    "items": {
                        "$ref": "#/definitions/sales-data-transaction-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-data-invoice-item-creation-interface": {
            "type": "object",
            "description": "Input argument for invoice creation Interface InvoiceItemCreationInterface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-invoice-item-creation-extension-interface"
                },
                "order_item_id": {
                    "type": "integer",
                    "description": "Order item ID."
                },
                "qty": {
                    "type": "number",
                    "description": "Quantity."
                }
            },
            "required": [
                "order_item_id",
                "qty"
            ]
        },
        "sales-data-invoice-item-creation-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceItemCreationInterface"
        },
        "sales-data-invoice-comment-creation-interface": {
            "type": "object",
            "description": "Interface InvoiceCommentCreationInterface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-invoice-comment-creation-extension-interface"
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "is_visible_on_front": {
                    "type": "integer",
                    "description": "Is-visible-on-storefront flag value."
                }
            },
            "required": [
                "comment",
                "is_visible_on_front"
            ]
        },
        "sales-data-invoice-comment-creation-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCommentCreationInterface"
        },
        "sales-data-invoice-creation-arguments-interface": {
            "type": "object",
            "description": "Interface for creation arguments for Invoice.",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/sales-data-invoice-creation-arguments-extension-interface"
                }
            }
        },
        "sales-data-invoice-creation-arguments-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCreationArgumentsInterface"
        },
        "sales-rule-data-rule-interface": {
            "type": "object",
            "description": "Interface RuleInterface",
            "properties": {
                "rule_id": {
                    "type": "integer",
                    "description": "Rule id"
                },
                "name": {
                    "type": "string",
                    "description": "Rule name"
                },
                "store_labels": {
                    "type": "array",
                    "description": "Display label",
                    "items": {
                        "$ref": "#/definitions/sales-rule-data-rule-label-interface"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description"
                },
                "website_ids": {
                    "type": "array",
                    "description": "A list of websites the rule applies to",
                    "items": {
                        "type": "integer"
                    }
                },
                "customer_group_ids": {
                    "type": "array",
                    "description": "Ids of customer groups that the rule applies to",
                    "items": {
                        "type": "integer"
                    }
                },
                "from_date": {
                    "type": "string",
                    "description": "The start date when the coupon is active"
                },
                "to_date": {
                    "type": "string",
                    "description": "The end date when the coupon is active"
                },
                "uses_per_customer": {
                    "type": "integer",
                    "description": "Number of uses per customer"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "The coupon is active"
                },
                "condition": {
                    "$ref": "#/definitions/sales-rule-data-condition-interface"
                },
                "action_condition": {
                    "$ref": "#/definitions/sales-rule-data-condition-interface"
                },
                "stop_rules_processing": {
                    "type": "boolean",
                    "description": "To stop rule processing"
                },
                "is_advanced": {
                    "type": "boolean",
                    "description": "Is this field needed"
                },
                "product_ids": {
                    "type": "array",
                    "description": "Product ids",
                    "items": {
                        "type": "integer"
                    }
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Sort order"
                },
                "simple_action": {
                    "type": "string",
                    "description": "Simple action of the rule"
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount"
                },
                "discount_qty": {
                    "type": "number",
                    "description": "Maximum qty discount is applied"
                },
                "discount_step": {
                    "type": "integer",
                    "description": "Discount step"
                },
                "apply_to_shipping": {
                    "type": "boolean",
                    "description": "The rule applies to shipping"
                },
                "times_used": {
                    "type": "integer",
                    "description": "How many times the rule has been used"
                },
                "is_rss": {
                    "type": "boolean",
                    "description": "Whether the rule is in RSS"
                },
                "coupon_type": {
                    "type": "string",
                    "description": "Coupon type"
                },
                "use_auto_generation": {
                    "type": "boolean",
                    "description": "To auto generate coupon"
                },
                "uses_per_coupon": {
                    "type": "integer",
                    "description": "Limit of uses per coupon"
                },
                "simple_free_shipping": {
                    "type": "string",
                    "description": "To grant free shipping"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-rule-data-rule-extension-interface"
                }
            },
            "required": [
                "website_ids",
                "customer_group_ids",
                "uses_per_customer",
                "is_active",
                "stop_rules_processing",
                "is_advanced",
                "sort_order",
                "discount_amount",
                "discount_step",
                "apply_to_shipping",
                "times_used",
                "is_rss",
                "coupon_type",
                "use_auto_generation",
                "uses_per_coupon"
            ]
        },
        "sales-rule-data-rule-label-interface": {
            "type": "object",
            "description": "Interface RuleLabelInterface",
            "properties": {
                "store_id": {
                    "type": "integer",
                    "description": "StoreId"
                },
                "store_label": {
                    "type": "string",
                    "description": "The label for the store"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-rule-data-rule-label-extension-interface"
                }
            },
            "required": [
                "store_id",
                "store_label"
            ]
        },
        "sales-rule-data-rule-label-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\RuleLabelInterface"
        },
        "sales-rule-data-condition-interface": {
            "type": "object",
            "description": "Interface ConditionInterface",
            "properties": {
                "condition_type": {
                    "type": "string",
                    "description": "Condition type"
                },
                "conditions": {
                    "type": "array",
                    "description": "List of conditions",
                    "items": {
                        "$ref": "#/definitions/sales-rule-data-condition-interface"
                    }
                },
                "aggregator_type": {
                    "type": "string",
                    "description": "The aggregator type"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator of the condition"
                },
                "attribute_name": {
                    "type": "string",
                    "description": "The attribute name of the condition"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the condition"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-rule-data-condition-extension-interface"
                }
            },
            "required": [
                "condition_type",
                "operator",
                "value"
            ]
        },
        "sales-rule-data-condition-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\ConditionInterface"
        },
        "sales-rule-data-rule-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\RuleInterface",
            "properties": {
                "reward_points_delta": {
                    "type": "integer"
                }
            }
        },
        "sales-rule-data-rule-search-result-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Rules.",
                    "items": {
                        "$ref": "#/definitions/sales-rule-data-rule-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-rule-data-coupon-interface": {
            "type": "object",
            "description": "Interface CouponInterface",
            "properties": {
                "coupon_id": {
                    "type": "integer",
                    "description": "Coupon id"
                },
                "rule_id": {
                    "type": "integer",
                    "description": "The id of the rule associated with the coupon"
                },
                "code": {
                    "type": "string",
                    "description": "Coupon code"
                },
                "usage_limit": {
                    "type": "integer",
                    "description": "Usage limit"
                },
                "usage_per_customer": {
                    "type": "integer",
                    "description": "Usage limit per customer"
                },
                "times_used": {
                    "type": "integer",
                    "description": "The number of times the coupon has been used"
                },
                "expiration_date": {
                    "type": "string",
                    "description": "Expiration date"
                },
                "is_primary": {
                    "type": "boolean",
                    "description": "The coupon is primary coupon for the rule that it's associated with"
                },
                "created_at": {
                    "type": "string",
                    "description": "When the coupon is created"
                },
                "type": {
                    "type": "integer",
                    "description": "Of coupon"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-rule-data-coupon-extension-interface"
                }
            },
            "required": [
                "rule_id",
                "times_used",
                "is_primary"
            ]
        },
        "sales-rule-data-coupon-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponInterface"
        },
        "sales-rule-data-coupon-search-result-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Rules.",
                    "items": {
                        "$ref": "#/definitions/sales-rule-data-coupon-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "sales-rule-data-coupon-generation-spec-interface": {
            "type": "object",
            "description": "CouponGenerationSpecInterface",
            "properties": {
                "rule_id": {
                    "type": "integer",
                    "description": "The id of the rule associated with the coupon"
                },
                "format": {
                    "type": "string",
                    "description": "Format of generated coupon code"
                },
                "quantity": {
                    "type": "integer",
                    "description": "Of coupons to generate"
                },
                "length": {
                    "type": "integer",
                    "description": "Length of coupon code"
                },
                "prefix": {
                    "type": "string",
                    "description": "The prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "The suffix"
                },
                "delimiter_at_every": {
                    "type": "integer",
                    "description": "The spacing where the delimiter should exist"
                },
                "delimiter": {
                    "type": "string",
                    "description": "The delimiter"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/sales-rule-data-coupon-generation-spec-extension-interface"
                }
            },
            "required": [
                "rule_id",
                "format",
                "quantity",
                "length"
            ]
        },
        "sales-rule-data-coupon-generation-spec-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponGenerationSpecInterface"
        },
        "sales-rule-data-coupon-mass-delete-result-interface": {
            "type": "object",
            "description": "Coupon mass delete results interface.",
            "properties": {
                "failed_items": {
                    "type": "array",
                    "description": "List of failed items.",
                    "items": {
                        "type": "string"
                    }
                },
                "missing_items": {
                    "type": "array",
                    "description": "List of missing items.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "failed_items",
                "missing_items"
            ]
        },
        "bundle-data-option-type-interface": {
            "type": "object",
            "description": "Interface OptionTypeInterface",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Type label"
                },
                "code": {
                    "type": "string",
                    "description": "Type code"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-option-type-extension-interface"
                }
            },
            "required": [
                "label",
                "code"
            ]
        },
        "bundle-data-option-type-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionTypeInterface"
        },
        "checkout-data-shipping-information-interface": {
            "type": "object",
            "description": "Interface ShippingInformationInterface",
            "properties": {
                "shipping_address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "billing_address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "shipping_method_code": {
                    "type": "string",
                    "description": "Shipping method code"
                },
                "shipping_carrier_code": {
                    "type": "string",
                    "description": "Carrier code"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/checkout-data-shipping-information-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "shipping_address",
                "shipping_method_code",
                "shipping_carrier_code"
            ]
        },
        "checkout-data-shipping-information-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface"
        },
        "checkout-data-payment-details-interface": {
            "type": "object",
            "description": "Interface PaymentDetailsInterface",
            "properties": {
                "payment_methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/quote-data-payment-method-interface"
                    }
                },
                "totals": {
                    "$ref": "#/definitions/quote-data-totals-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/checkout-data-payment-details-extension-interface"
                }
            },
            "required": [
                "payment_methods",
                "totals"
            ]
        },
        "checkout-data-payment-details-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\PaymentDetailsInterface"
        },
        "checkout-data-totals-information-interface": {
            "type": "object",
            "description": "Interface TotalsInformationInterface",
            "properties": {
                "address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "shipping_method_code": {
                    "type": "string",
                    "description": "Shipping method code"
                },
                "shipping_carrier_code": {
                    "type": "string",
                    "description": "Carrier code"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/checkout-data-totals-information-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "address"
            ]
        },
        "checkout-data-totals-information-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\TotalsInformationInterface"
        },
        "commerce-backend-uix-data-mass-action-failed-request-interface": {
            "type": "object",
            "description": "Defines the mass actions failed requests database model",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Internal id"
                },
                "request_id": {
                    "type": "string",
                    "description": "Request id"
                },
                "action_id": {
                    "type": "string",
                    "description": "Action id"
                },
                "grid_type": {
                    "type": "string",
                    "description": "Ui grid type"
                },
                "error_status": {
                    "type": "string",
                    "description": "Error status"
                },
                "error_message": {
                    "type": "string",
                    "description": "Error message"
                },
                "request_timestamp": {
                    "type": "string",
                    "description": "Request timestamp"
                },
                "selected_ids": {
                    "type": "string",
                    "description": "Selected ids"
                }
            },
            "required": [
                "request_id",
                "action_id",
                "grid_type",
                "error_status",
                "error_message",
                "request_timestamp",
                "selected_ids"
            ]
        },
        "company-data-company-search-results-interface": {
            "type": "object",
            "description": "Interface for company search results",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Companies list",
                    "items": {
                        "$ref": "#/definitions/company-data-company-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-data-company-interface": {
            "type": "object",
            "description": "Interface for Company entity.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id."
                },
                "status": {
                    "type": "integer",
                    "description": "Status."
                },
                "company_name": {
                    "type": "string",
                    "description": "Company name."
                },
                "legal_name": {
                    "type": "string",
                    "description": "Legal name."
                },
                "company_email": {
                    "type": "string",
                    "description": "Company email."
                },
                "vat_tax_id": {
                    "type": "string",
                    "description": "Vat tax id."
                },
                "reseller_id": {
                    "type": "string",
                    "description": "Reseller Id."
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "street": {
                    "type": "array",
                    "description": "Street.",
                    "items": {
                        "type": "string"
                    }
                },
                "city": {
                    "type": "string",
                    "description": "City."
                },
                "country_id": {
                    "type": "string",
                    "description": "Country."
                },
                "region": {
                    "type": "string",
                    "description": "Region."
                },
                "region_id": {
                    "type": "string",
                    "description": "Region Id."
                },
                "postcode": {
                    "type": "string",
                    "description": "Postcode."
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone."
                },
                "customer_group_id": {
                    "type": "integer",
                    "description": "Customer Group Id."
                },
                "sales_representative_id": {
                    "type": "integer",
                    "description": "Sales Representative Id."
                },
                "reject_reason": {
                    "type": "string",
                    "description": "Reject Reason."
                },
                "rejected_at": {
                    "type": "string",
                    "description": "Rejected at time."
                },
                "super_user_id": {
                    "type": "integer",
                    "description": "Company admin customer id."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-company-extension-interface"
                }
            },
            "required": [
                "street",
                "customer_group_id",
                "sales_representative_id",
                "reject_reason",
                "rejected_at",
                "super_user_id"
            ]
        },
        "company-data-company-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyInterface",
            "properties": {
                "applicable_payment_method": {
                    "type": "integer"
                },
                "available_payment_methods": {
                    "type": "string"
                },
                "use_config_settings": {
                    "type": "integer"
                },
                "quote_config": {
                    "$ref": "#/definitions/negotiable-quote-data-company-quote-config-interface"
                },
                "is_purchase_order_enabled": {
                    "type": "boolean"
                },
                "applicable_shipping_method": {
                    "type": "integer"
                },
                "available_shipping_methods": {
                    "type": "string"
                },
                "use_config_settings_shipping": {
                    "type": "integer"
                }
            }
        },
        "negotiable-quote-data-company-quote-config-interface": {
            "type": "object",
            "description": "Interface CompanyQuoteConfigInterface",
            "properties": {
                "company_id": {
                    "type": "string",
                    "description": "Company id"
                },
                "is_quote_enabled": {
                    "type": "boolean",
                    "description": "Quote enabled for company"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-company-quote-config-extension-interface"
                }
            },
            "required": [
                "is_quote_enabled"
            ]
        },
        "negotiable-quote-data-company-quote-config-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CompanyQuoteConfigInterface"
        },
        "company-data-team-search-results-interface": {
            "type": "object",
            "description": "Interface for company team search results",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Teams list",
                    "items": {
                        "$ref": "#/definitions/company-data-team-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-data-team-interface": {
            "type": "object",
            "description": "Team interface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID"
                },
                "name": {
                    "type": "string",
                    "description": "Name"
                },
                "description": {
                    "type": "string",
                    "description": "Description"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-team-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            }
        },
        "company-data-team-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\TeamInterface"
        },
        "company-data-hierarchy-interface": {
            "type": "object",
            "description": "Company hierarchy DTO interface for WebAPI.",
            "properties": {
                "structure_id": {
                    "type": "integer",
                    "description": "Structure ID."
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Entity ID."
                },
                "entity_type": {
                    "type": "string",
                    "description": "Entity type."
                },
                "structure_parent_id": {
                    "type": "integer",
                    "description": "Structure parent ID."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-hierarchy-extension-interface"
                }
            }
        },
        "company-data-hierarchy-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\HierarchyInterface"
        },
        "company-data-role-search-results-interface": {
            "type": "object",
            "description": "Interface for role search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Roles list.",
                    "items": {
                        "$ref": "#/definitions/company-data-role-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-data-role-interface": {
            "type": "object",
            "description": "Role data transfer object interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Role id."
                },
                "role_name": {
                    "type": "string",
                    "description": "Role name."
                },
                "permissions": {
                    "type": "array",
                    "description": "Permissions.",
                    "items": {
                        "$ref": "#/definitions/company-data-permission-interface"
                    }
                },
                "company_id": {
                    "type": "integer",
                    "description": "Company id."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-data-role-extension-interface"
                }
            },
            "required": [
                "permissions"
            ]
        },
        "company-data-permission-interface": {
            "type": "object",
            "description": "Permission interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id."
                },
                "role_id": {
                    "type": "integer",
                    "description": "Role id."
                },
                "resource_id": {
                    "type": "string",
                    "description": "Resource id."
                },
                "permission": {
                    "type": "string",
                    "description": "Permission."
                }
            },
            "required": [
                "resource_id",
                "permission"
            ]
        },
        "company-data-role-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\RoleInterface"
        },
        "company-data-company-customer-search-results-interface": {
            "type": "object",
            "description": "Interface for company customer attributes search results",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Company customer attributes list",
                    "items": {
                        "$ref": "#/definitions/company-data-company-customer-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "tax-data-tax-rate-interface": {
            "type": "object",
            "description": "Tax rate interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "tax_country_id": {
                    "type": "string",
                    "description": "Country id"
                },
                "tax_region_id": {
                    "type": "integer",
                    "description": "Region id"
                },
                "region_name": {
                    "type": "string",
                    "description": "Region name"
                },
                "tax_postcode": {
                    "type": "string",
                    "description": "Postcode"
                },
                "zip_is_range": {
                    "type": "integer",
                    "description": "Zip is range"
                },
                "zip_from": {
                    "type": "integer",
                    "description": "Zip range from"
                },
                "zip_to": {
                    "type": "integer",
                    "description": "Zip range to"
                },
                "rate": {
                    "type": "number",
                    "description": "Tax rate in percentage"
                },
                "code": {
                    "type": "string",
                    "description": "Tax rate code"
                },
                "titles": {
                    "type": "array",
                    "description": "Tax rate titles",
                    "items": {
                        "$ref": "#/definitions/tax-data-tax-rate-title-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/tax-data-tax-rate-extension-interface"
                }
            },
            "required": [
                "tax_country_id",
                "rate",
                "code"
            ]
        },
        "tax-data-tax-rate-title-interface": {
            "type": "object",
            "description": "Tax rate title interface.",
            "properties": {
                "store_id": {
                    "type": "string",
                    "description": "Store id"
                },
                "value": {
                    "type": "string",
                    "description": "Title value"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/tax-data-tax-rate-title-extension-interface"
                }
            },
            "required": [
                "store_id",
                "value"
            ]
        },
        "tax-data-tax-rate-title-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxRateTitleInterface"
        },
        "tax-data-tax-rate-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxRateInterface"
        },
        "tax-data-tax-rate-search-results-interface": {
            "type": "object",
            "description": "Interface for tax rate search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Items",
                    "items": {
                        "$ref": "#/definitions/tax-data-tax-rate-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "tax-data-tax-rule-interface": {
            "type": "object",
            "description": "Tax rule interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "code": {
                    "type": "string",
                    "description": "Tax rule code"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority"
                },
                "position": {
                    "type": "integer",
                    "description": "Sort order."
                },
                "customer_tax_class_ids": {
                    "type": "array",
                    "description": "Customer tax class id",
                    "items": {
                        "type": "integer"
                    }
                },
                "product_tax_class_ids": {
                    "type": "array",
                    "description": "Product tax class id",
                    "items": {
                        "type": "integer"
                    }
                },
                "tax_rate_ids": {
                    "type": "array",
                    "description": "Tax rate ids",
                    "items": {
                        "type": "integer"
                    }
                },
                "calculate_subtotal": {
                    "type": "boolean",
                    "description": "Calculate subtotal."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/tax-data-tax-rule-extension-interface"
                }
            },
            "required": [
                "code",
                "priority",
                "position",
                "customer_tax_class_ids",
                "product_tax_class_ids",
                "tax_rate_ids"
            ]
        },
        "tax-data-tax-rule-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxRuleInterface"
        },
        "tax-data-tax-rule-search-results-interface": {
            "type": "object",
            "description": "Interface for tax rule search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Items",
                    "items": {
                        "$ref": "#/definitions/tax-data-tax-rule-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "tax-data-tax-class-interface": {
            "type": "object",
            "description": "Tax class interface.",
            "properties": {
                "class_id": {
                    "type": "integer",
                    "description": "Tax class ID."
                },
                "class_name": {
                    "type": "string",
                    "description": "Tax class name."
                },
                "class_type": {
                    "type": "string",
                    "description": "Tax class type."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/tax-data-tax-class-extension-interface"
                }
            },
            "required": [
                "class_name",
                "class_type"
            ]
        },
        "tax-data-tax-class-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxClassInterface"
        },
        "tax-data-tax-class-search-results-interface": {
            "type": "object",
            "description": "Interface for tax class search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Items",
                    "items": {
                        "$ref": "#/definitions/tax-data-tax-class-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "checkout-agreements-data-agreement-interface": {
            "type": "object",
            "description": "Interface AgreementInterface",
            "properties": {
                "agreement_id": {
                    "type": "integer",
                    "description": "Agreement ID."
                },
                "name": {
                    "type": "string",
                    "description": "Agreement name."
                },
                "content": {
                    "type": "string",
                    "description": "Agreement content."
                },
                "content_height": {
                    "type": "string",
                    "description": "Agreement content height. Otherwise, null."
                },
                "checkbox_text": {
                    "type": "string",
                    "description": "Agreement checkbox text."
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Agreement status."
                },
                "is_html": {
                    "type": "boolean",
                    "description": "* true - HTML. * false - plain text."
                },
                "mode": {
                    "type": "integer",
                    "description": "The agreement applied mode."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/checkout-agreements-data-agreement-extension-interface"
                }
            },
            "required": [
                "agreement_id",
                "name",
                "content",
                "checkbox_text",
                "is_active",
                "is_html",
                "mode"
            ]
        },
        "checkout-agreements-data-agreement-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\CheckoutAgreements\\Api\\Data\\AgreementInterface"
        },
        "negotiable-quote-data-attachment-content-interface": {
            "type": "object",
            "description": "Attachment files content interface.",
            "properties": {
                "base64_encoded_data": {
                    "type": "string",
                    "description": "Media data (base64 encoded content)."
                },
                "type": {
                    "type": "string",
                    "description": "MIME type."
                },
                "name": {
                    "type": "string",
                    "description": "File name."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-attachment-content-extension-interface"
                }
            },
            "required": [
                "base64_encoded_data",
                "type",
                "name"
            ]
        },
        "negotiable-quote-data-attachment-content-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\AttachmentContentInterface"
        },
        "negotiable-quote-data-comment-interface": {
            "type": "object",
            "description": "Interface CommentInterface",
            "properties": {
                "entity_id": {
                    "type": "integer",
                    "description": "Comment ID."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Negotiable quote ID, that this comment belongs to."
                },
                "creator_type": {
                    "type": "integer",
                    "description": "The comment creator type."
                },
                "is_decline": {
                    "type": "integer",
                    "description": "Is quote was declined by seller."
                },
                "is_draft": {
                    "type": "integer",
                    "description": "Is quote draft flag."
                },
                "creator_id": {
                    "type": "integer",
                    "description": "Comment creator ID."
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                },
                "created_at": {
                    "type": "string",
                    "description": "Comment created at."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-comment-extension-interface"
                },
                "attachments": {
                    "type": "array",
                    "description": "Existing attachments.",
                    "items": {
                        "$ref": "#/definitions/negotiable-quote-data-comment-attachment-interface"
                    }
                }
            },
            "required": [
                "entity_id",
                "parent_id",
                "creator_type",
                "is_decline",
                "is_draft",
                "creator_id",
                "comment",
                "created_at",
                "attachments"
            ]
        },
        "negotiable-quote-data-comment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentInterface"
        },
        "negotiable-quote-data-comment-attachment-interface": {
            "type": "object",
            "description": "Interface for quote comment attachment.",
            "properties": {
                "attachment_id": {
                    "type": "integer",
                    "description": "Attachment ID."
                },
                "comment_id": {
                    "type": "integer",
                    "description": "Comment ID."
                },
                "file_name": {
                    "type": "string",
                    "description": "File name."
                },
                "file_path": {
                    "type": "string",
                    "description": "File path."
                },
                "file_type": {
                    "type": "string",
                    "description": "File type."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-data-comment-attachment-extension-interface"
                }
            },
            "required": [
                "attachment_id",
                "comment_id",
                "file_name",
                "file_path",
                "file_type"
            ]
        },
        "negotiable-quote-data-comment-attachment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentAttachmentInterface"
        },
        "negotiable-quote-data-item-note-search-results-interface": {
            "type": "object",
            "description": "Interface for Negotiable Quote Item Notes search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Negotiable Quote Item Notes list.",
                    "items": {
                        "$ref": "#/definitions/negotiable-quote-data-item-note-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-credit-data-credit-limit-search-results-interface": {
            "type": "object",
            "description": "Interface for Credit Limit search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Credit Limit list.",
                    "items": {
                        "$ref": "#/definitions/company-credit-data-credit-data-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-credit-data-credit-data-interface": {
            "type": "object",
            "description": "Credit Data interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID."
                },
                "company_id": {
                    "type": "integer",
                    "description": "Company id."
                },
                "credit_limit": {
                    "type": "number",
                    "description": "Credit Limit."
                },
                "balance": {
                    "type": "number",
                    "description": "Balance."
                },
                "currency_code": {
                    "type": "string",
                    "description": "Currency Code."
                },
                "exceed_limit": {
                    "type": "boolean",
                    "description": "Exceed Limit."
                },
                "available_limit": {
                    "type": "number",
                    "description": "Available Limit."
                }
            },
            "required": [
                "exceed_limit"
            ]
        },
        "company-credit-data-credit-limit-interface": {
            "type": "object",
            "description": "Credit Limit data transfer object interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID."
                },
                "company_id": {
                    "type": "integer",
                    "description": "Company id."
                },
                "credit_limit": {
                    "type": "number",
                    "description": "Credit Limit."
                },
                "balance": {
                    "type": "number",
                    "description": "Balance."
                },
                "currency_code": {
                    "type": "string",
                    "description": "Currency Code."
                },
                "exceed_limit": {
                    "type": "boolean",
                    "description": "Exceed Limit."
                },
                "available_limit": {
                    "type": "number",
                    "description": "Available Limit."
                },
                "credit_comment": {
                    "type": "string",
                    "description": "Credit comment for company credit history."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/company-credit-data-credit-limit-extension-interface"
                }
            },
            "required": [
                "exceed_limit"
            ]
        },
        "company-credit-data-credit-limit-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\CompanyCredit\\Api\\Data\\CreditLimitInterface"
        },
        "company-credit-data-credit-balance-options-interface": {
            "type": "object",
            "description": "Credit balance data transfer object interface.",
            "properties": {
                "purchase_order": {
                    "type": "string",
                    "description": "Purchase order number."
                },
                "custom_reference_number": {
                    "type": "string",
                    "description": "Custom Reference number."
                },
                "order_increment": {
                    "type": "string",
                    "description": "Order increment."
                },
                "currency_display": {
                    "type": "string",
                    "description": "Currency display."
                },
                "currency_base": {
                    "type": "string",
                    "description": "Currency base."
                }
            },
            "required": [
                "purchase_order",
                "order_increment",
                "currency_display",
                "currency_base"
            ]
        },
        "company-credit-data-history-search-results-interface": {
            "type": "object",
            "description": "Interface for History search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "History list.",
                    "items": {
                        "$ref": "#/definitions/company-credit-data-history-data-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-credit-data-history-data-interface": {
            "type": "object",
            "description": "History data transfer object interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID."
                },
                "company_credit_id": {
                    "type": "integer",
                    "description": "Company credit id."
                },
                "user_id": {
                    "type": "integer",
                    "description": "User Id."
                },
                "user_type": {
                    "type": "integer",
                    "description": "User type: integration, admin, customer."
                },
                "currency_credit": {
                    "type": "string",
                    "description": "Currency code of credit."
                },
                "currency_operation": {
                    "type": "string",
                    "description": "Currency code of operation."
                },
                "rate": {
                    "type": "number",
                    "description": "Currency rate between credit and operation currencies."
                },
                "rate_credit": {
                    "type": "number",
                    "description": "Rate between credit and base currencies."
                },
                "amount": {
                    "type": "number",
                    "description": "Amount."
                },
                "balance": {
                    "type": "number",
                    "description": "Outstanding balance."
                },
                "credit_limit": {
                    "type": "number",
                    "description": "Credit limit."
                },
                "available_limit": {
                    "type": "number",
                    "description": "Available limit."
                },
                "type": {
                    "type": "integer",
                    "description": "Type of operation."
                },
                "datetime": {
                    "type": "string",
                    "description": "Operation datetime."
                },
                "purchase_order": {
                    "type": "string",
                    "description": "Purchase Order number."
                },
                "custom_reference_number": {
                    "type": "string",
                    "description": "Custom Reference number."
                },
                "comment": {
                    "type": "string",
                    "description": "Comment."
                }
            },
            "required": [
                "rate",
                "amount",
                "balance",
                "credit_limit"
            ]
        },
        "negotiable-quote-template-data-template-interface": {
            "type": "object",
            "description": "Interface TemplateInterface",
            "properties": {
                "template_id": {
                    "type": "integer",
                    "description": "Negotiable quote ID."
                },
                "parent_quote_id": {
                    "type": "integer",
                    "description": "Negotiable quote ID."
                },
                "template_name": {
                    "type": "string",
                    "description": "Negotiable quote template name."
                },
                "status": {
                    "type": "string",
                    "description": "Negotiable quote template status"
                },
                "expiration_date": {
                    "type": "string",
                    "description": "Expiration period."
                },
                "creator_id": {
                    "type": "integer",
                    "description": "Quote template creator id."
                },
                "creator_type": {
                    "type": "integer",
                    "description": "Quote creator type."
                },
                "min_orders": {
                    "type": "integer",
                    "description": "Min orders for purchase"
                },
                "max_orders": {
                    "type": "integer",
                    "description": "Min orders for purchase"
                },
                "is_min_max_qty_used": {
                    "type": "boolean",
                    "description": "Is min/max qty used."
                },
                "activated_at": {
                    "type": "string",
                    "description": "Activated at time"
                },
                "last_shared_at": {
                    "type": "string",
                    "description": "Last shared at"
                },
                "inactivated_at": {
                    "type": "string",
                    "description": "Inactivated at time"
                },
                "created_at": {
                    "type": "string",
                    "description": "Created at time"
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated at time"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-template-data-template-extension-interface"
                }
            },
            "required": [
                "template_id",
                "parent_quote_id",
                "template_name",
                "status",
                "expiration_date",
                "creator_id",
                "creator_type",
                "min_orders",
                "max_orders",
                "is_min_max_qty_used",
                "activated_at",
                "last_shared_at",
                "inactivated_at",
                "created_at",
                "updated_at",
                "extension_attributes"
            ]
        },
        "negotiable-quote-template-data-template-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuoteTemplate\\Api\\Data\\TemplateInterface"
        },
        "framework-search-results-interface": {
            "type": "object",
            "description": "Search results interface.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Items list.",
                    "items": {
                        "$ref": "#/definitions/framework-extensible-data-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "framework-extensible-data-interface": {
            "type": "object",
            "description": "Interface for entities which can be extended with extension attributes."
        },
        "negotiable-quote-template-data-reference-document-link-interface": {
            "type": "object",
            "description": "Interface ReferenceDocumentLinkInterface",
            "properties": {
                "link_id": {
                    "type": "integer",
                    "description": "Link ID."
                },
                "template_id": {
                    "type": "integer",
                    "description": "Negotiable quote ID."
                },
                "document_name": {
                    "type": "string",
                    "description": "Document name"
                },
                "document_identifier": {
                    "type": "string",
                    "description": "Document identifier"
                },
                "reference_document_url": {
                    "type": "string",
                    "description": "Reference document url"
                },
                "created_at": {
                    "type": "string",
                    "description": "Created at time"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/negotiable-quote-template-data-reference-document-link-extension-interface"
                }
            },
            "required": [
                "link_id",
                "template_id",
                "document_name",
                "document_identifier",
                "reference_document_url",
                "created_at",
                "extension_attributes"
            ]
        },
        "negotiable-quote-template-data-reference-document-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuoteTemplate\\Api\\Data\\ReferenceDocumentLinkInterface"
        },
        "company-relation-data-relation-search-result-interface": {
            "type": "object",
            "description": "Interface for company relation search results",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Company relations",
                    "items": {
                        "$ref": "#/definitions/company-relation-data-relation-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "company-relation-data-relation-interface": {
            "type": "object",
            "description": "Company relation data interface.",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "description": "Company id."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent company id."
                }
            },
            "required": [
                "company_id",
                "parent_id"
            ]
        },
        "shared-catalog-data-shared-catalog-interface": {
            "type": "object",
            "description": "SharedCatalogInterface interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID."
                },
                "name": {
                    "type": "string",
                    "description": "Shared Catalog name."
                },
                "description": {
                    "type": "string",
                    "description": "Shared Catalog description."
                },
                "customer_group_id": {
                    "type": "integer",
                    "description": "Customer Group Id."
                },
                "type": {
                    "type": "integer",
                    "description": "Shared Catalog type."
                },
                "created_at": {
                    "type": "string",
                    "description": "Created time for Shared Catalog."
                },
                "created_by": {
                    "type": "integer",
                    "description": "Admin id for Shared Catalog."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store group id for Shared Catalog."
                },
                "tax_class_id": {
                    "type": "integer",
                    "description": "Tax class id."
                }
            },
            "required": [
                "name",
                "description",
                "customer_group_id",
                "type",
                "created_at",
                "created_by",
                "store_id",
                "tax_class_id"
            ]
        },
        "shared-catalog-data-search-results-interface": {
            "type": "object",
            "description": "Interface for Shared Catalog search results.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Shared Catalog list.",
                    "items": {
                        "$ref": "#/definitions/shared-catalog-data-shared-catalog-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "analytics-data-link-interface": {
            "type": "object",
            "description": "Represents link with collected data and initialized vector for decryption.",
            "properties": {
                "url": {
                    "type": "string"
                },
                "initialization_vector": {
                    "type": "string"
                }
            },
            "required": [
                "url",
                "initialization_vector"
            ]
        },
        "gift-card-account-data-gift-card-account-interface": {
            "type": "object",
            "description": "Gift Card Account data",
            "properties": {
                "gift_cards": {
                    "type": "array",
                    "description": "Cards codes.",
                    "items": {
                        "type": "string"
                    }
                },
                "gift_cards_amount": {
                    "type": "number",
                    "description": "Cards amount in quote currency."
                },
                "base_gift_cards_amount": {
                    "type": "number",
                    "description": "Cards amount in base currency."
                },
                "gift_cards_amount_used": {
                    "type": "number",
                    "description": "Cards amount used in quote currency."
                },
                "base_gift_cards_amount_used": {
                    "type": "number",
                    "description": "Cards amount used in base currency."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/gift-card-account-data-gift-card-account-extension-interface"
                }
            },
            "required": [
                "gift_cards_amount",
                "base_gift_cards_amount",
                "gift_cards_amount_used",
                "base_gift_cards_amount_used"
            ]
        },
        "gift-card-account-data-gift-card-account-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GiftCardAccount\\Api\\Data\\GiftCardAccountInterface"
        },
        "adobe-commerce-webhooks-core-saas-data-supported-webhook-interface": {
            "type": "object",
            "description": "Interface for supported webhook data returned in webapi requests",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The supported webhook name"
                }
            },
            "required": [
                "name"
            ]
        },
        "out-of-process-payment-methods-data-out-of-process-payment-method-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the payment method"
                },
                "code": {
                    "type": "string",
                    "description": "Of the payment method, must be unique including the regular payment methods"
                },
                "title": {
                    "type": "string",
                    "description": "Of the payment method"
                },
                "active": {
                    "type": "boolean",
                    "description": "The payment method is active or not"
                },
                "backend_integration_url": {
                    "type": "string",
                    "description": "Backend URL to dispatch requests related to the payment method"
                },
                "stores": {
                    "type": "array",
                    "description": "list of store codes",
                    "items": {
                        "type": "string"
                    }
                },
                "order_status": {
                    "type": "string",
                    "description": "Order status, if not set configured default will be used"
                },
                "countries": {
                    "type": "array",
                    "description": "list of country codes in ISO-3166 (alpha-2)",
                    "items": {
                        "type": "string"
                    }
                },
                "currencies": {
                    "type": "array",
                    "description": "list of currency codes in ISO-4217",
                    "items": {
                        "type": "string"
                    }
                },
                "custom_config": {
                    "type": "array",
                    "description": "The custom configuration for the payment method",
                    "items": {
                        "$ref": "#/definitions/out-of-process-payment-methods-data-custom-config-key-value-interface"
                    }
                }
            },
            "required": [
                "code",
                "title",
                "active",
                "backend_integration_url",
                "stores",
                "countries",
                "currencies",
                "custom_config"
            ]
        },
        "out-of-process-payment-methods-data-custom-config-key-value-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Object key"
                },
                "value": {
                    "type": "string",
                    "description": "Object value"
                }
            },
            "required": [
                "key",
                "value"
            ]
        },
        "gift-wrapping-data-wrapping-interface": {
            "type": "object",
            "description": "Interface WrappingInterface",
            "properties": {
                "wrapping_id": {
                    "type": "integer",
                    "description": "Wrapping ID"
                },
                "design": {
                    "type": "string",
                    "description": "Design"
                },
                "status": {
                    "type": "integer",
                    "description": "Status"
                },
                "base_price": {
                    "type": "number",
                    "description": "Base price"
                },
                "image_name": {
                    "type": "string",
                    "description": "Image name"
                },
                "image_base64_content": {
                    "type": "string",
                    "description": "Image base64 encode"
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code"
                },
                "website_ids": {
                    "type": "array",
                    "description": "Website ids",
                    "items": {
                        "type": "integer"
                    }
                },
                "image_url": {
                    "type": "string",
                    "description": "Wrapping image URL."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/gift-wrapping-data-wrapping-extension-interface"
                }
            },
            "required": [
                "wrapping_id",
                "design",
                "status",
                "base_price"
            ]
        },
        "gift-wrapping-data-wrapping-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GiftWrapping\\Api\\Data\\WrappingInterface"
        },
        "gift-wrapping-data-wrapping-search-results-interface": {
            "type": "object",
            "description": "Interface WrappingSearchResultsInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Items",
                    "items": {
                        "$ref": "#/definitions/gift-wrapping-data-wrapping-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "import-json-api-data-source-data-interface": {
            "type": "object",
            "description": "Import JSON source data interface.",
            "properties": {
                "entity": {
                    "type": "string",
                    "description": "Entity"
                },
                "behavior": {
                    "type": "string",
                    "description": "Behavior"
                },
                "validation_strategy": {
                    "type": "string",
                    "description": "Validation Strategy"
                },
                "allowed_error_count": {
                    "type": "string",
                    "description": "Allowed Error Count"
                },
                "items": {
                    "$ref": "#/definitions/unstructured-array"
                },
                "import_images_file_dir": {
                    "type": "string",
                    "description": "Import's Images File Directory"
                },
                "locale": {
                    "type": "string",
                    "description": "Import content locale"
                }
            },
            "required": [
                "entity",
                "behavior",
                "validation_strategy",
                "allowed_error_count",
                "items"
            ]
        },
        "unstructured-array": {
            "type": "object",
            "description": ""
        },
        "inventory-api-data-source-search-results-interface": {
            "type": "object",
            "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Sources list",
                    "items": {
                        "$ref": "#/definitions/inventory-api-data-source-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "inventory-api-data-source-interface": {
            "type": "object",
            "description": "Represents physical storage, i.e. brick and mortar store or warehouse Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "source_code": {
                    "type": "string",
                    "description": "Source code"
                },
                "name": {
                    "type": "string",
                    "description": "Source name"
                },
                "email": {
                    "type": "string",
                    "description": "Source email"
                },
                "contact_name": {
                    "type": "string",
                    "description": "Source contact name"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If source is enabled. For new entity can be null"
                },
                "description": {
                    "type": "string",
                    "description": "Source description"
                },
                "latitude": {
                    "type": "number",
                    "description": "Source latitude"
                },
                "longitude": {
                    "type": "number",
                    "description": "Source longitude"
                },
                "country_id": {
                    "type": "string",
                    "description": "Source country id"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region id if source has registered region."
                },
                "region": {
                    "type": "string",
                    "description": "Region title if source has custom region"
                },
                "city": {
                    "type": "string",
                    "description": "Source city"
                },
                "street": {
                    "type": "string",
                    "description": "Source street name"
                },
                "postcode": {
                    "type": "string",
                    "description": "Source post code"
                },
                "phone": {
                    "type": "string",
                    "description": "Source phone number"
                },
                "fax": {
                    "type": "string",
                    "description": "Source fax"
                },
                "use_default_carrier_config": {
                    "type": "boolean",
                    "description": "Is need to use default config"
                },
                "carrier_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventory-api-data-source-carrier-link-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-api-data-source-extension-interface"
                }
            }
        },
        "inventory-api-data-source-carrier-link-interface": {
            "type": "object",
            "description": "Represents relation between some physical storage and shipping method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "carrier_code": {
                    "type": "string",
                    "description": "Carrier code"
                },
                "position": {
                    "type": "integer",
                    "description": "Position"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-api-data-source-carrier-link-extension-interface"
                }
            }
        },
        "inventory-api-data-source-carrier-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceCarrierLinkInterface"
        },
        "inventory-api-data-source-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceInterface",
            "properties": {
                "is_pickup_location_active": {
                    "type": "boolean"
                },
                "frontend_name": {
                    "type": "string"
                },
                "frontend_description": {
                    "type": "string"
                }
            }
        },
        "inventory-api-data-stock-search-results-interface": {
            "type": "object",
            "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Stocks list",
                    "items": {
                        "$ref": "#/definitions/inventory-api-data-stock-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "inventory-api-data-stock-interface": {
            "type": "object",
            "description": "Represents product aggregation among some different physical storages (in technical words, it is an index) Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "stock_id": {
                    "type": "integer",
                    "description": "Stock id"
                },
                "name": {
                    "type": "string",
                    "description": "Stock name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-api-data-stock-extension-interface"
                }
            }
        },
        "inventory-api-data-stock-extension-interface": {
            "type": "object",
            "description": "TODO: temporal fix of extension classes generation during installation ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\StockInterface",
            "properties": {
                "sales_channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventory-sales-api-data-sales-channel-interface"
                    }
                }
            }
        },
        "inventory-sales-api-data-sales-channel-interface": {
            "type": "object",
            "description": "Represents sales channels (which are a linkage between stocks and websites, customer groups, etc.) Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Sales channel type"
                },
                "code": {
                    "type": "string",
                    "description": "Sales channel code"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-sales-api-data-sales-channel-extension-interface"
                }
            }
        },
        "inventory-sales-api-data-sales-channel-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\SalesChannelInterface"
        },
        "inventory-api-data-stock-source-link-search-results-interface": {
            "type": "object",
            "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "StockSourceLink list",
                    "items": {
                        "$ref": "#/definitions/inventory-api-data-stock-source-link-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "inventory-api-data-stock-source-link-interface": {
            "type": "object",
            "description": "Represents relation between Stock and Source entities. Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "stock_id": {
                    "type": "integer",
                    "description": "Stock id"
                },
                "source_code": {
                    "type": "string",
                    "description": "Source code of the link"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the link"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-api-data-stock-source-link-extension-interface"
                }
            }
        },
        "inventory-api-data-stock-source-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\StockSourceLinkInterface",
            "properties": {
                "source_name": {
                    "type": "string"
                }
            }
        },
        "inventory-api-data-source-item-search-results-interface": {
            "type": "object",
            "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Source items list",
                    "items": {
                        "$ref": "#/definitions/inventory-api-data-source-item-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "inventory-api-data-source-item-interface": {
            "type": "object",
            "description": "Represents amount of product on physical storage Entity id getter is missed because entity identifies by compound identifier (sku and source_code) Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "sku": {
                    "type": "string",
                    "description": "Source item sku"
                },
                "source_code": {
                    "type": "string",
                    "description": "Source code"
                },
                "quantity": {
                    "type": "number",
                    "description": "Source item quantity"
                },
                "status": {
                    "type": "integer",
                    "description": "Source item status (One of self::STATUS_*)"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-api-data-source-item-extension-interface"
                }
            }
        },
        "inventory-api-data-source-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceItemInterface"
        },
        "inventory-catalog-api-data-partial-inventory-transfer-item-interface": {
            "type": "object",
            "description": "Specifies item and quantity for partial inventory transfer.",
            "properties": {
                "sku": {
                    "type": "string"
                },
                "qty": {
                    "type": "number"
                }
            },
            "required": [
                "sku",
                "qty"
            ]
        },
        "inventory-distance-based-source-selection-api-data-lat-lng-interface": {
            "type": "object",
            "description": "DTO for latitude and longitude request",
            "properties": {
                "lat": {
                    "type": "number",
                    "description": "Latitude"
                },
                "lng": {
                    "type": "number",
                    "description": "Longitude"
                }
            },
            "required": [
                "lat",
                "lng"
            ]
        },
        "inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface": {
            "type": "object",
            "description": "Interface for ExportStockSalableQtySearchResult",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/framework-extensible-data-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "inventory-export-stock-api-data-product-stock-index-data-interface": {
            "type": "object",
            "description": "Class ExportStockIndexDataResultInterface for result Inventory stock index dump export",
            "properties": {
                "sku": {
                    "type": "string",
                    "description": "Product SKU"
                },
                "qty": {
                    "type": "number",
                    "description": "Product QTY"
                },
                "is_salable": {
                    "type": "boolean",
                    "description": "Product is salable flag"
                }
            },
            "required": [
                "sku",
                "qty",
                "is_salable"
            ]
        },
        "inventory-sales-api-data-is-product-salable-result-interface": {
            "type": "object",
            "description": "Represents \"is product salable\" result interface.",
            "properties": {
                "sku": {
                    "type": "string",
                    "description": "Product sku from result."
                },
                "stock_id": {
                    "type": "integer",
                    "description": "Stock id from result."
                },
                "salable": {
                    "type": "boolean",
                    "description": "Is salable result."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-sales-api-data-is-product-salable-result-extension-interface"
                }
            },
            "required": [
                "sku",
                "stock_id",
                "salable"
            ]
        },
        "inventory-sales-api-data-is-product-salable-result-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\IsProductSalableResultInterface"
        },
        "inventory-sales-api-data-product-salable-result-interface": {
            "type": "object",
            "description": "Represents result of service Magento\\InventorySalesApi\\Api\\IsProductSalableForRequestedQtyInterface::execute",
            "properties": {
                "salable": {
                    "type": "boolean"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventory-sales-api-data-product-salability-error-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-sales-api-data-product-salable-result-extension-interface"
                }
            },
            "required": [
                "salable",
                "errors"
            ]
        },
        "inventory-sales-api-data-product-salability-error-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-sales-api-data-product-salability-error-extension-interface"
                }
            },
            "required": [
                "code",
                "message"
            ]
        },
        "inventory-sales-api-data-product-salability-error-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\ProductSalabilityErrorInterface"
        },
        "inventory-sales-api-data-product-salable-result-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\ProductSalableResultInterface"
        },
        "inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface": {
            "type": "object",
            "description": "Represents \"is product salable for requested quantity\" result interface.",
            "properties": {
                "sku": {
                    "type": "string",
                    "description": "Product sku from result."
                },
                "stock_id": {
                    "type": "integer",
                    "description": "Stock id from result."
                },
                "salable": {
                    "type": "boolean",
                    "description": "Is salable result."
                },
                "errors": {
                    "type": "array",
                    "description": "Errors from result.",
                    "items": {
                        "$ref": "#/definitions/inventory-sales-api-data-product-salability-error-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-sales-api-data-is-product-salable-for-requested-qty-result-extension-interface"
                }
            },
            "required": [
                "sku",
                "stock_id",
                "salable",
                "errors"
            ]
        },
        "inventory-sales-api-data-is-product-salable-for-requested-qty-result-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\IsProductSalableForRequestedQtyResultInterface"
        },
        "inventory-source-selection-api-data-source-selection-algorithm-interface": {
            "type": "object",
            "description": "Data Interface representing particular Source Selection Algorithm",
            "properties": {
                "code": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-source-selection-api-data-source-selection-algorithm-extension-interface"
                }
            },
            "required": [
                "code",
                "title",
                "description"
            ]
        },
        "inventory-source-selection-api-data-source-selection-algorithm-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\SourceSelectionAlgorithmInterface"
        },
        "inventory-source-selection-api-data-inventory-request-interface": {
            "type": "object",
            "description": "Request products in a given Qty and StockId",
            "properties": {
                "stock_id": {
                    "type": "integer",
                    "description": "Stock Id"
                },
                "items": {
                    "type": "array",
                    "description": "Items",
                    "items": {
                        "$ref": "#/definitions/inventory-source-selection-api-data-item-request-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-source-selection-api-data-inventory-request-extension-interface"
                }
            },
            "required": [
                "stock_id",
                "items"
            ]
        },
        "inventory-source-selection-api-data-item-request-interface": {
            "type": "object",
            "description": "Represents requested quantity for particular product",
            "properties": {
                "sku": {
                    "type": "string",
                    "description": "SKU"
                },
                "qty": {
                    "type": "number",
                    "description": "Product Quantity"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-source-selection-api-data-item-request-extension-interface"
                }
            },
            "required": [
                "sku",
                "qty"
            ]
        },
        "inventory-source-selection-api-data-item-request-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\ItemRequestInterface"
        },
        "inventory-source-selection-api-data-inventory-request-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\InventoryRequestInterface",
            "properties": {
                "destination_address": {
                    "$ref": "#/definitions/inventory-source-selection-api-data-address-interface"
                }
            }
        },
        "inventory-source-selection-api-data-address-interface": {
            "type": "object",
            "description": "Data interface for shipping source or shipping destination",
            "properties": {
                "country": {
                    "type": "string",
                    "description": "Shipping country"
                },
                "postcode": {
                    "type": "string",
                    "description": "Shipping postcode"
                },
                "street": {
                    "type": "string",
                    "description": "Shipping street address"
                },
                "region": {
                    "type": "string",
                    "description": "Shipping region"
                },
                "city": {
                    "type": "string",
                    "description": "Shipping city"
                }
            },
            "required": [
                "country",
                "postcode",
                "street",
                "region",
                "city"
            ]
        },
        "inventory-source-selection-api-data-source-selection-result-interface": {
            "type": "object",
            "description": "Result of how we will deduct product qty from different Sources",
            "properties": {
                "source_selection_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventory-source-selection-api-data-source-selection-item-interface"
                    }
                },
                "shippable": {
                    "type": "boolean"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-source-selection-api-data-source-selection-result-extension-interface"
                }
            },
            "required": [
                "source_selection_items",
                "shippable"
            ]
        },
        "inventory-source-selection-api-data-source-selection-item-interface": {
            "type": "object",
            "description": "Represents source selection result for the specific source and SKU",
            "properties": {
                "source_code": {
                    "type": "string",
                    "description": "Source code"
                },
                "sku": {
                    "type": "string",
                    "description": "Item SKU"
                },
                "qty_to_deduct": {
                    "type": "number",
                    "description": "Quantity which will be deducted for this source"
                },
                "qty_available": {
                    "type": "number",
                    "description": "Available quantity for this source"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-source-selection-api-data-source-selection-item-extension-interface"
                }
            },
            "required": [
                "source_code",
                "sku",
                "qty_to_deduct",
                "qty_available"
            ]
        },
        "inventory-source-selection-api-data-source-selection-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\SourceSelectionItemInterface"
        },
        "inventory-source-selection-api-data-source-selection-result-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\SourceSelectionResultInterface"
        },
        "inventory-in-store-pickup-sales-api-data-result-interface": {
            "type": "object",
            "description": "Operation result object that contains status of the operation.",
            "properties": {
                "successful": {
                    "type": "boolean",
                    "description": "Operation result successful."
                },
                "errors": {
                    "type": "array",
                    "description": "Error information for failed operations.",
                    "items": {
                        "type": "string"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-in-store-pickup-sales-api-data-result-extension-interface"
                }
            },
            "required": [
                "successful",
                "errors"
            ]
        },
        "inventory-in-store-pickup-sales-api-data-result-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupSalesApi\\Api\\Data\\ResultInterface"
        },
        "inventory-low-quantity-notification-api-data-source-item-configuration-interface": {
            "type": "object",
            "description": "Represents a Source Item Configuration object Used fully qualified namespaces in annotations for proper work of WebApi request parser",
            "properties": {
                "source_code": {
                    "type": "string",
                    "description": "Source code"
                },
                "notify_stock_qty": {
                    "type": "number",
                    "description": "Notify stock qty"
                },
                "sku": {
                    "type": "string",
                    "description": "SKU"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-low-quantity-notification-api-data-source-item-configuration-extension-interface"
                }
            }
        },
        "inventory-low-quantity-notification-api-data-source-item-configuration-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventoryLowQuantityNotificationApi\\Api\\Data\\SourceItemConfigurationInterface"
        },
        "adobe-stock-asset-api-data-asset-interface": {
            "type": "object",
            "description": "Adobe Stock Asset data class interface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID"
                },
                "media_gallery_id": {
                    "type": "integer",
                    "description": "Media gallery asset id"
                },
                "category_id": {
                    "type": "integer",
                    "description": "Category"
                },
                "category": {
                    "$ref": "#/definitions/adobe-stock-asset-api-data-category-interface"
                },
                "creator_id": {
                    "type": "integer",
                    "description": "The creator"
                },
                "creator": {
                    "$ref": "#/definitions/adobe-stock-asset-api-data-creator-interface"
                },
                "is_licensed": {
                    "type": "integer",
                    "description": "Licensed"
                },
                "creation_date": {
                    "type": "string",
                    "description": "Creation date"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/adobe-stock-asset-api-data-asset-extension-interface"
                }
            },
            "required": [
                "media_gallery_id",
                "is_licensed",
                "creation_date"
            ]
        },
        "adobe-stock-asset-api-data-category-interface": {
            "type": "object",
            "description": "Adobe Stock asset Category data class",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id"
                },
                "name": {
                    "type": "string",
                    "description": "The category name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/adobe-stock-asset-api-data-category-extension-interface"
                }
            },
            "required": [
                "name",
                "extension_attributes"
            ]
        },
        "adobe-stock-asset-api-data-category-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\AdobeStockAssetApi\\Api\\Data\\CategoryInterface"
        },
        "adobe-stock-asset-api-data-creator-interface": {
            "type": "object",
            "description": "Adobe Stock creator data class",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id"
                },
                "name": {
                    "type": "string",
                    "description": "The creator name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/adobe-stock-asset-api-data-creator-extension-interface"
                }
            },
            "required": [
                "extension_attributes"
            ]
        },
        "adobe-stock-asset-api-data-creator-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\AdobeStockAssetApi\\Api\\Data\\CreatorInterface"
        },
        "adobe-stock-asset-api-data-asset-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\AdobeStockAssetApi\\Api\\Data\\AssetInterface"
        },
        "adobe-stock-asset-api-data-asset-search-results-interface": {
            "type": "object",
            "description": "Interface AssetSearchResultsInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Assets list.",
                    "items": {
                        "$ref": "#/definitions/adobe-stock-asset-api-data-asset-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "asynchronous-operations-data-detailed-bulk-operations-status-interface": {
            "type": "object",
            "description": "Interface BulkStatusInterface Bulk summary data with list of operations items full data.",
            "properties": {
                "operations_list": {
                    "type": "array",
                    "description": "Operations list.",
                    "items": {
                        "$ref": "#/definitions/asynchronous-operations-data-operation-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/asynchronous-operations-data-bulk-summary-extension-interface"
                },
                "user_type": {
                    "type": "integer",
                    "description": "User type"
                },
                "bulk_id": {
                    "type": "string",
                    "description": "Bulk uuid"
                },
                "description": {
                    "type": "string",
                    "description": "Bulk description"
                },
                "start_time": {
                    "type": "string",
                    "description": "Bulk scheduled time"
                },
                "user_id": {
                    "type": "integer",
                    "description": "User id"
                },
                "operation_count": {
                    "type": "integer",
                    "description": "Total number of operations scheduled in scope of this bulk"
                }
            },
            "required": [
                "operations_list",
                "user_type",
                "bulk_id",
                "description",
                "start_time",
                "user_id",
                "operation_count"
            ]
        },
        "asynchronous-operations-data-operation-interface": {
            "type": "object",
            "description": "Class OperationInterface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/asynchronous-operations-data-operation-extension-interface"
                },
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "bulk_uuid": {
                    "type": "string",
                    "description": "Bulk uuid"
                },
                "topic_name": {
                    "type": "string",
                    "description": "Queue Topic"
                },
                "serialized_data": {
                    "type": "string",
                    "description": "Data"
                },
                "result_serialized_data": {
                    "type": "string",
                    "description": "Serialized Data"
                },
                "status": {
                    "type": "integer",
                    "description": "Operation status"
                },
                "result_message": {
                    "type": "string",
                    "description": "Result message"
                },
                "error_code": {
                    "type": "integer",
                    "description": "Error code"
                }
            },
            "required": [
                "id",
                "bulk_uuid",
                "topic_name",
                "serialized_data",
                "result_serialized_data",
                "status",
                "result_message",
                "error_code"
            ]
        },
        "asynchronous-operations-data-operation-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\OperationInterface",
            "properties": {
                "start_time": {
                    "type": "string"
                }
            }
        },
        "asynchronous-operations-data-bulk-summary-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\BulkSummaryInterface"
        },
        "asynchronous-operations-data-bulk-operations-status-interface": {
            "type": "object",
            "description": "Interface BulkStatusInterface Bulk summary data with list of operations items summary data.",
            "properties": {
                "operations_list": {
                    "type": "array",
                    "description": "List of operation with statuses (short data).",
                    "items": {
                        "$ref": "#/definitions/asynchronous-operations-data-summary-operation-status-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/asynchronous-operations-data-bulk-summary-extension-interface"
                },
                "user_type": {
                    "type": "integer",
                    "description": "User type"
                },
                "bulk_id": {
                    "type": "string",
                    "description": "Bulk uuid"
                },
                "description": {
                    "type": "string",
                    "description": "Bulk description"
                },
                "start_time": {
                    "type": "string",
                    "description": "Bulk scheduled time"
                },
                "user_id": {
                    "type": "integer",
                    "description": "User id"
                },
                "operation_count": {
                    "type": "integer",
                    "description": "Total number of operations scheduled in scope of this bulk"
                }
            },
            "required": [
                "operations_list",
                "user_type",
                "bulk_id",
                "description",
                "start_time",
                "user_id",
                "operation_count"
            ]
        },
        "asynchronous-operations-data-summary-operation-status-interface": {
            "type": "object",
            "description": "Getter Class OperationsStatusInterface Instead of OperationInterface this class don't provide all operation data and not responsive to set any data, just to get operation data without serialized_data and result_serialized_data",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "status": {
                    "type": "integer",
                    "description": "Operation status"
                },
                "result_message": {
                    "type": "string",
                    "description": "Result message"
                },
                "error_code": {
                    "type": "integer",
                    "description": "Error code"
                }
            },
            "required": [
                "id",
                "status",
                "result_message",
                "error_code"
            ]
        },
        "asynchronous-operations-data-operation-search-results-interface": {
            "type": "object",
            "description": "Bulk operation search result interface. An bulk is a group of queue messages. An bulk operation item is a queue message.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of operations.",
                    "items": {
                        "$ref": "#/definitions/asynchronous-operations-data-operation-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "out-of-process-shipping-methods-data-out-of-process-carrier-interface": {
            "type": "object",
            "description": "Shipping carrier interface for out of process shipping carriers",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the shipping carrier"
                },
                "code": {
                    "type": "string",
                    "description": "The unique code of the shipping carrier"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the shipping carrier"
                },
                "stores": {
                    "type": "array",
                    "description": "list of store codes",
                    "items": {
                        "type": "string"
                    }
                },
                "countries": {
                    "type": "array",
                    "description": "list of country codes in ISO-3166 (alpha-2)",
                    "items": {
                        "type": "string"
                    }
                },
                "sort_order": {
                    "type": "integer",
                    "description": "The sort order of the shipping carrier"
                },
                "active": {
                    "type": "boolean",
                    "description": "The status of the shipping carrier"
                },
                "tracking_available": {
                    "type": "boolean",
                    "description": "The tracking availability of the shipping carrier"
                },
                "shipping_labels_available": {
                    "type": "boolean",
                    "description": "The shipping labels availability of the shipping carrier"
                }
            },
            "required": [
                "code",
                "title",
                "stores",
                "countries",
                "sort_order",
                "active",
                "tracking_available",
                "shipping_labels_available"
            ]
        },
        "out-of-process-tax-management-data-out-of-process-tax-integration-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Integration code"
                },
                "title": {
                    "type": "string",
                    "description": "Integration title"
                },
                "active": {
                    "type": "boolean",
                    "description": "The tax integration is active"
                },
                "stores": {
                    "type": "array",
                    "description": "list of store codes",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "code",
                "title",
                "active",
                "stores"
            ]
        },
        "rma-data-track-interface": {
            "type": "object",
            "description": "Interface TrackInterface",
            "properties": {
                "entity_id": {
                    "type": "integer",
                    "description": "Entity id"
                },
                "rma_entity_id": {
                    "type": "integer",
                    "description": "Rma entity id"
                },
                "track_number": {
                    "type": "string",
                    "description": "Track number"
                },
                "carrier_title": {
                    "type": "string",
                    "description": "Carrier title"
                },
                "carrier_code": {
                    "type": "string",
                    "description": "Carrier code"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/rma-data-track-extension-interface"
                }
            },
            "required": [
                "entity_id",
                "rma_entity_id",
                "track_number",
                "carrier_title",
                "carrier_code"
            ]
        },
        "rma-data-track-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\TrackInterface"
        },
        "rma-data-track-search-result-interface": {
            "type": "object",
            "description": "Interface TrackSearchResultInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Rma list",
                    "items": {
                        "$ref": "#/definitions/rma-data-track-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "rma-data-rma-interface": {
            "type": "object",
            "description": "Interface RmaInterface",
            "properties": {
                "increment_id": {
                    "type": "string",
                    "description": "Entity_id"
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Entity_id"
                },
                "order_id": {
                    "type": "integer",
                    "description": "Order_id"
                },
                "order_increment_id": {
                    "type": "string",
                    "description": "Order_increment_id"
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store_id"
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer_id"
                },
                "date_requested": {
                    "type": "string",
                    "description": "Date_requested"
                },
                "customer_custom_email": {
                    "type": "string",
                    "description": "Customer_custom_email"
                },
                "items": {
                    "type": "array",
                    "description": "Items",
                    "items": {
                        "$ref": "#/definitions/rma-data-item-interface"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Status"
                },
                "comments": {
                    "type": "array",
                    "description": "Comments list",
                    "items": {
                        "$ref": "#/definitions/rma-data-comment-interface"
                    }
                },
                "tracks": {
                    "type": "array",
                    "description": "Tracks list",
                    "items": {
                        "$ref": "#/definitions/rma-data-track-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/rma-data-rma-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "increment_id",
                "entity_id",
                "order_id",
                "order_increment_id",
                "store_id",
                "customer_id",
                "date_requested",
                "customer_custom_email",
                "items",
                "status",
                "comments",
                "tracks"
            ]
        },
        "rma-data-item-interface": {
            "type": "object",
            "description": "Interface CategoryInterface",
            "properties": {
                "entity_id": {
                    "type": "integer",
                    "description": "Id"
                },
                "rma_entity_id": {
                    "type": "integer",
                    "description": "RMA id"
                },
                "order_item_id": {
                    "type": "integer",
                    "description": "Order_item_id"
                },
                "qty_requested": {
                    "type": "integer",
                    "description": "Qty_requested"
                },
                "qty_authorized": {
                    "type": "integer",
                    "description": "Qty_authorized"
                },
                "qty_approved": {
                    "type": "integer",
                    "description": "Qty_approved"
                },
                "qty_returned": {
                    "type": "integer",
                    "description": "Qty_returned"
                },
                "reason": {
                    "type": "string",
                    "description": "Reason"
                },
                "condition": {
                    "type": "string",
                    "description": "Condition"
                },
                "resolution": {
                    "type": "string",
                    "description": "Resolution"
                },
                "status": {
                    "type": "string",
                    "description": "Status"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/rma-data-item-extension-interface"
                }
            },
            "required": [
                "entity_id",
                "rma_entity_id",
                "order_item_id",
                "qty_requested",
                "qty_authorized",
                "qty_approved",
                "qty_returned",
                "reason",
                "condition",
                "resolution",
                "status"
            ]
        },
        "rma-data-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\ItemInterface"
        },
        "rma-data-comment-interface": {
            "type": "object",
            "description": "Interface CommentInterface",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Comment"
                },
                "rma_entity_id": {
                    "type": "integer",
                    "description": "Rma Id"
                },
                "created_at": {
                    "type": "string",
                    "description": "Created_at"
                },
                "entity_id": {
                    "type": "integer",
                    "description": "Entity_id"
                },
                "customer_notified": {
                    "type": "boolean",
                    "description": "Is_customer_notified"
                },
                "visible_on_front": {
                    "type": "boolean",
                    "description": "Is_visible_on_front"
                },
                "status": {
                    "type": "string",
                    "description": "Status"
                },
                "admin": {
                    "type": "boolean",
                    "description": "Is_admin"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/rma-data-comment-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "comment",
                "rma_entity_id",
                "created_at",
                "entity_id",
                "customer_notified",
                "visible_on_front",
                "status",
                "admin"
            ]
        },
        "rma-data-comment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\CommentInterface"
        },
        "rma-data-rma-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\RmaInterface"
        },
        "rma-data-comment-search-result-interface": {
            "type": "object",
            "description": "Interface CommentSearchResultInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Rma Status History list",
                    "items": {
                        "$ref": "#/definitions/rma-data-comment-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "rma-data-rma-search-result-interface": {
            "type": "object",
            "description": "Interface RmaSearchResultInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Rma list",
                    "items": {
                        "$ref": "#/definitions/rma-data-rma-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "framework-metadata-object-interface": {
            "type": "object",
            "description": "Provides metadata about an attribute.",
            "properties": {
                "attribute_code": {
                    "type": "string",
                    "description": "Code of the attribute."
                }
            },
            "required": [
                "attribute_code"
            ]
        },
        "adobe-commerce-events-core-saas-data-supported-event-interface": {
            "type": "object",
            "description": "Interface for supported event data returned in webapi requests",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The supported event name"
                }
            },
            "required": [
                "name"
            ]
        }
    }
}