{"version":3,"file":"component---src-pages-graphql-schema-products-interfaces-types-grouped-md-fe56fa067558f89bef14.js","mappings":"oSAOaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,8BACH,+BACL,kBAAK,QAAM,uBAAYC,WAAW,KAAM,kBAA+B,0BAAwB,cAAGA,WAAW,IACzG,KAAQ,kGACL,oBAAwB,SAAO,cAAGA,WAAW,IAChD,KAAQ,0GACL,4BAAgC,kGAAgG,cAAGA,WAAW,IACjJ,KAAQ,6BACL,YAAgB,+BAA6B,cAAGA,WAAW,IAC9D,KAAQ,mGACL,qBAAyB,MAChC,eACE,GAAM,gBACH,iBACL,kBAAK,uEAAqE,uBAAYA,WAAW,KAAM,kBAA+B,2CAEtI,SAAC,IAAoB,CAACD,QAAQ,yBAGlC,CAEAH,EAAWK,gBAAiB,C","sources":["webpack://commerce-webapi/./src/pages/graphql/schema/products/interfaces/types/grouped.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport GroupedProductSample from '/src/_includes/graphql/examples/grouped-product-sample-24.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"grouped-product-data-types\"\n    }}>{`Grouped product data types`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`GroupedProduct`}</inlineCode>{` data type implements `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-ProductInterface\"\n      }}>{`ProductInterface`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-PhysicalProductInterface\"\n      }}>{`PhysicalProductInterface`}</a>{`. As a result, attributes that are specific to grouped products can be used when performing a `}<a parentName=\"p\" {...{\n        \"href\": \"../../queries/products.md\"\n      }}>{`products`}</a>{` query. It also implements `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-RoutableInterface\"\n      }}>{`RoutableInterface`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"sample-query\"\n    }}>{`Sample query`}</h2>\n    <p>{`The following query returns information about downloadable product `}<inlineCode parentName=\"p\">{`24-WG085_Group`}</inlineCode>{`, which is defined in the sample data.`}</p>\n\n    <GroupedProductSample mdxType=\"GroupedProductSample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}