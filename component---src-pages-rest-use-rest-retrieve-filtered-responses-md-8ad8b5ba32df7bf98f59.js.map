{"version":3,"file":"component---src-pages-rest-use-rest-retrieve-filtered-responses-md-8ad8b5ba32df7bf98f59.js","mappings":"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","sources":["webpack://commerce-webapi/./src/pages/rest/use-rest/retrieve-filtered-responses.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport * as Vars from '../../../data/vars.js';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"retrieve-filtered-responses-for-rest-endpoints\"\n    }}>{`Retrieve filtered responses for REST endpoints`}</h1>\n    <p>{`Some REST calls return dozens or even hundreds of parameters, and parsing through all this data can be unwieldy. In addition, mobile app developers might find the bandwidth needed to process a request to be excessive. To resolve these problems, Adobe Commerce provides a query parameter-based syntax for REST requests that return partial responses.`}</p>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This feature is not available for SOAP, because SOAP does not allow partial responses.`}</p>\n    <p>{`You can append `}<inlineCode parentName=\"p\">{`?fields=<field_or_object1>,<field_or_object2>,...`}</inlineCode>{` to any GET, POST, or PUT operation to filter unimportant information from the response. `}<inlineCode parentName=\"p\">{`<field_or_object>`}</inlineCode>{` can be any of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Simple top-level field`}</li>\n      <li parentName=\"ul\">{`Top-level object that includes all fields`}</li>\n      <li parentName=\"ul\">{`Top-level object with selected fields`}</li>\n      <li parentName=\"ul\">{`Nested objects`}</li>\n    </ul>\n    <p>{`Separate each field or object with a comma.`}</p>\n    <p>{`On POST and PUT requests, Commerce ignores the `}<inlineCode parentName=\"p\">{`fields`}</inlineCode>{` parameter as input, but the response includes only the requested fields and objects.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`All examples use Luma sample data.`}</p>\n    <h2 {...{\n      \"id\": \"simple-fields\"\n    }}>{`Simple fields`}</h2>\n    <p>{`The following example returns only the `}<inlineCode parentName=\"p\">{`sku`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`price`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` for the specified product:`}</p>\n    <p><inlineCode parentName=\"p\">{`GET <host>/rest/<store_code>/V1/products/24-MB01?fields=sku,price,name`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"sku\": \"24-MB01\"\n  \"name\": \"Joust Duffle Bag\"\n  \"price\": 24.99\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"simple-fields-and-top-level-objects-with-all-fields\"\n    }}>{`Simple fields and top-level objects with all fields`}</h2>\n    <p>{`The following example returns only the customer first name, last name, and the entire `}<inlineCode parentName=\"p\">{`billing_address`}</inlineCode>{` object from a specified order. Do not include brackets `}<inlineCode parentName=\"p\">{`[]`}</inlineCode>{` after an object name when you want to return all of the object's contents.`}</p>\n    <p><inlineCode parentName=\"p\">{`GET <host>/rest/<store_code>/V1/orders/2?fields=billing_address,customer_firstname,customer_lastname`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n\"customer_firstname\": \"Veronica\"\n\"customer_lastname\": \"Costello\"\n\"billing_address\": {\n  \"address_type\": \"billing\"\n  \"city\": \"Calder\"\n  \"country_id\": \"US\"\n  \"customer_address_id\": 1\n  \"email\": \"roni_cost@example.com\"\n  \"entity_id\": 4\n  \"firstname\": \"Veronica\"\n  \"lastname\": \"Costello\"\n  \"parent_id\": 2\n  \"postcode\": \"49628-7978\"\n  \"region\": \"Michigan\"\n  \"region_code\": \"MI\"\n  \"region_id\": 33\n  \"street\": \"6146 Honey Bluff Parkway\"\n  \"telephone\": \"(555) 229-3326\"\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"top-level-object-with-selected-fields\"\n    }}>{`Top-level object with selected fields`}</h2>\n    <p>{`The following example returns only the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`qty`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`sku`}</inlineCode>{` fields defined in an `}<inlineCode parentName=\"p\">{`items`}</inlineCode>{` object from a specified shipment:`}</p>\n    <p><inlineCode parentName=\"p\">{`GET <host>/rest/<store_code>/V1/shipment/2?fields=items[name,qty,sku]`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"items\": [\n   {\n     \"name\": \"Minerva LumaTech&trade; V-Tee-XS-Blue\",\n     \"qty\": 1,\n     \"sku\": \"WS08-XS-Blue\",\n   }\n]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"nested-objects\"\n    }}>{`Nested objects`}</h2>\n    <p>{`This example returns only the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The product's `}<inlineCode parentName=\"li\">{`sku`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`name`}</inlineCode></li>\n      <li parentName=\"ul\">{`The entire `}<inlineCode parentName=\"li\">{`category_links`}</inlineCode>{` object, which is defined in `}<inlineCode parentName=\"li\">{`extension_attributes`}</inlineCode></li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`item_id`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`qty`}</inlineCode>{` fields of the `}<inlineCode parentName=\"li\">{`stock_item`}</inlineCode>{` object, which is also defined in `}<inlineCode parentName=\"li\">{`extension_attributes`}</inlineCode></li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`GET <host>/rest/<store_code>/V1/products/MT12?fields=name,sku,extension_attributes[category_links,stock_item[item_id,qty]]`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"sku\": \"MT12\"\n  \"name\": \"Cassius Sparring Tank\"\n  \"extension_attributes\": {\n    \"category_links\": {\n      \"position\": 1\n      \"category_id\": \"18\"\n    }\n    \"stock_item\": {\n      \"item_id\": 732\n      \"qty\": 0\n      }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"post-operation\"\n    }}>{`POST operation`}</h2>\n    <p>{`The following POST operation and payload creates a `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/catalog\"\n      }}>{`catalog`}</a>{` category named `}<inlineCode parentName=\"p\">{`New Category`}</inlineCode>{`. Commerce returns only the `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`parent_id`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` attributes`}</p>\n    <p><inlineCode parentName=\"p\">{`POST <host>/rest/<store_code>/V1/categories?fields=id,parent_id,name`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Payload:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"category\": {\n    \"name\": \"New Category\",\n    \"is_active\": true\n  }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Response:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n\"id\": 43\n\"parent_id\": 2\n\"name\": \"New Category\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-with-searchcriteria\"\n    }}>{`Using with searchCriteria`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-webapi/rest/use-rest/performing-searches/\"\n      }}><inlineCode parentName=\"a\">{`searchCriteria`}</inlineCode>{` query parameter`}</a>{` allows you to search across multiple objects in a collection. You can use the `}<inlineCode parentName=\"p\">{`fields`}</inlineCode>{` query parameter in conjunction with `}<inlineCode parentName=\"p\">{`searchCriteria`}</inlineCode>{` to limit the output. The question mark (?) that precedes `}<inlineCode parentName=\"p\">{`fields`}</inlineCode>{` in all the other examples in this document is replaced with an ampersand (`}{`&`}{`).`}</p>\n    <p>{`The following query returns only the `}<inlineCode parentName=\"p\">{`sku`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` parameters for product items whose `}<inlineCode parentName=\"p\">{`category_gear`}</inlineCode>{` attribute includes the value `}<inlineCode parentName=\"p\">{`86`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`GET <host>/rest/<store_code>/V1/products/?searchCriteria[filter_groups][0][filters][0][field]=category_gear&searchCriteria[filter_groups][0][filters][0][value]=86&searchCriteria[filter_groups][0][filters][0][condition_type]=finset&fields=items[sku,name]`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n\"items\":\n  {\n    \"sku\": \"24-MG04\"\n    \"name\": \"Aim Analog Watch\"\n  }\n  {\n    \"sku\": \"24-MG01\"\n    \"name\": \"Endurance Watch\"\n  }\n  {\n    \"sku\": \"24-MG03\"\n    \"name\": \"Summit Watch\"\n  }\n  {\n    \"sku\": \"24-MG05\"\n    \"name\": \"Cruise Dual Analog Watch\"\n  }\n  {\n    \"sku\": \"24-MG02\"\n    \"name\": \"Dash Digital Watch\"\n  }\n  {\n    \"sku\": \"24-WG09\"\n    \"name\": \"Luma Analog Watch\"\n  }\n  {\n    \"sku\": \"24-WG01\"\n    \"name\": \"Bolo Sport Watch\"\n  }\n  {\n    \"sku\": \"24-WG03\"\n      \"name\": \"Clamber Watch\"\n  }\n  {\n    \"sku\": \"24-WG02\"\n    \"name\": \"Didi Sport Watch\"\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"related-topics\"\n    }}>{`Related topics`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/commerce-webapi/rest/use-rest/performing-searches/\"\n        }}>{`Search using REST APIs`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}