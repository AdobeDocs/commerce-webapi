{"version":3,"file":"component---src-pages-graphql-schema-b-2-b-negotiable-quote-index-md-0b7ca5bc259c4201d919.js","mappings":"yRAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,GAHsBD,MAKtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,wBACH,2BACL,kBAAK,0MACL,oBACE,eAAIC,WAAW,OACb,cAAGA,WAAW,MAAO,wEAEvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,wEAEvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,uFAGzB,kBAAK,QAAM,cAAGA,WAAW,IACrB,KAAQ,0FACP,eAAIA,WAAW,KAAM,iCAAyC,kDACnE,SAACX,EAAW,CAACY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,yFAAuF,cAAGC,WAAW,IACtG,KAAQ,0EACL,kBAAsB,iCAGjC,CAEAH,EAAWM,gBAAiB,C","sources":["webpack://commerce-webapi/./src/pages/graphql/schema/b2b/negotiable-quote/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"negotiable-quote-b2b\"\n    }}>{`Negotiable quote (B2B)`}</h1>\n    <p>{`Company users (buyers) and merchants (sellers) use negotiable quotes to manage the negotiation process for an order. Although the negotiation process can be complex, the basic steps are as follows:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The buyer adds items to the cart and initiates a negotiable quote.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The seller reviews the request and begins the negotiation process.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When the buyer and seller agree to terms, the buyer begins the checkout process.`}</p>\n      </li>\n    </ul>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-admin/b2b/quotes/quotes.html?lang=en\"\n      }}><em parentName=\"a\">{`B2B for Adobe Commerce Guide`}</em></a>{` describes the negotiation process in detail.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The Adobe Commerce GraphQL APIs provide coverage for buyer actions only. You can use `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/webapi/rest/b2b/negotiable-quote/\"\n      }}>{`REST endpoints`}</a>{` to integrate seller actions.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}