"use strict";(self.webpackChunkcommerce_webapi=self.webpackChunkcommerce_webapi||[]).push([[2130],{96575:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return d},default:function(){return h}});var a=n(87462),r=n(45987),i=(n(35776),n(3905)),l=n(65663);const o=["components"],d={},m={_frontmatter:d},p=l.Z;function h(e){let{components:t}=e,n=(0,r.Z)(e,o);return(0,i.mdx)(p,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"exception-handling"},"Exception handling"),(0,i.mdx)("p",null,'The WebApi module has an implementation to "mask" ',(0,i.mdx)("inlineCode",{parentName:"p"},"LocalizedExceptions")," so they aren't exposed to the client. GraphQL accomplishes this by restricting verbose output to only those exceptions implementing ",(0,i.mdx)("inlineCode",{parentName:"p"},"\\GraphQL\\Error\\ClientAware"),", and only if the system is in developer mode. In these circumstances, the application returns a full stack trace. Otherwise, the application writes these exceptions to the system ",(0,i.mdx)("inlineCode",{parentName:"p"},"exception.log"),' file while returning an "internal server error" to the client.'),(0,i.mdx)("p",null,"You should implement the ",(0,i.mdx)("inlineCode",{parentName:"p"},"\\GraphQL\\Error\\ClientAware")," interface to handle errors in your module that are directly related to a GraphQL field having an anticipated exception. If you don't, the client will not receive useful messages. However, you should ensure that you don't implement the ",(0,i.mdx)("inlineCode",{parentName:"p"},"ClientAware")," interface for too many exceptions. Doing this risks exposing sensitive data to the client."),(0,i.mdx)("p",null,"Adobe Commerce and Magento Open Source provide the following exception classes in ",(0,i.mdx)("inlineCode",{parentName:"p"},"Magento\\Framework\\GraphQl\\Exception"),"."),(0,i.mdx)("table",null,(0,i.mdx)("thead",{parentName:"table"},(0,i.mdx)("tr",{parentName:"thead"},(0,i.mdx)("th",{parentName:"tr",align:null},"Class"),(0,i.mdx)("th",{parentName:"tr",align:null},"Exception category"),(0,i.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,i.mdx)("tbody",{parentName:"table"},(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"GraphQlAlreadyExistsException")),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"graphql-already-exists")),(0,i.mdx)("td",{parentName:"tr",align:null},"Thrown when data already exists")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"GraphQlAuthenticationException")),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"graphql-authentication")),(0,i.mdx)("td",{parentName:"tr",align:null},"Thrown when an authentication fails")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"GraphQlAuthorizationException")),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"graphql-authorization")),(0,i.mdx)("td",{parentName:"tr",align:null},"Thrown when an authorization error occurs")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"GraphQlInputException")),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"graphql-input")),(0,i.mdx)("td",{parentName:"tr",align:null},"Thrown when a query contains invalid input")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"GraphQlNoSuchEntityException")),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"graphql-no-such-entity")),(0,i.mdx)("td",{parentName:"tr",align:null},"Thrown when an expected resource doesn't exist")))))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-graphql-develop-exceptions-md-c57c60c14d848def20e8.js.map