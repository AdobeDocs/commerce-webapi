{"version":3,"file":"component---src-pages-rest-use-rest-asynchronous-web-endpoints-md-de3ed7f7a944449abde8.js","mappings":"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","sources":["webpack://commerce-webapi/./src/pages/rest/use-rest/asynchronous-web-endpoints.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport * as Vars from '../../../data/vars.js';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"asynchronous-web-endpoints\"\n    }}>{`Asynchronous web endpoints`}</h1>\n    <p>{`An asynchronous web endpoint intercepts messages to a Web API and writes them to the message queue. Each time the system accepts such an API request, it generates a UUID identifier. Adobe Commerce includes this UUID when it adds the message to the queue. Then, a consumer reads the messages from the queue and executes them one-by-one.`}</p>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`bin/magento queue:consumers:start async.operations.all`}</inlineCode>{` command to start the consumer that handles asynchronous and bulk API messages.`}</p>\n    <p>{`Commerce supports the following types of asynchronous requests:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`POST`}</li>\n      <li parentName=\"ul\">{`PUT`}</li>\n      <li parentName=\"ul\">{`DELETE`}</li>\n      <li parentName=\"ul\">{`PATCH`}</li>\n    </ul>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`GET requests are not supported. Although Commerce does not currently implement any PATCH requests, they are supported in custom extensions.`}</p>\n    <p>{`The route to all asynchronous calls contains the prefix `}<inlineCode parentName=\"p\">{`/async`}</inlineCode>{`, added before `}<inlineCode parentName=\"p\">{`/V1`}</inlineCode>{` of a standard synchronous endpoint. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`POST /async/V1/products\nPUT /async/V1/products/:sku\n`}</code></pre>\n    <Vars.sitedatavarce /> and <Vars.sitedatavaree /> installations support asynchronous web endpoints.\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-webapi/rest/\"\n      }}>{`REST API documentation`}</a>{` provides a list of all current synchronous Commerce API routes.`}</p>\n    <p>{`The response of an asynchronous request contains the following fields:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Field name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Data type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`bulk_uuid`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A generated universally unique identifier.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`request_items`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array containing information about the status of the asynchronous request.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`id`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A generated ID that identifies the request.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`data_hash`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SHA256 encoded content of incoming message.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`status`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Reserved for future use. Currently, the value is always `}<inlineCode parentName=\"td\">{`accepted`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`errors`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Reserved for future use. Currently, the value is always `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`. If an error occurs, the system provides all error-related information as a standard `}<inlineCode parentName=\"td\">{`webapi`}</inlineCode>{` exception.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"sample-usage\"\n    }}>{`Sample usage`}</h2>\n    <p>{`The following call asynchronously changes the price of the product that has a `}<inlineCode parentName=\"p\">{`sku`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`24-MB01`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`PUT <host>/rest/<store_code>/async/V1/products/24-MB01\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"payload\"\n    }}>{`Payload`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"product\": {\n    \"price\": 29\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"response\"\n    }}>{`Response`}</h3>\n    <p>{`Commerce generates a `}<inlineCode parentName=\"p\">{`bulk_uuid`}</inlineCode>{` for each asynchronous request. Use the `}<inlineCode parentName=\"p\">{`bulk_uuid`}</inlineCode>{` to determine the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-webapi/rest/use-rest/operation-status-endpoints/\"\n      }}>{`operation status`}</a>{` of your request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"bulk_uuid\": \"fbfca270-7a90-4c4e-9f32-d6cf3728cdc7\",\n    \"request_items\": [\n        {\n            \"id\": 0,\n            \"data_hash\": \"9c1bd4bfd8defcc856ddf129cc01d172625d139d5f7dcf53b6cb09a0e9a843a3\",\n            \"status\": \"accepted\"\n        }\n    ],\n    \"errors\": false\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"store-scopes\"\n    }}>{`Store scopes`}</h2>\n    <p>{`You can specify a store code (which is labeled in the Admin as store view code) in the route of an asynchronous endpoint so that it operates on a specific store, as shown below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`POST /<store_code>/async/V1/products\nPUT /<store_code>/async/V1/products/:sku\n`}</code></pre>\n    <p>{`As a result, the asynchronous calls update the products on the specific store, instead of the default store.`}</p>\n    <p>{`You can specify the `}<inlineCode parentName=\"p\">{`all`}</inlineCode>{` store code to perform operations on all existing stores:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`POST /all/async/V1/products\nPUT /all/async/V1/products/:sku\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"fallback-and-creatingupdating-objects-when-setting-store-scopes\"\n    }}>{`Fallback and creating/updating objects when setting store scopes`}</h3>\n    <p>{`The following rules apply when you create or update an object, such as a product.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If you do not set the store code while creating a new product, Commerce creates a new object with all values set globally for each scope.`}</li>\n      <li parentName=\"ul\">{`If you do not set the store code while updating a product, then by fallback, Commerce updates values for the default store only.`}</li>\n      <li parentName=\"ul\">{`If you include the `}<inlineCode parentName=\"li\">{`all`}</inlineCode>{` parameter, then Commerce updates values for all store scopes (in case a particular store doesn't yet have its own value set).`}</li>\n      <li parentName=\"ul\">{`If `}<inlineCode parentName=\"li\">{`<store_code>`}</inlineCode>{` parameter is set, then values for only defined store will be updated.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}