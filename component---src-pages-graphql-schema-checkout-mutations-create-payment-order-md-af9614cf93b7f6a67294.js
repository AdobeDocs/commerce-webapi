"use strict";(self.webpackChunkcommerce_webapi=self.webpackChunkcommerce_webapi||[]).push([[4821],{94963:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return o},default:function(){return c}});var a=n(58168),r=n(80045),m=(n(88763),n(15680)),d=n(83407);const l=["components"],o={},p=(i="InlineAlert",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,m.mdx)("div",e)});var i;const u={_frontmatter:o},s=d.A;function c(e){let{components:t}=e,n=(0,r.A)(e,l);return(0,m.mdx)(s,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"createpaymentorder-mutation"},"createPaymentOrder mutation"),(0,m.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,m.mdx)("p",null,"This mutation is available only if you have installed ",(0,m.mdx)("a",{parentName:"p",href:"https://commercemarketplace.adobe.com/magento-payment-services.html"},"Payment Services for Adobe Commerce")," 2.3.0 or higher."),(0,m.mdx)("p",null,"The ",(0,m.mdx)("inlineCode",{parentName:"p"},"createPaymentOrder")," mutation creates a payment order for later processing with Payment Services enabled."),(0,m.mdx)("p",null,"The mutation can return details about the following payment methods supported in ",(0,m.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/payments-checkout/payments-options.html"},"Payment Services"),":"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},"Apple Pay"),(0,m.mdx)("li",{parentName:"ul"},"Google Pay"),(0,m.mdx)("li",{parentName:"ul"},"PayPal Hosted Fields"),(0,m.mdx)("li",{parentName:"ul"},"PayPal Smart Buttons")),(0,m.mdx)("p",null,"Each of these payment methods can have a different payment source, for example, PayPal Hosted Fields only works with credit cards. You need to run ",(0,m.mdx)("inlineCode",{parentName:"p"},"getPaymentConfig")," and ",(0,m.mdx)("inlineCode",{parentName:"p"},"setPaymentMethodOnCart")," endpoints before running the ",(0,m.mdx)("inlineCode",{parentName:"p"},"createPaymentOrder")," mutation."),(0,m.mdx)("h2",{id:"syntax"},"Syntax"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-graphql"},"mutation { \n    createPaymentOrder(\n        input: CreatePaymentOrderInput! \n    ) CreatePaymentOrderOutput    \n}\n")),(0,m.mdx)("h2",{id:"example-usage"},"Example usage"),(0,m.mdx)("p",null,"The following example creates a payment order. The payment method was previously set to ",(0,m.mdx)("inlineCode",{parentName:"p"},"payment_services_paypal_hosted_fields"),"."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Request:")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  createPaymentOrder(input: {\n    cartId: "AJCY8dhIfuch9LcDHAxEkw7oG3DjGdKt"\n    methodCode: "payment_services_paypal_hosted_fields"\n    paymentSource: "cc"\n    location: CHECKOUT\n    vaultIntent: false\n  }) {\n    id\n    mp_order_id\n    status\n    amount\n    currency_code\n  }\n}\n')),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Response:")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createPaymentOrder": {\n      "id": "9SA28234K9340625D",\n      "mp_order_id": "mp-order-8b0488f9-46c5-4640-b577-c5f7d90cf224",\n      "status": "CREATED",\n      "amount": 50,\n      "currency_code": "USD"\n    }\n  }\n}\n')),(0,m.mdx)("h2",{id:"input-attributes"},"Input attributes"),(0,m.mdx)("p",null,"The ",(0,m.mdx)("inlineCode",{parentName:"p"},"CreatePaymentOrderinput")," object contains the following input attributes:"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,m.mdx)("th",{parentName:"tr",align:null},"Data Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"cartId")),(0,m.mdx)("td",{parentName:"tr",align:null},"String!"),(0,m.mdx)("td",{parentName:"tr",align:null},"The unique ID of the cart")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"location")),(0,m.mdx)("td",{parentName:"tr",align:null},"PaymentLocation!"),(0,m.mdx)("td",{parentName:"tr",align:null},"The origin location for that payment request. The possible values are")))),(0,m.mdx)("p",null,"PRODUCT_DETAIL, MINICART, CART, CHECKOUT, ADMIN\n",(0,m.mdx)("inlineCode",{parentName:"p"},"methodCode")," | String! | The code for the selected payment method\n",(0,m.mdx)("inlineCode",{parentName:"p"},"paymentSource")," | String! | The payment source for the payment method. The possible values are credit card (",(0,m.mdx)("inlineCode",{parentName:"p"},"cc"),"), PayPal (",(0,m.mdx)("inlineCode",{parentName:"p"},"paypal"),"), and Apple Pay (",(0,m.mdx)("inlineCode",{parentName:"p"},"applepay"),")\n",(0,m.mdx)("inlineCode",{parentName:"p"},"vaultIntent")," | Boolean | Indicates whether the payment information should be vaulted. This attribute is only applicable to the ",(0,m.mdx)("inlineCode",{parentName:"p"},"hosted_fields")," payment method. The default value is ",(0,m.mdx)("inlineCode",{parentName:"p"},"false")),(0,m.mdx)("h2",{id:"output-attributes"},"Output attributes"),(0,m.mdx)("p",null,"The ",(0,m.mdx)("inlineCode",{parentName:"p"},"CreatePaymentOrderOutput")," object contains the payment order details that are needed to fulfill a payment."),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,m.mdx)("th",{parentName:"tr",align:null},"Data Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"id")),(0,m.mdx)("td",{parentName:"tr",align:null},"String"),(0,m.mdx)("td",{parentName:"tr",align:null},"The unique order ID generated by PayPal")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"mp_order_id")),(0,m.mdx)("td",{parentName:"tr",align:null},"String"),(0,m.mdx)("td",{parentName:"tr",align:null},"The unique order ID generated in Commerce if Payment Services is enabled after PayPal returns the ",(0,m.mdx)("inlineCode",{parentName:"td"},"id"))),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"status")),(0,m.mdx)("td",{parentName:"tr",align:null},"String"),(0,m.mdx)("td",{parentName:"tr",align:null},"The status of the payment order. See ",(0,m.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/commerce-admin/stores-sales/order-management/orders/order-status.html"},"order status")," for more information")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"amount")),(0,m.mdx)("td",{parentName:"tr",align:null},"Float"),(0,m.mdx)("td",{parentName:"tr",align:null},"The amount of the payment order")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"currency_code")),(0,m.mdx)("td",{parentName:"tr",align:null},"String"),(0,m.mdx)("td",{parentName:"tr",align:null},"The currency code of the payment order")))),(0,m.mdx)("p",null,"See ",(0,m.mdx)("a",{parentName:"p",href:"https://developer.paypal.com/reference/currency-codes/"},"PayPal currency codes")," documentation for more information."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-graphql-schema-checkout-mutations-create-payment-order-md-af9614cf93b7f6a67294.js.map