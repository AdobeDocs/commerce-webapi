{"version":3,"file":"component---src-pages-get-started-web-api-functional-testing-md-50bb55589403f8f8534b.js","mappings":"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","sources":["webpack://commerce-webapi/./src/pages/get-started/web-api-functional-testing.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"web-api-functional-testing\"\n    }}>{`Web API Functional Testing`}</h1>\n    <p>{`The Web API testing framework allows you to test Web APIs from the client application point of view. The tests can be used with either REST or SOAP. The REST or SOAP adapter that runs the tests is specified in PHPUnit configuration. See `}<a parentName=\"p\" {...{\n        \"href\": \"#how-to-run-the-tests\"\n      }}>{`How to Run the Tests`}</a>{` for more information.`}</p>\n    <p>{`To run Web API tests for GraphQl, see `}<a parentName=\"p\" {...{\n        \"href\": \"../graphql/develop/functional-testing.md\"\n      }}>{`GraphQL functional testing`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"implementation-details\"\n    }}>{`Implementation Details`}</h2>\n    <p>{`The Web API functional testing framework depends on the integration testing framework and reuses most of classes implemented there.`}</p>\n    <h3 {...{\n      \"id\": \"custom-annotations-for-data-fixtures\"\n    }}>{`Custom Annotations for Data Fixtures`}</h3>\n    <p>{`In the Web API functional tests only, the custom annotation  `}<inlineCode parentName=\"p\">{`@magentoApiDataFixture`}</inlineCode>{` is available for declaring fixtures. The difference of this annotation from `}<inlineCode parentName=\"p\">{`@magentoDataFixture`}</inlineCode>{` is that the fixture will be committed and accessible during HTTP requests made within the test body. The usage rules of `}<inlineCode parentName=\"p\">{`@magentoApiDataFixture`}</inlineCode>{` are the same as `}<inlineCode parentName=\"p\">{`@magentoDataFixture`}</inlineCode>{` usage rules.`}</p>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If data was added to the DB using `}<inlineCode parentName=\"p\">{`@magentoApiDataFixture`}</inlineCode>{`, it will not be automatically cleared after test execution. The data is cleared when `}<inlineCode parentName=\"p\">{`@magentoDataFixture`}</inlineCode>{` is used.`}</p>\n    <p>{`Do not define fixtures in `}<inlineCode parentName=\"p\">{`dev/tests/api-functional`}</inlineCode>{`. Instead, they must be taken from `}<inlineCode parentName=\"p\">{`dev/tests/integration`}</inlineCode>{`. The integration framework defines most necessary fixtures, and they should be reused during Web API functional testing. If the existing set of fixtures is insufficient, add new fixtures under `}<inlineCode parentName=\"p\">{`dev/tests/integration`}</inlineCode>{`. The fixtures will then be available for both testing frameworks.`}</p>\n    <p>{`To keep your test environment clean, clear all entities created in fixture files or within tests itself from the DB after test execution. This can be done either directly in tearDown or by a corresponding rollback for the fixture file. This file should be named the same as a fixture, but with `}<inlineCode parentName=\"p\">{`_rollback`}</inlineCode>{` suffix.`}</p>\n    <h2 {...{\n      \"id\": \"how-to-create-a-new-test\"\n    }}>{`How to Create a New Test`}</h2>\n    <p>{`All Web API functional tests should inherit from the generic test case `}<inlineCode parentName=\"p\">{`Magento\\\\TestFramework\\\\TestCase\\\\WebapiAbstract`}</inlineCode>{`. It defines the `}<inlineCode parentName=\"p\">{`_webApiCall()`}</inlineCode>{` method, which should be used to perform Web API calls from tests. Clients of `}<inlineCode parentName=\"p\">{`_webApiCall()`}</inlineCode>{` are unaware of which adapter will be used to perform the remote call.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`namespace Magento\\\\Webapi\\\\Routing;\n\nclass CoreRoutingTest extends \\\\Magento\\\\TestFramework\\\\TestCase\\\\WebapiAbstract\n{\n    public function testBasicRoutingExplicitPath()\n    {\n        $itemId = 1;\n        $serviceInfo = [\n            'rest' => [\n                'resourcePath' => '/V1/testmodule1/' . $itemId,\n                'httpMethod' => \\\\Magento\\\\Framework\\\\Webapi\\\\Rest\\\\Request::HTTP_METHOD_GET,\n            ],\n            'soap' => [\n                'service' => 'testModule1AllSoapAndRestV1',\n                'operation' => 'testModule1AllSoapAndRestV1Item',\n            ],\n        ];\n        $requestData = ['itemId' => $itemId];\n        $item = $this->_webApiCall($serviceInfo, $requestData);\n        $this->assertEquals('testProduct1', $item['name'], \"Item was retrieved unsuccessfully\");\n    }\n}\n`}</code></pre>\n    <p>{`The test above should be able to test SOAP and REST, depending on what adapter is currently used by the testing framework. The format of `}<inlineCode parentName=\"p\">{`$serviceInfo`}</inlineCode>{` is defined by the Web API client adapter interface:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`namespace Magento\\\\TestFramework\\\\TestCase\\\\Webapi;\n\ninterface AdapterInterface\n{\n    /**\n     * Perform call to the specified service method.\n     *\n     * @param array $serviceInfo <pre>\n     * array(\n     *     'rest' => array(\n     *         'resourcePath' => $resourcePath, // e.g. /products/:id\n     *         'httpMethod' => $httpMethod,     // e.g. GET\n     *         'token' => '21hasbtlaqy8t3mj73kjh71cxxkqj4aq'    // optional : for token based Authentication. Will\n     *                                                             override default OAuth based authentication provided\n     *                                                             by test framework\n     *     ),\n     *     'soap' => array(\n     *         'service' => $soapService,    // soap service name with Version suffix e.g. catalogProductV1, customerV2\n     *         'operation' => $operation     // soap operation name e.g. catalogProductCreate\n     *     )\n     * );\n     * </pre>\n     * @param array $arguments\n     * @param string|null $storeCode if store code not provided, default store code will be used\n     * @param \\\\Magento\\\\Integration\\\\Model\\\\Integration|null $integration\n     * @return array|string|int|float|bool\n     */\n    public function call($serviceInfo, $arguments = [], $storeCode = null, $integration = null);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"how-to-run-the-tests\"\n    }}>{`How to Run the Tests`}</h2>\n    <h3 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install the PHP Soap extension.`}</p>\n        <p parentName=\"li\">{`Copy `}<inlineCode parentName=\"p\">{`php_soap.dll`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`php_soap.so`}</inlineCode>{` to your PHP extensions directory. Edit your `}<inlineCode parentName=\"p\">{`php.ini`}</inlineCode>{` file and enable the PHP Soap extension. Usually this means deleting the leading semi-colon in front of the extension. Then restart Apache.`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`extension=php_soap.dll`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Before running the functional tests you need to clear your cache. Now you are ready to run the tests.`}</p>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"running-the-tests\"\n    }}>{`Running the Tests`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy `}<inlineCode parentName=\"p\">{`dev/tests/api-functional/phpunit_rest.xml.dist`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`phpunit_soap.xml.dist`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`dev/tests/api-functional/phpunit_rest.xml`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`phpunit_soap.xml`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Define the Commerce instance URL as a value of `}<inlineCode parentName=\"p\">{`TESTS_BASE_URL`}</inlineCode>{`, Test Webservice User as value of `}<inlineCode parentName=\"p\">{`TESTS_WEBSERVICE_USER`}</inlineCode>{` and Test Webservice API key as value of `}<inlineCode parentName=\"p\">{`TESTS_WEBSERVICE_APIKEY`}</inlineCode>{` in copied file i.e. `}<inlineCode parentName=\"p\">{`phpunit_rest.xml`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`phpunit_soap.xml`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Copy `}<inlineCode parentName=\"p\">{`dev/tests/api-functional/config/install-config-mysql.php.dist`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`dev/tests/api-functional/config/install-config-mysql.php`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Configure your DB connection and install settings in `}<inlineCode parentName=\"p\">{`dev/tests/api-functional/config/install-config-mysql.php`}</inlineCode>{`. Specify the Commerce database. The base URL to access this instance must be the same specified in the `}<inlineCode parentName=\"p\">{`phpunit_rest.xml`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`phpunit_soap.xml`}</inlineCode>{` file.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run `}<inlineCode parentName=\"p\">{`phpunit`}</inlineCode>{` using the `}<inlineCode parentName=\"p\">{`dev/tests/api-functional/phpunit_rest.xml`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`dev/tests/api-functional/phpunit_soap.xml`}</inlineCode>{` configuration file::`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`vendor/bin/phpunit --configuration <full xml file path>\n`}</code></pre>\n        <p parentName=\"li\">{`or`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`vendor/bin/phpunit -c <full xml file path>\n`}</code></pre>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}