"use strict";(self.webpackChunkcommerce_webapi=self.webpackChunkcommerce_webapi||[]).push([[5371],{82843:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return o},default:function(){return u}});var r=t(87462),a=t(45987),d=(t(35776),t(3905)),m=t(91515);const s=["components"],o={},i={_frontmatter:o},p=m.Z;function u(e){let{components:n}=e,t=(0,a.Z)(e,s);return(0,d.mdx)(p,(0,r.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"addpurchaseorderitemstocart-mutation"},"addPurchaseOrderItemsToCart mutation"),(0,d.mdx)("p",null,"The ",(0,d.mdx)("inlineCode",{parentName:"p"},"addPurchaseOrderItemsToCart")," mutation adds all purchase order items to the shopping cart. The request must specify a ",(0,d.mdx)("inlineCode",{parentName:"p"},"cart_id")," and a ",(0,d.mdx)("inlineCode",{parentName:"p"},"purchase_order_uid"),". If the value of ",(0,d.mdx)("inlineCode",{parentName:"p"},"replace_existing_cart_items")," is set to ",(0,d.mdx)("inlineCode",{parentName:"p"},"true"),", the mutation deletes the pre-existing items from the purchase order. Otherwise, the mutation merges the pre-existing items with the new items."),(0,d.mdx)("h2",{id:"syntax"},"Syntax"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-graphql"},"mutation {\n  addPurchaseOrderItemsToCart(\n    input: AddPurchaseOrderItemsToCartInput!\n  ){\n    AddProductsToCartOutput\n  }\n}\n")),(0,d.mdx)("h2",{id:"reference"},"Reference"),(0,d.mdx)("p",null,"The ",(0,d.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addPurchaseOrderItemsToCart"},(0,d.mdx)("inlineCode",{parentName:"a"},"addPurchaseOrderItemsToCart"))," reference provides detailed information about the types and fields defined in this mutation."),(0,d.mdx)("h2",{id:"example-usage"},"Example usage"),(0,d.mdx)("p",null,"The following example adds all purchase order items to the shopping cart."),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Request:")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  addPurchaseOrderItemsToCart(\n    input: {\n      purchase_order_uid: "MQ==",\n      cart_id: "hJUrIcPm77uCyYkSTBRGyjSvS40mw1Qd",\n      replace_existing_cart_items: false\n    }\n  ) {\n    cart {\n      id\n      items {\n        product {\n          sku\n        }\n      }\n    }\n    user_errors {\n      message\n      code\n    }\n  }\n}\n')),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"Response:")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "addPurchaseOrderItemsToCart": {\n      "cart": {\n        "id": "hJUrIcPm77uCyYkSTBRGyjSvS40mw1Qd",\n        "items": [\n          {\n            "product": {\n              "sku": "Simple product"\n            }\n          }\n        ]\n      },\n      "user_errors": []\n    }\n  }\n}\n')))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-graphql-schema-b-2-b-purchase-order-mutations-add-items-to-cart-md-c17d735e9498f2867113.js.map