{"version":3,"file":"component---src-pages-graphql-tutorials-checkout-add-product-to-cart-md-9cddcba4c24a5c89e39b.js","mappings":"yRAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,GAHsBD,MAKtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,mCACH,qCACL,kBAAK,oNACL,oBACE,eAAIC,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,sDACL,qBACP,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,4DACL,2BACP,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,4DACL,2BACP,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,sDACL,iCACP,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,uDACL,uBAET,mBAAG,cAAGA,WAAW,IACb,KAAQ,mDACL,qCAAyC,0EAChD,kBAAK,YAAU,uBAAYA,WAAW,KAAM,mBAAgC,gDAA8C,uBAAYA,WAAW,KAAM,sBAAmC,iDAC1L,SAACX,EAAW,CAACY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,kIAAgI,uBAAYC,WAAW,KAAM,iBAA8B,kCAAgC,cAAGA,WAAW,IAC1O,KAAQ,uCACL,wBAA4B,uBACnC,eACE,GAAM,+CACH,gDACL,kBAAK,yEACL,kBAAK,YAAU,uBAAYA,WAAW,KAAM,eAA4B,2CAAyC,cAAGA,WAAW,IAC3H,KAAQ,mDACL,6BAAiC,MACxC,kBAAK,2JACL,mBAAG,mBAAQA,WAAW,KAAM,cAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,uYA2BP,mBAAG,mBAAQA,WAAW,KAAM,eAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,kUAmBP,eACE,GAAM,gDACH,iDACL,kBAAK,kKAEL,mBAAG,mBAAQA,WAAW,KAAM,cAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBACV,yYA2BP,mBAAG,mBAAQA,WAAW,KAAM,eAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,ugBA2BP,kBAAK,iGACL,eACE,GAAM,oBACH,qBACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,yDAAuD,uBAAYA,WAAW,KAAM,wBAAqC,kBAAgB,uBAAYA,WAAW,KAAM,cAA2B,OAExN,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,qEAK7B,CAEAH,EAAWM,gBAAiB,C","sources":["webpack://commerce-webapi/./src/pages/graphql/tutorials/checkout/add-product-to-cart.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"step-3-add-products-to-the-cart\"\n    }}>{`Step 3. Add products to the cart`}</h1>\n    <p>{`GraphQL supports all product types, but this tutorial only demonstrates how to add a simple product and a virtual product to the shopping cart. You can find more details and examples in the following topics:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../schema/cart/mutations/add-bundle-products.md\"\n        }}>{`Bundle products`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../schema/cart/mutations/add-configurable-products.md\"\n        }}>{`Configurable products`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../schema/cart/mutations/add-downloadable-products.md\"\n        }}>{`Downloadable products`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../schema/cart/mutations/add-simple-products.md\"\n        }}>{`Simple and grouped products`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../schema/cart/mutations/add-virtual-products.md\"\n        }}>{`Virtual products`}</a></li>\n    </ul>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../../schema/products/interfaces/types/index.md\"\n      }}>{`Product interface implementations`}</a>{` also describes how to create queries that access product interfaces.`}</p>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`updateCartItems`}</inlineCode>{` mutation to update shopping cart items and `}<inlineCode parentName=\"p\">{`removeItemFromCart`}</inlineCode>{` to remove a product from the shopping cart.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If you add a product to the shopping cart as a registered customer, be sure to send the customer's authorization token in the `}<inlineCode parentName=\"p\">{`Authorization`}</inlineCode>{` parameter of the header. See `}<a parentName=\"p\" {...{\n        \"href\": \"../../usage/authorization-tokens.md\"\n      }}>{`Authorization tokens`}</a>{` for more details.`}</p>\n    <h2 {...{\n      \"id\": \"add-a-simple-product-into-the-shopping-cart\"\n    }}>{`Add a simple product into the shopping cart`}</h2>\n    <p>{`The following mutation adds a simple product into the shopping cart.`}</p>\n    <p>{`Replace `}<inlineCode parentName=\"p\">{`{ CART_ID }`}</inlineCode>{` with the unique shopping cart ID from `}<a parentName=\"p\" {...{\n        \"href\": \"../../tutorials/checkout/add-product-to-cart.md\"\n      }}>{`Step 2. Create empty cart`}</a>{`.`}</p>\n    <p>{`In this example, we will add the Aim Analog Watch (SKU 24-MG04) from the default Luma catalog to the cart. The SKU identifies the product to be added.`}</p>\n    <p><strong parentName=\"p\">{`Request:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`mutation {\n  addSimpleProductsToCart(\n    input: {\n      cart_id: \"{ CART_ID }\"\n      cart_items: [\n        {\n          data: {\n            quantity: 1\n            sku: \"24-MG04\"\n          }\n        }\n      ]\n    }\n  ) {\n    cart {\n      items {\n        id\n        product {\n          sku\n          stock_status\n        }\n        quantity\n      }\n    }\n  }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Response:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"addSimpleProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"id\": \"5\",\n            \"product\": {\n              \"sku\": \"24-MG04\",\n              \"stock_status\": \"IN_STOCK\"\n            },\n            \"quantity\": 1\n          }\n        ]\n      }\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"add-a-virtual-product-into-the-shopping-cart\"\n    }}>{`Add a virtual product into the shopping cart`}</h2>\n    <p>{`The following mutation adds a virtual product into the shopping cart.\nIn this example, we add the Beginner's Yoga video downloadable product (SKU 240-LV04).`}</p>\n    <p><strong parentName=\"p\">{`Request:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`mutation {\n  addVirtualProductsToCart(\n    input: {\n      cart_id: \"{ CART_ID }\"\n      cart_items: [\n        {\n          data: {\n            quantity: 1\n            sku: \"240-LV04\"\n          }\n        }\n      ]\n    }\n  ) {\n    cart {\n      items {\n        id\n        product {\n          sku\n          stock_status\n        }\n        quantity\n      }\n    }\n  }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Response:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"addVirtualProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"id\": \"5\",\n            \"product\": {\n              \"sku\": \"24-MG04\",\n              \"stock_status\": \"IN_STOCK\"\n            },\n            \"quantity\": 1\n          },\n          {\n            \"id\": \"6\",\n            \"product\": {\n              \"sku\": \"240-LV04\",\n              \"stock_status\": \"IN_STOCK\"\n            },\n            \"quantity\": 1\n          }\n        ]\n      }\n    }\n  }\n}\n`}</code></pre>\n    <p>{`The response lists all items currently in the cart, including the just-added video download.`}</p>\n    <h2 {...{\n      \"id\": \"verify-this-step\"\n    }}>{`Verify this step`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Sign in as a customer to the website using the email `}<inlineCode parentName=\"p\">{`john.doe@example.com`}</inlineCode>{` and password `}<inlineCode parentName=\"p\">{`b1b2b3l@w+`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Go to the shopping cart. All the items you added are displayed.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}