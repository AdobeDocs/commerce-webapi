{"version":3,"file":"component---src-pages-graphql-payment-methods-payments-advanced-md-343a4085271c9333173d.js","mappings":"0SAUaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,2CADR,4CAGA,mRAAoQ,cAAGC,WAAW,IAC9Q,KAAQ,sBADwP,sDAApQ,cAGA,gIAAiH,cAAGA,WAAW,IAC3H,KAAQ,mBADqG,gBAAjH,8DAEuF,uBAAYA,WAAW,KAAvB,QAFvF,iBAEwJ,cAAGA,WAAW,IAClK,KAAQ,gFAD4I,mCAFxJ,+DAKA,uFACA,eACE,GAAM,qCADR,sCAGA,2IACA,mBAAG,gBAAKA,WAAW,IACf,IAAO,mFACP,IAAO,gDAGX,SAAC,UAAD,CAAqBD,QAAQ,yBAC7B,eACE,GAAM,kCADR,mCAGA,eACE,GAAM,oCACL,uBAAYC,WAAW,MAAvB,0BAFH,cAGA,oGAAqF,uBAAYA,WAAW,KAAvB,QAArF,kBAAuJ,uBAAYA,WAAW,KAAvB,oBAAvJ,8CAAiQ,uBAAYA,WAAW,KAAvB,gBAAjQ,qDAEA,SAAC,UAAD,CAAuBD,QAAQ,2BAC/B,eACE,GAAM,iBADR,kBAGA,sDAAuC,uBAAYC,WAAW,KAAvB,0BAAvC,oEACA,mBAAG,mBAAQA,WAAW,KAAnB,cACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBADZ,+dAuBL,mBAAG,mBAAQA,WAAW,KAAnB,eACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,yNAiBR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-webapi/./src/pages/graphql/payment-methods/payments-advanced.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-webapi/commerce-webapi/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport PayflowLinkWorkflow from '/src/pages/_includes/graphql/payment-methods/payflow-link-workflow.md';\nimport PayflowLinkAttributes from '/src/pages/_includes/graphql/payment-methods/payflow-link-attributes.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"paypal-payments-advanced-payment-method\"\n    }}>{`PayPal Payments Advanced payment method`}</h1>\n    <p>{`The PayPal Payments Advanced payment solution allows merchants to enable their online stores to collect payments directly via credit card or from the PayPal Credit service. If Payments Advanced has been configured to implement Express Checkout, use the `}<a parentName=\"p\" {...{\n        \"href\": \"payflow-express.md\"\n      }}>{`PayPal Express Checkout for Payflow payment method`}</a>{` instead.`}</p>\n    <p>{`From a GraphQL integration standpoint, PayPal Payments Advanced payment method is identical to the PayPal `}<a parentName=\"p\" {...{\n        \"href\": \"payflow-link.md\"\n      }}>{`Payflow Link`}</a>{` payment method, with the exception of the payment method `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{`. The PayPal `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.paypal.com/docs/classic/products/paypal-payments-advanced/\"\n      }}>{`Payments Advanced documentation`}</a>{` describes other ways in which the payment methods differ.`}</p>\n    <p>{`PayPal Payments Advanced is available in the US and Canada only.`}</p>\n    <h2 {...{\n      \"id\": \"paypal-payments-advanced-workflow\"\n    }}>{`PayPal Payments Advanced workflow`}</h2>\n    <p>{`The following diagram shows the workflow for placing an order when Payments Advanced is the selected payment method.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/commerce-webapi/assets/6bf24373e8589ebc7cf53bba29d988c9/paypal-payflow-link.svg\",\n        \"alt\": \"PayPal Payments Advanced sequence diagram\"\n      }}></img></p>\n\n    <PayflowLinkWorkflow mdxType=\"PayflowLinkWorkflow\" />\n    <h2 {...{\n      \"id\": \"additional-payment-information\"\n    }}>{`Additional Payment information`}</h2>\n    <h2 {...{\n      \"id\": \"setpaymentmethodoncart-mutation\"\n    }}><inlineCode parentName=\"h2\">{`setPaymentMethodOnCart`}</inlineCode>{` mutation`}</h2>\n    <p>{`When you set the payment method to PayPal Payments Advanced, you must set the `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` attribute to `}<inlineCode parentName=\"p\">{`payflow_advanced`}</inlineCode>{`. In addition, the payload must contain a `}<inlineCode parentName=\"p\">{`payflow_link`}</inlineCode>{` object, which defines the following attributes:`}</p>\n\n    <PayflowLinkAttributes mdxType=\"PayflowLinkAttributes\" />\n    <h3 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example usage`}</h3>\n    <p>{`The following example shows the `}<inlineCode parentName=\"p\">{`setPaymentMethodOnCart`}</inlineCode>{` mutation constructed for the Payments Advanced payment method.`}</p>\n    <p><strong parentName=\"p\">{`Request:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`mutation {\n  setPaymentMethodOnCart(input: {\n    payment_method: {\n      code: \"payflow_advanced\"\n      payflow_link: {\n        return_url: \"paypal/action/return.html\"\n        error_url: \"paypal/action/error.html\"\n        cancel_url: \"paypal/action/cancel.html\"\n        }\n      }\n    cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n    }) {\n        cart {\n          selected_payment_method {\n            code\n            title\n          }\n        }\n    }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Response:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"payflow_advanced\",\n          \"title\": \"Credit Card\"\n        }\n      }\n    }\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}